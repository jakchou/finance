/* 实体表 */
CREATE TABLE `entity2` (
`id` bigint NOT NULL COMMENT '主键',
`created_time` datetime NULL COMMENT '创建时间',
`updated_time` datetime NULL COMMENT '更新时间',
`created_by` varchar(256) NULL COMMENT '创建者',
`updated_by` varchar(256) NULL COMMENT '更新者',
PRIMARY KEY (`id`)
);


CREATE TABLE `entity1` (
`id` bigint NOT NULL COMMENT '主键',
`created_time` datetime NULL COMMENT '创建时间',
`updated_time` datetime NULL COMMENT '更新时间',
`created_by` varchar(256) NULL COMMENT '创建者',
`updated_by` varchar(256) NULL COMMENT '更新者',
PRIMARY KEY (`id`)
);


/* 定时任务默认表 */
CREATE TABLE `N7D45048_JOB_DETAILS` (
`SCHED_NAME` varchar(120) NOT NULL,
`JOB_NAME` varchar(200) NOT NULL,
`JOB_GROUP` varchar(200) NOT NULL,
`DESCRIPTION` varchar(250) NULL,
`JOB_CLASS_NAME` varchar(250) NOT NULL,
`IS_DURABLE` tinyint(1) NOT NULL,
`IS_NONCONCURRENT` tinyint(1) NOT NULL,
`IS_UPDATE_DATA` tinyint(1) NOT NULL,
`REQUESTS_RECOVERY` tinyint(1) NOT NULL,
`JOB_DATA` blob NULL,
PRIMARY KEY (`JOB_GROUP`,`SCHED_NAME`,`JOB_NAME`)
) COMMENT='存储每⼀个已配置的Job的详细信息，包括执⾏类名和job中附带的数据';


CREATE TABLE `N7D45048_TRIGGERS` (
`SCHED_NAME` varchar(120) NOT NULL,
`TRIGGER_NAME` varchar(200) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
`JOB_NAME` varchar(200) NOT NULL,
`JOB_GROUP` varchar(200) NOT NULL,
`DESCRIPTION` varchar(250) NULL,
`NEXT_FIRE_TIME` bigint(13) NULL,
`PREV_FIRE_TIME` bigint(13) NULL,
`PRIORITY` int NULL,
`TRIGGER_STATE` varchar(16) NOT NULL,
`TRIGGER_TYPE` varchar(8) NOT NULL,
`START_TIME` bigint(13) NOT NULL DEFAULT 0,
`END_TIME` bigint(13) NULL,
`CALENDAR_NAME` varchar(200) NULL,
`MISFIRE_INSTR` int(2) NULL,
`JOB_DATA` blob NULL,
PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) COMMENT='存储已配置的Trigger的信息';


CREATE TABLE `N7D45048_SIMPLE_TRIGGERS` (
`SCHED_NAME` varchar(120) NOT NULL,
`TRIGGER_NAME` varchar(200) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
`REPEAT_COUNT` bigint(7) NOT NULL DEFAULT 0,
`REPEAT_INTERVAL` bigint(12) NOT NULL DEFAULT 0,
`TIMES_TRIGGERED` bigint(10) NOT NULL DEFAULT 0,
PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) COMMENT='存储SimpleTrigger的信息，包括重复次数、间隔、以及已触的次数';


CREATE TABLE `N7D45048_CRON_TRIGGERS` (
`SCHED_NAME` varchar(120) NOT NULL,
`TRIGGER_NAME` varchar(200) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
`CRON_EXPRESSION` varchar(200) NOT NULL,
`TIME_ZONE_ID` varchar(80) NULL,
PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) COMMENT='存储CronTrigger，包括Cron表达式和时区信息';


CREATE TABLE `N7D45048_SIMPROP_TRIGGERS` (
`SCHED_NAME` varchar(120) NOT NULL,
`TRIGGER_NAME` varchar(200) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
`STR_PROP_1` varchar(512) NULL,
`STR_PROP_2` varchar(512) NULL,
`STR_PROP_3` varchar(512) NULL,
`INT_PROP_1` int NULL,
`INT_PROP_2` int NULL,
`LONG_PROP_1` bigint NULL,
`LONG_PROP_2` bigint NULL,
`DEC_PROP_1` double NULL,
`DEC_PROP_2` double NULL,
`BOOL_PROP_1` tinyint(1) NULL,
`BOOL_PROP_2` tinyint(1) NULL,
PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) COMMENT='存储CalendarIntervalTrigger和DailyTimeIntervalTrigger两种类型的触发器';


CREATE TABLE `N7D45048_BLOB_TRIGGERS` (
`SCHED_NAME` varchar(120) NOT NULL,
`TRIGGER_NAME` varchar(200) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
`BLOB_DATA` blob NULL,
PRIMARY KEY (`SCHED_NAME`,`TRIGGER_NAME`,`TRIGGER_GROUP`)
) COMMENT='Trigger作为Blob类型存储';


CREATE TABLE `N7D45048_CALENDARS` (
`SCHED_NAME` varchar(120) NOT NULL,
`CALENDAR_NAME` varchar(200) NOT NULL,
`CALENDAR` blob NULL,
PRIMARY KEY (`SCHED_NAME`,`CALENDAR_NAME`)
) COMMENT='存储Quartz的Calendar信息⽤于指定任务在某个具体的⽇或⽉执⾏';


CREATE TABLE `N7D45048_PAUSED_TRIGGER_GRPS` (
`SCHED_NAME` varchar(120) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
PRIMARY KEY (`SCHED_NAME`,`TRIGGER_GROUP`)
) COMMENT='存储已暂停的Trigger组的信息';


CREATE TABLE `N7D45048_FIRED_TRIGGERS` (
`SCHED_NAME` varchar(120) NOT NULL,
`ENTRY_ID` varchar(95) NOT NULL,
`TRIGGER_NAME` varchar(200) NOT NULL,
`TRIGGER_GROUP` varchar(200) NOT NULL,
`INSTANCE_NAME` varchar(200) NOT NULL,
`FIRED_TIME` bigint(13) NOT NULL DEFAULT 0,
`SCHED_TIME` bigint(13) NOT NULL DEFAULT 0,
`PRIORITY` int NOT NULL DEFAULT 0,
`STATE` varchar(16) NOT NULL,
`JOB_NAME` varchar(200) NULL,
`JOB_GROUP` varchar(200) NULL,
`IS_NONCONCURRENT` tinyint(1) NULL,
`REQUESTS_RECOVERY` tinyint(1) NULL,
PRIMARY KEY (`ENTRY_ID`,`SCHED_NAME`)
) COMMENT='存储与已触发的Trigger相关的状态信息，以及相关Job的执⾏信息';


CREATE TABLE `N7D45048_SCHEDULER_STATE` (
`SCHED_NAME` varchar(120) NOT NULL,
`INSTANCE_NAME` varchar(200) NOT NULL,
`LAST_CHECKIN_TIME` bigint(13) NOT NULL DEFAULT 0,
`CHECKIN_INTERVAL` bigint(13) NOT NULL DEFAULT 0,
PRIMARY KEY (`INSTANCE_NAME`,`SCHED_NAME`)
) COMMENT='存储少量的有关Scheduler的状态信息，和别的Scheduler实例';


CREATE TABLE `N7D45048_LOCKS` (
`SCHED_NAME` varchar(120) NOT NULL,
`LOCK_NAME` varchar(40) NOT NULL,
PRIMARY KEY (`LOCK_NAME`,`SCHED_NAME`)
) COMMENT='存储程序的悲观锁的信息';


