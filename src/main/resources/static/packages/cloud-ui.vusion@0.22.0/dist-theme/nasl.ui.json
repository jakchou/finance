[
  {
    "group": "Layout",
    "name": "ULinearLayout",
    "alias": "线性布局",
    "title": "线性布局",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-linear-layout",
    "description": "内部元素按照一定的规则布局",
    "icon": "linear-layout",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "style",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "行内",
              "icon": "layout-inline-block",
              "tooltip": "内联布局",
              "value": "inline"
            },
            {
              "title": "块级",
              "icon": "layout-block",
              "tooltip": "块级布局",
              "value": "block"
            },
            {
              "title": "弹性",
              "icon": "layout-flex",
              "tooltip": "弹性布局",
              "value": "flex"
            }
          ]
        },
        "name": "mode",
        "title": "布局模式",
        "tsType": "'inline' | 'block' | 'flex'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "block"
          },
          "playground": []
        },
        "tooltipLink": "http://help.lcap.163yun.com/1.%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/2.%E9%A1%B5%E9%9D%A2/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/01.%E5%B8%83%E5%B1%80/020.%E7%BA%BF%E6%80%A7%E5%B8%83%E5%B1%80.html",
        "docDescription": "内联布局：将当前元素修改为内联布局模式，各个内联布局模式的元素将默认排布在同一行中，若空间不足以排布下一个内联布局元素，则该元素将会换行。\n块级布局：将当前元素修改为块级布局模式，各个块级布局模式的元素之前和之后均会换行。\n弹性布局：在弹性布局模式中，子元素可以在任何方向上排布，也可以“弹性伸缩”其尺寸，既可以增加尺寸以填满未使用的空间，也可以收缩尺寸以避免溢出父元素。",
        "onChange": [
          {
            "clear": [
              "justify",
              "alignment",
              "wrap",
              "layout"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "style",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "横向排列",
              "icon": "flex-horizontal",
              "tooltip": "横向",
              "value": "horizontal"
            },
            {
              "title": "纵向排列",
              "icon": "flex-vertical",
              "tooltip": "纵向",
              "value": "vertical"
            }
          ]
        },
        "name": "direction",
        "title": "主轴方向",
        "tsType": "'horizontal' | 'vertical'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "horizontal"
          },
          "playground": []
        },
        "docDescription": "横向：内部子元素进行横向排布，建议内部子元素使用行内布局。\n纵向：内部子元素进行纵向排布，建议内部子元素使用块级布局。",
        "onChange": [
          {
            "clear": [
              "justify",
              "alignment"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "style",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "左对齐",
              "icon": "horizontal-justify-start",
              "tooltip": "左对齐",
              "value": "start"
            },
            {
              "title": "居中对齐",
              "icon": "horizontal-justify-center",
              "tooltip": "居中对齐",
              "value": "center"
            },
            {
              "title": "右对齐",
              "icon": "horizontal-justify-end",
              "tooltip": "右对齐",
              "value": "end"
            },
            {
              "title": "平均分布(两端不留空)",
              "icon": "horizontal-justify-space-between",
              "tooltip": "平均分布(两端不留空)",
              "if": "_ => _.mode === 'flex' || _.direction === 'horizontal'",
              "value": "space-between"
            },
            {
              "title": "平均分布",
              "icon": "horizontal-justify-space-around",
              "tooltip": "平均分布",
              "if": "_ => _.mode === 'flex'",
              "value": "space-around"
            }
          ]
        },
        "name": "justify",
        "title": "横轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "start"
          },
          "playground": []
        },
        "docDescription": "主轴方向为横向时：支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布，其中平均分布仅在弹性布局模式下展示。\n主轴方向为纵向时：支持左对齐、居中对齐、右对齐、占满容器宽度，其中占满容器宽度仅在弹性布局模式下展示。",
        "if": "_ => _.direction === 'horizontal' || _.mode === 'inline' && _.direction === 'vertical' || _.mode === 'block' && _.direction === 'vertical'",
        "onChange": [
          {
            "update": {
              "gap": "normal"
            },
            "if": "_ => _ === 'space-between'"
          },
          {
            "update": {
              "gap": "normal"
            },
            "if": "_ => _ === 'space-around'"
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "style",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "顶对齐",
              "icon": "horizontal-alignment-start",
              "tooltip": "顶对齐",
              "value": "start"
            },
            {
              "title": "垂直居中",
              "icon": "horizontal-alignment-center",
              "tooltip": "垂直居中",
              "value": "center"
            },
            {
              "title": "底对齐",
              "icon": "horizontal-alignment-end",
              "tooltip": "底对齐",
              "value": "end"
            },
            {
              "title": "行内文字基线对齐",
              "icon": "horizontal-alignment-baseline",
              "tooltip": "行内文字基线对齐",
              "value": "baseline"
            },
            {
              "title": "占满容器高度",
              "icon": "horizontal-alignment-stretch",
              "tooltip": "占满容器高度",
              "value": "stretch"
            }
          ]
        },
        "name": "alignment",
        "title": "纵轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'baseline' | 'stretch'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "stretch"
          },
          "playground": []
        },
        "docDescription": "主轴方向为横向时：支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。\n主轴方向为纵向时：支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
        "if": "_ => _.mode === 'flex' && _.direction === 'horizontal'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "style",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "左对齐",
              "icon": "vertical-alignment-start",
              "tooltip": "左对齐",
              "value": "start"
            },
            {
              "title": "居中对齐",
              "icon": "vertical-alignment-center",
              "tooltip": "居中对齐",
              "value": "center"
            },
            {
              "title": "右对齐",
              "icon": "vertical-alignment-end",
              "tooltip": "右对齐",
              "value": "end"
            },
            {
              "title": "拉伸子元素充满整个父元素空间",
              "icon": "vertical-alignment-stretch",
              "tooltip": "占满容器宽度",
              "value": "stretch"
            }
          ]
        },
        "name": "alignment",
        "title": "纵轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'stretch'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "stretch"
          },
          "playground": []
        },
        "docDescription": "主轴方向为横向时：支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。\n主轴方向为纵向时：支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
        "if": "_ => _.mode === 'flex' && _.direction === 'vertical'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "style",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "顶对齐",
              "icon": "vertical-justify-start",
              "tooltip": "顶对齐",
              "value": "start"
            },
            {
              "title": "垂直居中",
              "icon": "vertical-justify-center",
              "tooltip": "垂直居中",
              "value": "center"
            },
            {
              "title": "底对齐",
              "icon": "vertical-justify-end",
              "tooltip": "底对齐",
              "value": "end"
            },
            {
              "title": "平均分布(两端不留空)",
              "icon": "vertical-justify-space-between",
              "tooltip": "平均分布(两端不留空)",
              "value": "space-between"
            },
            {
              "title": "平均分布",
              "icon": "vertical-justify-space-around",
              "tooltip": "平均分布",
              "value": "space-around"
            }
          ]
        },
        "name": "justify",
        "title": "横轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "start"
          },
          "playground": []
        },
        "docDescription": "主轴方向为横向时：支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布，其中平均分布仅在弹性布局模式下展示。\n主轴方向为纵向时：支持左对齐、居中对齐、右对齐、占满容器宽度，其中占满容器宽度仅在弹性布局模式下展示。",
        "if": "_ => _.mode === 'flex' && _.direction === 'vertical'",
        "onChange": [
          {
            "update": {
              "gap": "normal"
            },
            "if": "_ => _ === 'space-between'"
          },
          {
            "update": {
              "gap": "normal"
            },
            "if": "_ => _ === 'space-around'"
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "style",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "子元素默认布局",
              "value": "none"
            },
            {
              "title": "子元素行内布局",
              "value": "inline"
            },
            {
              "title": "子元素块级布局",
              "value": "block"
            }
          ]
        },
        "name": "layout",
        "title": "子元素展示方式",
        "tsType": "'none' | 'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "none"
          },
          "playground": []
        },
        "description": "子元素行内展示或块级换行展示",
        "docDescription": "布局内各个组件的布局方式，支持默认、行内和块级三种布局方式。",
        "if": "_ => _.mode === 'inline' || _.mode === 'block'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "style",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "wrap",
        "title": "换行",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置弹性布局下子元素总宽度超出父级时子元素是否换行展示",
        "docDescription": "支持控制弹性布局模式下，子元素总宽度超过父级时是否换行展示，默认开启。",
        "if": "_ => _.mode === 'flex'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "loadingIcon",
        "title": "加载中图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "loading"
          },
          "playground": []
        },
        "description": "加载中状态显示的图标",
        "docDescription": "支持从图标库选择图标或上传自定义图标。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "loadingIconRotate",
        "title": "加载中图标旋转",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置加载中图标是否旋转，默认开启。",
        "docDescription": "支持控制加载中图标是否旋转，默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "loadingText",
        "title": "加载中文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "加载中状态显示的提示文案",
        "docDescription": "支持编辑组件加载中情况显示文案。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "style",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "收缩",
              "value": "shrink"
            },
            {
              "title": "无",
              "value": "none"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "gap",
        "title": "内容间隙",
        "tsType": "'shrink' | 'none' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "内容块间隙大小",
        "docDescription": "布局内各个组件之间的间隔，通常有收缩、无、小、正常、大，默认为正常。",
        "if": "_ => _.justify !== 'space-between' && _.justify !== 'space-around'"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "scroll",
        "title": "滚动时",
        "tsType": "(event: {\n  scrollTop: nasl.core.Integer;\n  scrollLeft: nasl.core.Integer;\n  scrollWidth: nasl.core.Integer;\n  scrollHeight: nasl.core.Integer;\n  clientWidth: nasl.core.Integer;\n  clientHeight: nasl.core.Integer;\n}) => any",
        "description": "滚动时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "打开加载中",
        "params": [],
        "returns": [],
        "name": "openLoading",
        "title": "打开加载中"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭加载中",
        "params": [],
        "returns": [],
        "name": "closeLoading",
        "title": "关闭加载中"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "内容"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "单行排布",
        "description": "",
        "code": "<template>\n<u-linear-layout direction=\"horizontal\" :wrap=\"true\">\n</u-linear-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-layout.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-layout.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "多行排布",
        "description": "",
        "code": "<template>\n<u-linear-layout direction=\"vertical\" :wrap=\"true\">\n<u-linear-layout :wrap=\"true\">\n</u-linear-layout>\n<u-linear-layout :wrap=\"true\">\n</u-linear-layout>\n</u-linear-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-layout.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-layout.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "两端排布",
        "description": "",
        "code": "<template>\n<u-linear-layout justify=\"space-between\" :wrap=\"true\">\n<u-linear-layout :wrap=\"true\">\n</u-linear-layout>\n<u-linear-layout :wrap=\"true\">\n</u-linear-layout>\n</u-linear-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-layout.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-layout.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Layout",
    "name": "UAbsoluteLayout",
    "alias": "自由布局",
    "title": "自由布局",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-absolute-layout",
    "description": "拖拽内部元素到任意位置",
    "icon": "absolute-layout",
    "tsTypeParams": "",
    "props": [],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "内容"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "自由布局",
        "description": "",
        "code": "<template>\n<u-absolute-layout>\n</u-absolute-layout>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Layout",
    "name": "UGridLayout",
    "alias": "栅格布局",
    "title": "栅格布局",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-grid-layout",
    "description": "内部元素按照一定的规则布局",
    "icon": "grid-layout",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "紧凑（-1）",
              "value": "compact"
            },
            {
              "title": "无（0）",
              "value": "none"
            },
            {
              "title": "小（8）",
              "value": "small"
            },
            {
              "title": "正常（16）",
              "value": "normal"
            },
            {
              "title": "大（32）",
              "value": "large"
            }
          ]
        },
        "name": "gap",
        "title": "行间隔",
        "tsType": "'compact' | 'none' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "栅格行之间的间隔",
        "docDescription": "支持修改栅格行之间的间隔，支持紧凑（-1）、无（0）、小（8）、正常（16）、大（32）共6种间隔模式。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "scroll",
        "title": "滚动时",
        "tsType": "(event: {\n  scrollTop: nasl.core.Integer;\n  scrollLeft: nasl.core.Integer;\n  scrollWidth: nasl.core.Integer;\n  scrollHeight: nasl.core.Integer;\n  clientWidth: nasl.core.Integer;\n  clientHeight: nasl.core.Integer;\n}) => any",
        "description": "滚动时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "插入一行",
            "code": "<u-grid-layout-row :repeat=\"24\"><u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column><u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column><u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column></u-grid-layout-row>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UGridLayoutRow>",
        "params": [],
        "description": "插入`<u-grid-layout-row>`或`<u-grid-layout-column>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UGridLayoutRow",
        "kebabName": "u-grid-layout-row",
        "title": "栅格行",
        "description": "内部元素行布局",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "左对齐",
                  "icon": "horizontal-justify-start",
                  "tooltip": "左对齐",
                  "value": "start"
                },
                {
                  "title": "居中对齐",
                  "icon": "horizontal-justify-center",
                  "tooltip": "居中对齐",
                  "value": "center"
                },
                {
                  "title": "右对齐",
                  "icon": "horizontal-justify-end",
                  "tooltip": "右对齐",
                  "value": "end"
                },
                {
                  "title": "平均分布(两端不留空)",
                  "icon": "horizontal-justify-space-between",
                  "tooltip": "平均分布(两端不留空)",
                  "value": "space-between"
                },
                {
                  "title": "水平分布-左右留空",
                  "icon": "horizontal-justify-space-around",
                  "tooltip": "平均分布",
                  "value": "space-around"
                }
              ]
            },
            "name": "justify",
            "title": "横轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "start"
              },
              "playground": []
            },
            "docDescription": "支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "顶对齐",
                  "icon": "horizontal-alignment-start",
                  "tooltip": "顶对齐",
                  "value": "start"
                },
                {
                  "title": "垂直居中",
                  "icon": "horizontal-alignment-center",
                  "tooltip": "垂直居中",
                  "value": "center"
                },
                {
                  "title": "底对齐",
                  "icon": "horizontal-alignment-end",
                  "tooltip": "底对齐",
                  "value": "end"
                },
                {
                  "title": "行内文字基线对齐",
                  "icon": "horizontal-alignment-baseline",
                  "tooltip": "行内文字基线对齐",
                  "value": "baseline"
                },
                {
                  "title": "占满容器高度",
                  "icon": "horizontal-alignment-stretch",
                  "tooltip": "占满容器高度",
                  "value": "stretch"
                }
              ]
            },
            "name": "alignment",
            "title": "纵轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'baseline' | 'stretch'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "stretch"
              },
              "playground": []
            },
            "docDescription": "支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter",
              "min": 1,
              "max": 24
            },
            "name": "repeat",
            "title": "栅格数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "12",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "默认24，可设置栅格行大小",
            "docDescription": "支持设置栅格行大小，默认为24。"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "无（0）",
                  "value": "none"
                },
                {
                  "title": "迷你（4）",
                  "value": "mini"
                },
                {
                  "title": "小（8）",
                  "value": "small"
                },
                {
                  "title": "正常（16）",
                  "value": "normal"
                },
                {
                  "title": "大（24）",
                  "value": "large"
                },
                {
                  "title": "巨大（32）",
                  "value": "huge"
                }
              ]
            },
            "name": "gap",
            "title": "列间隔",
            "tsType": "'none' | 'mini' | 'small' | 'normal' | 'large' | 'huge'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "normal"
              },
              "playground": []
            },
            "description": "栅格列之间的间隔",
            "docDescription": "栅格列之间的间隔，支持无（0）、迷你（4）、小（8）、正常（16）、巨大（32）共6种间隔模式。"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "插入一列",
                "code": "<u-grid-layout-column :span=\"1\"></u-grid-layout-column>"
              }
            ],
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<UGridLayoutColumn>",
            "params": [],
            "description": "插入`<u-grid-layout-column>`子组件。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UGridLayoutColumn",
        "kebabName": "u-grid-layout-column",
        "title": "栅格列",
        "description": "内部元素行内列布局",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "块级",
                  "icon": "layout-inline-block",
                  "tooltip": "内联布局",
                  "value": "inline"
                },
                {
                  "title": "弹性",
                  "icon": "layout-flex",
                  "tooltip": "弹性布局",
                  "value": "flex"
                }
              ]
            },
            "name": "mode",
            "title": "布局模式",
            "tsType": "'inline' | 'flex'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "inline"
              },
              "playground": []
            },
            "tooltipLink": "http://help.lcap.163yun.com/1.%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/2.%E9%A1%B5%E9%9D%A2/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/01.%E5%B8%83%E5%B1%80/030.%E6%A0%85%E6%A0%BC%E5%B8%83%E5%B1%80.html",
            "docDescription": "内联布局：将当前元素修改为内联布局模式，各个内联布局模式的元素将默认排布在同一行中，若空间不足以排布下一个内联布局元素，则该元素将会换行。弹性布局：在弹性布局模式中，子元素可以在任何方向上排布，也可以“弹性伸缩”其尺寸，既可以增加尺寸以填满未使用的空间，也可以收缩尺寸以避免溢出父元素。",
            "onChange": [
              {
                "clear": [
                  "justify",
                  "alignment",
                  "wrap",
                  "gap"
                ]
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "横向排列",
                  "icon": "flex-horizontal",
                  "tooltip": "横向",
                  "value": "horizontal"
                },
                {
                  "title": "纵向排列",
                  "icon": "flex-vertical",
                  "tooltip": "纵向",
                  "value": "vertical"
                }
              ]
            },
            "name": "direction",
            "title": "主轴方向",
            "tsType": "'horizontal' | 'vertical'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "horizontal"
              },
              "playground": []
            },
            "docDescription": "横向：内部子元素进行横向排布，建议内部子元素使用行内布局。纵向：内部子元素进行纵向排布，建议内部子元素使用块级布局。",
            "if": "_ => _.mode === 'flex'",
            "onChange": [
              {
                "clear": [
                  "justify",
                  "alignment"
                ]
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "左对齐",
                  "icon": "horizontal-justify-start",
                  "tooltip": "左对齐",
                  "value": "start"
                },
                {
                  "title": "居中对齐",
                  "icon": "horizontal-justify-center",
                  "tooltip": "居中对齐",
                  "value": "center"
                },
                {
                  "title": "右对齐",
                  "icon": "horizontal-justify-end",
                  "tooltip": "右对齐",
                  "value": "end"
                },
                {
                  "title": "平均分布(两端不留空)",
                  "icon": "horizontal-justify-space-between",
                  "tooltip": "平均分布(两端不留空)",
                  "value": "space-between"
                },
                {
                  "title": "平均分布",
                  "icon": "horizontal-justify-space-around",
                  "tooltip": "平均分布",
                  "value": "space-around"
                }
              ]
            },
            "name": "justify",
            "title": "横轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "start"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布。主轴方向为纵向时：支持左对齐、居中对齐、右对齐、占满容器宽度。",
            "if": "_ => _.mode === 'flex' && _.direction === 'horizontal'",
            "onChange": [
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-between'"
              },
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-around'"
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "顶对齐",
                  "icon": "horizontal-alignment-start",
                  "tooltip": "顶对齐",
                  "value": "start"
                },
                {
                  "title": "垂直居中",
                  "icon": "horizontal-alignment-center",
                  "tooltip": "垂直居中",
                  "value": "center"
                },
                {
                  "title": "底对齐",
                  "icon": "horizontal-alignment-end",
                  "tooltip": "底对齐",
                  "value": "end"
                },
                {
                  "title": "行内文字基线对齐",
                  "icon": "horizontal-alignment-baseline",
                  "tooltip": "行内文字基线对齐",
                  "value": "baseline"
                },
                {
                  "title": "占满容器高度",
                  "icon": "horizontal-alignment-stretch",
                  "tooltip": "占满容器高度",
                  "value": "stretch"
                }
              ]
            },
            "name": "alignment",
            "title": "纵轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'baseline' | 'stretch'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "stretch"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。主轴方向为纵向时：支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
            "if": "_ => _.mode === 'flex' && _.direction === 'horizontal'"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "左对齐",
                  "icon": "vertical-alignment-start",
                  "tooltip": "左对齐",
                  "value": "start"
                },
                {
                  "title": "居中对齐",
                  "icon": "vertical-alignment-center",
                  "tooltip": "居中对齐",
                  "value": "center"
                },
                {
                  "title": "右对齐",
                  "icon": "vertical-alignment-end",
                  "tooltip": "右对齐",
                  "value": "end"
                },
                {
                  "title": "拉伸子元素充满整个父元素空间",
                  "icon": "vertical-alignment-stretch",
                  "tooltip": "占满容器宽度",
                  "value": "stretch"
                }
              ]
            },
            "name": "alignment",
            "title": "纵轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'stretch'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "stretch"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。主轴方向为纵向时：支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
            "if": "_ => _.mode === 'flex' && _.direction === 'vertical'"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "顶对齐",
                  "icon": "vertical-justify-start",
                  "tooltip": "顶对齐",
                  "value": "start"
                },
                {
                  "title": "垂直居中",
                  "icon": "vertical-justify-center",
                  "tooltip": "垂直居中",
                  "value": "center"
                },
                {
                  "title": "底对齐",
                  "icon": "vertical-justify-end",
                  "tooltip": "底对齐",
                  "value": "end"
                },
                {
                  "title": "平均分布(两端不留空)",
                  "icon": "vertical-justify-space-between",
                  "tooltip": "平均分布(两端不留空)",
                  "value": "space-between"
                },
                {
                  "title": "平均分布",
                  "icon": "vertical-justify-space-around",
                  "tooltip": "平均分布",
                  "value": "space-around"
                }
              ]
            },
            "name": "justify",
            "title": "横轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "start"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布。 主轴方向为纵向时：支持左对齐、居中对齐、右对齐、占满容器宽度。",
            "if": "_ => _.mode === 'flex' && _.direction === 'vertical'",
            "onChange": [
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-between'"
              },
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-around'"
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "span",
            "title": "占据栅格数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "1",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "列占据栅格行的栅格数",
            "docDescription": "支持设置当前栅格列占据的栅格数，不能超过当前栅格行栅格数。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "offset",
            "title": "偏移栅格数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "0",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "列偏移的栅格数",
            "docDescription": "支持设置栅格列偏移数，控制当前栅格列与其左侧栅格列的距离，处于当前栅格列右侧的栅格列也会同步偏移。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "pull",
            "title": "左移动栅格数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "0",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "列向左移动的栅格数",
            "docDescription": "向左移动的栅格数，支持栅格互相重合。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "push",
            "title": "右移动栅格数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "0",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "列向右移动的栅格数",
            "docDescription": "向右移动的栅格数，支持栅格互相重合。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "wrap",
            "title": "换行",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "true"
              },
              "playground": []
            },
            "description": "设置弹性布局下子元素总宽度超出父级时子元素是否换行展示",
            "docDescription": "支持控制弹性布局模式下，子元素总宽度超过父级时是否换行展示，默认开启。",
            "if": "_ => _.mode === 'flex'"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "style",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "收缩",
                  "value": "shrink"
                },
                {
                  "title": "无",
                  "value": "none"
                },
                {
                  "title": "小",
                  "value": "small"
                },
                {
                  "title": "正常",
                  "value": "normal"
                },
                {
                  "title": "大",
                  "value": "large"
                }
              ]
            },
            "name": "gap",
            "title": "内容间隙",
            "tsType": "'shrink' | 'none' | 'small' | 'normal' | 'large'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "normal"
              },
              "playground": []
            },
            "description": "内容块间隙大小",
            "docDescription": "布局内各个组件之间的间隔，通常有收缩、无、小、正常、大，默认为正常。",
            "if": "_ => _.mode === 'flex' && _.justify !== 'space-between' && _.justify !== 'space-around'"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "responsive",
            "title": "响应窗口变化时",
            "tsType": "(event: any) => any",
            "description": "响应式布局引发栅格变化时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入需要布局的元素。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "3列样式（8:8:8）",
        "description": "",
        "code": "<template>\n<u-grid-layout>\n<u-grid-layout-row :repeat=\"24\">\n<u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column>\n<u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column>\n<u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column>\n</u-grid-layout-row>\n</u-grid-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-grid-layout.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-grid-layout.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "4列样式（2:4:8:10）",
        "description": "",
        "code": "<template>\n<u-grid-layout>\n<u-grid-layout-row :repeat=\"24\">\n<u-grid-layout-column :span=\"2\" :wrap=\"true\"></u-grid-layout-column>\n<u-grid-layout-column :span=\"4\" :wrap=\"true\"></u-grid-layout-column>\n<u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column>\n<u-grid-layout-column :span=\"10\" :wrap=\"true\"></u-grid-layout-column>\n</u-grid-layout-row>\n</u-grid-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-grid-layout.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-grid-layout.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "2列样式（8:16）",
        "description": "",
        "code": "<template>\n<u-grid-layout>\n<u-grid-layout-row :repeat=\"24\">\n<u-grid-layout-column :span=\"8\" :wrap=\"true\"></u-grid-layout-column>\n<u-grid-layout-column :span=\"16\" :wrap=\"true\"></u-grid-layout-column>\n</u-grid-layout-row>\n</u-grid-layout>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-grid-layout.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Layout",
    "name": "UMultiLayout",
    "alias": "分栏布局",
    "title": "分栏布局",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-multi-layout",
    "description": "一定的规则布局",
    "icon": "multi-layout",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "横向排列",
              "icon": "flex-horizontal",
              "tooltip": "横向",
              "value": "horizontal"
            },
            {
              "title": "纵向排列",
              "icon": "flex-vertical",
              "tooltip": "纵向",
              "value": "vertical"
            }
          ]
        },
        "name": "direction",
        "title": "主轴方向",
        "tsType": "'horizontal' | 'vertical'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "horizontal"
          },
          "playground": []
        },
        "docDescription": "横向：内部子元素进行横向排布。纵向：内部子元素进行纵向排布。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "左对齐",
              "icon": "horizontal-justify-start",
              "tooltip": "左对齐",
              "value": "start"
            },
            {
              "title": "居中对齐",
              "icon": "horizontal-justify-center",
              "tooltip": "居中对齐",
              "value": "center"
            },
            {
              "title": "右对齐",
              "icon": "horizontal-justify-end",
              "tooltip": "右对齐",
              "value": "end"
            },
            {
              "title": "平均分布(两端不留空)",
              "icon": "horizontal-justify-space-between",
              "tooltip": "平均分布(两端不留空)",
              "value": "space-between"
            },
            {
              "title": "平均分布",
              "icon": "horizontal-justify-space-around",
              "tooltip": "平均分布",
              "value": "space-around"
            }
          ]
        },
        "name": "justify",
        "title": "横轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "start"
          },
          "playground": []
        },
        "docDescription": "支持左对齐、居中对齐、右对齐、占满容器宽度。",
        "if": "_ => _.direction === 'horizontal'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "顶对齐",
              "icon": "horizontal-alignment-start",
              "tooltip": "顶对齐",
              "value": "start"
            },
            {
              "title": "垂直居中",
              "icon": "horizontal-alignment-center",
              "tooltip": "垂直居中",
              "value": "center"
            },
            {
              "title": "底对齐",
              "icon": "horizontal-alignment-end",
              "tooltip": "底对齐",
              "value": "end"
            },
            {
              "title": "行内文字基线对齐",
              "icon": "horizontal-alignment-baseline",
              "tooltip": "行内文字基线对齐",
              "value": "baseline"
            },
            {
              "title": "占满容器高度",
              "icon": "horizontal-alignment-stretch",
              "tooltip": "占满容器高度",
              "value": "stretch"
            }
          ]
        },
        "name": "alignment",
        "title": "纵轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'baseline' | 'stretch'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "stretch"
          },
          "playground": []
        },
        "docDescription": "支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
        "if": "_ => _.direction === 'horizontal'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "左对齐",
              "icon": "vertical-alignment-start",
              "tooltip": "左对齐",
              "value": "start"
            },
            {
              "title": "居中对齐",
              "icon": "vertical-alignment-center",
              "tooltip": "居中对齐",
              "value": "center"
            },
            {
              "title": "右对齐",
              "icon": "vertical-alignment-end",
              "tooltip": "右对齐",
              "value": "end"
            },
            {
              "title": "拉伸子元素充满整个父元素空间",
              "icon": "vertical-alignment-stretch",
              "tooltip": "占满容器宽度",
              "value": "stretch"
            }
          ]
        },
        "name": "alignment",
        "title": "纵轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'stretch'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "stretch"
          },
          "playground": []
        },
        "docDescription": "支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
        "if": "_ => _.direction === 'vertical'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "CapsulesSetter",
          "options": [
            {
              "title": "顶对齐",
              "icon": "vertical-justify-start",
              "tooltip": "顶对齐",
              "value": "start"
            },
            {
              "title": "垂直居中",
              "icon": "vertical-justify-center",
              "tooltip": "垂直居中",
              "value": "center"
            },
            {
              "title": "底对齐",
              "icon": "vertical-justify-end",
              "tooltip": "底对齐",
              "value": "end"
            },
            {
              "title": "平均分布(两端不留空)",
              "icon": "vertical-justify-space-between",
              "tooltip": "平均分布(两端不留空)",
              "value": "space-between"
            },
            {
              "title": "平均分布",
              "icon": "vertical-justify-space-around",
              "tooltip": "平均分布",
              "value": "space-around"
            }
          ]
        },
        "name": "justify",
        "title": "横轴对齐",
        "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "start"
          },
          "playground": []
        },
        "docDescription": "支持左对齐、居中对齐、右对齐、占满容器宽度。",
        "if": "_ => _.direction === 'vertical'"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "style",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "收缩",
              "value": "shrink"
            },
            {
              "title": "无",
              "value": "none"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "gap",
        "title": "内容间隙",
        "tsType": "'shrink' | 'none' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "none"
          },
          "playground": []
        },
        "description": "布局中各分栏间的空隙大小",
        "docDescription": "分栏布局中各分栏间的空隙大小，缺省为无，支持收缩、无、小、正常、大共5个级别。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "scroll",
        "title": "滚动时",
        "tsType": "(event: {\n  scrollTop: nasl.core.Integer;\n  scrollLeft: nasl.core.Integer;\n  scrollWidth: nasl.core.Integer;\n  scrollHeight: nasl.core.Integer;\n  clientWidth: nasl.core.Integer;\n  clientHeight: nasl.core.Integer;\n}) => any",
        "description": "滚动时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "布局栏",
            "code": "<u-multi-layout-item></u-multi-layout-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UMultiLayoutItem>",
        "params": [],
        "description": "插入`<u-multi-layout-item>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UMultiLayoutItem",
        "kebabName": "u-multi-layout-item",
        "title": "布局栏",
        "description": "一定的规则布局",
        "icon": "multi-layout-item",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "块级",
                  "icon": "layout-inline-block",
                  "tooltip": "内联布局",
                  "value": "inline"
                },
                {
                  "title": "弹性",
                  "icon": "layout-flex",
                  "tooltip": "弹性布局",
                  "value": "flex"
                }
              ]
            },
            "name": "mode",
            "title": "布局模式",
            "tsType": "'inline' | 'flex'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "inline"
              },
              "playground": []
            },
            "tooltipLink": "http://help.lcap.163yun.com/1.%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/2.%E9%A1%B5%E9%9D%A2/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/01.%E5%B8%83%E5%B1%80/040.%E5%88%86%E6%A0%8F%E5%B8%83%E5%B1%80.html",
            "docDescription": "内联布局：将当前元素修改为内联布局模式，各个内联布局模式的元素将默认排布在同一行中，若空间不足以排布下一个内联布局元素，则该元素将会换行。- 弹性布局：在弹性布局模式中，子元素可以在任何方向上排布，也可以“弹性伸缩”其尺寸，既可以增加尺寸以填满未使用的空间，也可以收缩尺寸以避免溢出父元素。",
            "onChange": [
              {
                "clear": [
                  "justify",
                  "alignment",
                  "wrap"
                ]
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "横向排列",
                  "icon": "flex-horizontal",
                  "tooltip": "横向",
                  "value": "horizontal"
                },
                {
                  "title": "纵向排列",
                  "icon": "flex-vertical",
                  "tooltip": "纵向",
                  "value": "vertical"
                }
              ]
            },
            "name": "direction",
            "title": "主轴方向",
            "tsType": "'horizontal' | 'vertical'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "horizontal"
              },
              "playground": []
            },
            "description": "可更改布局的排列方向",
            "docDescription": "横向：内部子元素进行横向排布，建议内部子元素使用行内布局。 纵向：内部子元素进行纵向排布，建议内部子元素使用块级布局。",
            "if": "_ => _.mode === 'flex'",
            "onChange": [
              {
                "clear": [
                  "justify",
                  "alignment"
                ]
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "左对齐",
                  "icon": "horizontal-justify-start",
                  "tooltip": "左对齐",
                  "value": "start"
                },
                {
                  "title": "居中对齐",
                  "icon": "horizontal-justify-center",
                  "tooltip": "居中对齐",
                  "value": "center"
                },
                {
                  "title": "右对齐",
                  "icon": "horizontal-justify-end",
                  "tooltip": "右对齐",
                  "value": "end"
                },
                {
                  "title": "平均分布(两端不留空)",
                  "icon": "horizontal-justify-space-between",
                  "tooltip": "平均分布(两端不留空)",
                  "value": "space-between"
                },
                {
                  "title": "平均分布",
                  "icon": "horizontal-justify-space-around",
                  "tooltip": "平均分布",
                  "value": "space-around"
                }
              ]
            },
            "name": "justify",
            "title": "横轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "start"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布。主轴方向为纵向时：支持左对齐、居中对齐、右对齐、占满容器宽度。",
            "if": "_ => _.mode === 'flex' && _.direction === 'horizontal'",
            "onChange": [
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-between'"
              },
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-around'"
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "顶对齐",
                  "icon": "horizontal-alignment-start",
                  "tooltip": "顶对齐",
                  "value": "start"
                },
                {
                  "title": "垂直居中",
                  "icon": "horizontal-alignment-center",
                  "tooltip": "垂直居中",
                  "value": "center"
                },
                {
                  "title": "底对齐",
                  "icon": "horizontal-alignment-end",
                  "tooltip": "底对齐",
                  "value": "end"
                },
                {
                  "title": "行内文字基线对齐",
                  "icon": "horizontal-alignment-baseline",
                  "tooltip": "行内文字基线对齐",
                  "value": "baseline"
                },
                {
                  "title": "占满容器高度",
                  "icon": "horizontal-alignment-stretch",
                  "tooltip": "占满容器高度",
                  "value": "stretch"
                }
              ]
            },
            "name": "alignment",
            "title": "纵轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'baseline' | 'stretch'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "stretch"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。 主轴方向为纵向时：支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
            "if": "_ => _.mode === 'flex' && _.direction === 'horizontal'"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "左对齐",
                  "icon": "vertical-alignment-start",
                  "tooltip": "左对齐",
                  "value": "start"
                },
                {
                  "title": "居中对齐",
                  "icon": "vertical-alignment-center",
                  "tooltip": "居中对齐",
                  "value": "center"
                },
                {
                  "title": "右对齐",
                  "icon": "vertical-alignment-end",
                  "tooltip": "右对齐",
                  "value": "end"
                },
                {
                  "title": "拉伸子元素充满整个父元素空间",
                  "icon": "vertical-alignment-stretch",
                  "tooltip": "占满容器宽度",
                  "value": "stretch"
                }
              ]
            },
            "name": "alignment",
            "title": "纵轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'stretch'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "stretch"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持顶对齐、垂直居中、底对齐、行内文字基线对齐、占满容器高度。主轴方向为纵向时：支持顶对齐、垂直居中、底对齐、平均分布（两端不留空）、平均分布。",
            "if": "_ => _.mode === 'flex' && _.direction === 'vertical'"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "CapsulesSetter",
              "options": [
                {
                  "title": "顶对齐",
                  "icon": "vertical-justify-start",
                  "tooltip": "顶对齐",
                  "value": "start"
                },
                {
                  "title": "垂直居中",
                  "icon": "vertical-justify-center",
                  "tooltip": "垂直居中",
                  "value": "center"
                },
                {
                  "title": "底对齐",
                  "icon": "vertical-justify-end",
                  "tooltip": "底对齐",
                  "value": "end"
                },
                {
                  "title": "平均分布(两端不留空)",
                  "icon": "vertical-justify-space-between",
                  "tooltip": "平均分布(两端不留空)",
                  "value": "space-between"
                },
                {
                  "title": "平均分布",
                  "icon": "vertical-justify-space-around",
                  "tooltip": "平均分布",
                  "value": "space-around"
                }
              ]
            },
            "name": "justify",
            "title": "横轴对齐",
            "tsType": "'start' | 'center' | 'end' | 'space-between' | 'space-around'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "start"
              },
              "playground": []
            },
            "docDescription": "主轴方向为横向时：支持左对齐、居中对齐、右对齐、平均分布（两端不留空）、平均分布。主轴方向为纵向时：支持左对齐、居中对齐、右对齐、占满容器宽度。",
            "if": "_ => _.mode === 'flex' && _.direction === 'vertical'",
            "onChange": [
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-between'"
              },
              {
                "update": {
                  "gap": "normal"
                },
                "if": "_ => _ === 'space-around'"
              }
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "style",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "收缩",
                  "value": "shrink"
                },
                {
                  "title": "无",
                  "value": "none"
                },
                {
                  "title": "小",
                  "value": "small"
                },
                {
                  "title": "正常",
                  "value": "normal"
                },
                {
                  "title": "大",
                  "value": "large"
                }
              ]
            },
            "name": "gap",
            "title": "内容间隙",
            "tsType": "'shrink' | 'none' | 'small' | 'normal' | 'large'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "none"
              },
              "playground": []
            },
            "description": "内容块间隙大小",
            "docDescription": "布局内各个组件之间的间隔，通常有收缩、无、小、正常、大，默认为无。",
            "if": "_ => _.mode === 'flex' && _.justify !== 'space-between' && _.justify !== 'space-around'"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下并释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "dblclick",
            "title": "双击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上双击鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "contextmenu",
            "title": "右键点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在右键菜单显示前触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mousedown",
            "title": "鼠标按下",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseup",
            "title": "鼠标释放",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseenter",
            "title": "鼠标移入",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移入元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseleave",
            "title": "鼠标移出",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移出元素时触发。"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "内容"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "两栏-左侧固定",
        "description": "",
        "code": "<template>\n<u-multi-layout direction=\"vertical\">\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n<u-multi-layout>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n</u-multi-layout>\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "三栏-常规",
        "description": "",
        "code": "<template>\n<u-multi-layout direction=\"vertical\">\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n<u-multi-layout>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n</u-multi-layout>\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/1.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "三栏-全部",
        "description": "",
        "code": "<template>\n<u-multi-layout direction=\"vertical\">\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n<u-multi-layout>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n</u-multi-layout>\n</u-multi-layout-item>\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/2.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "通栏-纵向",
        "description": "",
        "code": "<template>\n<u-multi-layout direction=\"vertical\">\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/3.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "通栏-横向",
        "description": "",
        "code": "<template>\n<u-multi-layout>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/4.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "两栏-右侧固定",
        "description": "",
        "code": "<template>\n<u-multi-layout direction=\"vertical\">\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n<u-multi-layout>\n<u-multi-layout-item>\n</u-multi-layout-item>\n<u-multi-layout-item style=\"width: 200px;\">\n</u-multi-layout-item>\n</u-multi-layout>\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/5.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "三栏-双左栏",
        "description": "",
        "code": "<template>\n<u-multi-layout direction=\"vertical\">\n<u-multi-layout-item style=\"height: 60px;\">\n</u-multi-layout-item>\n<u-multi-layout-item>\n<u-multi-layout>\n<u-multi-layout-item style=\"width: 400px;\">\n<u-multi-layout>\n<u-multi-layout-item>\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n</u-multi-layout>\n</u-multi-layout-item>\n<u-multi-layout-item>\n</u-multi-layout-item>\n</u-multi-layout>\n</u-multi-layout-item>\n</u-multi-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-multi-layout.vue/screenshots/6.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "UCrumb",
    "alias": "面包屑",
    "title": "面包屑",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-crumb",
    "description": "导航指引",
    "icon": "crumb",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "auto",
        "title": "自动生成",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否自动根据子页面配置的面包屑属性自动生成",
        "docDescription": "支持控制面包屑生成方式。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "基础样式",
              "value": "arrow"
            },
            {
              "title": "分隔符样式",
              "value": "slash"
            }
          ]
        },
        "name": "separator",
        "title": "样式类型",
        "tsType": "'arrow' | 'slash'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "arrow"
          },
          "playground": []
        },
        "description": "设置面包屑分隔样式类型，基础样式为箭头，分隔符样式为斜杠",
        "docDescription": "支持控制面包屑样式，包含基础样式和分隔符样式。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "icon",
        "title": "显示面包屑图标",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "支持控制面包屑选项图标显隐，开启后显示面包屑选项图标。"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "面包屑选项",
            "code": "<u-crumb-item><u-text text=\"面包屑\"></u-text></u-crumb-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UCrumbItem>",
        "params": [],
        "description": "插入`<u-crumb-item>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCrumbItem",
        "kebabName": "u-crumb-item",
        "title": "面包屑选项",
        "description": "面包屑选项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "icon",
            "title": "图标",
            "tsType": "nasl.core.String",
            "docDescription": "支持从图标库选择或上传自定义图标。"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                },
                {
                  "title": "下载链接",
                  "value": "download"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination' | 'download'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            },
            "docDescription": "支持页面跳转、下载链接。"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接地址",
            "tsType": "nasl.core.String",
            "docDescription": "设置链接路径。"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "新窗口",
                  "value": "_blank"
                },
                {
                  "title": "当前窗口",
                  "value": "_self"
                },
                {
                  "title": "父级窗口",
                  "value": "_parent"
                },
                {
                  "title": "顶级窗口",
                  "value": "_top"
                }
              ]
            },
            "name": "target",
            "title": "链接打开方式",
            "tsType": "'_blank' | '_self' | '_parent' | '_top'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "_self"
              },
              "playground": []
            },
            "description": "链接打开后的展示方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
            "docDescription": "可选新窗口、当前窗口、父级窗口或顶级窗口，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口。"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）。"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下并释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "dblclick",
            "title": "双击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上双击鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "contextmenu",
            "title": "右键点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在右键菜单显示前触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mousedown",
            "title": "鼠标按下",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseup",
            "title": "鼠标释放",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseenter",
            "title": "鼠标移入",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移入元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseleave",
            "title": "鼠标移出",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移出元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "focus",
            "title": "获得焦点",
            "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "获得焦点时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "blur",
            "title": "失去焦点",
            "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "失去焦点时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "before-navigate",
            "title": "导航前",
            "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
            "description": "使用 router 相关属性切换路由前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "navigate",
            "title": "导航",
            "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
            "description": "使用router相关属性切换路由时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "手动面包屑",
        "description": "",
        "code": "<template>\n<u-crumb :icon=\"false\">\n<u-crumb-item icon=\"home\"><u-text text=\"主页面\"></u-text></u-crumb-item>\n<u-crumb-item icon=\"user\"><u-text text=\"一级子页面\"></u-text></u-crumb-item>\n<u-crumb-item icon=\"task\"><u-text text=\"二级子页面\"></u-text></u-crumb-item>\n</u-crumb>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-crumb.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-crumb.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "自动面包屑",
        "description": "",
        "code": "<template>\n<u-crumb auto></u-crumb>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-crumb.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-crumb.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "图标面包屑",
        "description": "",
        "code": "<template>\n<u-crumb icon>\n<u-crumb-item icon=\"home\"><u-text text=\"主页面\"></u-text></u-crumb-item>\n<u-crumb-item icon=\"user\"><u-text text=\"一级子页面\"></u-text></u-crumb-item>\n<u-crumb-item icon=\"task\"><u-text text=\"二级子页面\"></u-text></u-crumb-item>\n</u-crumb>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-crumb.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "USidebar",
    "alias": "侧边栏",
    "title": "侧边栏",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-sidebar",
    "description": "通常用于页面左侧的导航栏。",
    "icon": "sidebar",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "hasDataSource",
        "title": "数据源配置",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "onChange": [
          {
            "clear": [
              "dataSource",
              "dataSchema",
              "textField",
              "toField",
              "iconField",
              "valueField",
              "parentField",
              "linkTypeField",
              "targetField"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ],
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于显示文本的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "iconField",
        "title": "图标属性字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "icon"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于图标的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "toField",
        "title": "跳转链接字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "to"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于跳转链接的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => V",
        "description": "集合的元素类型中，用于标识父节点的属性",
        "docDescription": "集合的元素类型中，用于标识父级字段的属性，支持自定义变更",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "router",
        "title": "使用路由",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否根据 vue-router 来控制选择哪一项",
        "docDescription": "设置是否根据vue-router来控制选择哪一项，默认关闭。开启后当前所在的侧边栏项底部会有标识，",
        "onChange": [
          {
            "clear": [
              "value"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "nasl.core.Any",
        "description": "当前选中的值",
        "docDescription": "当前选择的值，值仅在不适用路由下支持编辑",
        "if": "_ => _.router === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "collapsible",
        "title": "菜单项可折叠",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置菜单项是否可以展开/折叠",
        "docDescription": "设置分组是否可折叠。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "accordion",
        "title": "手风琴模式",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否每次只展开一个",
        "docDescription": " 开启后每次仅会展开一个分组。",
        "if": "_ => _.collapsible === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "整行点击均可触发",
              "value": "click"
            },
            {
              "title": "仅点击小箭头时触发",
              "value": "click-expander"
            }
          ]
        },
        "name": "expandTrigger",
        "title": "展开触发方式",
        "tsType": "'click' | 'click-expander'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "description": "展开/折叠操作的触发方式",
        "docDescription": "支持整行点击均可触发和仅点击小箭头时触发两种方式",
        "if": "_ => _.collapsible === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "enableCollapse",
        "title": "侧边栏可折叠",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置侧边栏是否可以展开/折叠"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "收起",
              "value": "fold"
            },
            {
              "title": "展开",
              "value": "expand"
            }
          ]
        },
        "name": "collapseMode",
        "title": "默认状态",
        "tsType": "'fold' | 'expand'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "expand"
          },
          "playground": []
        },
        "description": "侧边栏是否折叠",
        "if": "_ => _.enableCollapse === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "expandIcon",
        "title": "展开图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "expand"
          },
          "playground": []
        },
        "description": "侧边栏展开图标",
        "if": "_ => _.enableCollapse === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "foldIcon",
        "title": "折叠图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "fold"
          },
          "playground": []
        },
        "description": "侧边栏折叠图标",
        "if": "_ => _.enableCollapse === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项后触发。"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "展开/折叠所有分组",
        "params": [
          {
            "concept": "Param",
            "name": "expanded",
            "description": "'展开/折叠'"
          }
        ],
        "returns": [],
        "name": "toggleAll",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "侧边栏分组",
            "code": "<u-sidebar-group><template #title><u-text text=\"分组\"></u-text></template><u-sidebar-item><u-text text=\"侧边栏项\"></u-text></u-sidebar-item></u-sidebar-group>"
          },
          {
            "title": "侧边栏项",
            "code": "<u-sidebar-item><u-text text=\"侧边栏项\"></u-text></u-sidebar-item>"
          },
          {
            "title": "分隔线",
            "code": "<u-sidebar-divider></u-sidebar-divider>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<USidebarGroup | USidebarItem | USidebarDivider>",
        "params": [],
        "description": "插入`<u-sidebar-item>`、`<u-sidebar-divider>`或`<u-sidebar-group>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USidebarItem",
        "kebabName": "u-sidebar-item",
        "title": "侧边栏项",
        "description": "侧边栏项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "nasl.core.String",
            "description": "用于标识此项的值",
            "docDescription": "用于标识此项的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "icon",
            "title": "图标",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": ""
              },
              "playground": []
            },
            "docDescription": "支持从图标库选择图标或上传自定义图标"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                },
                {
                  "title": "下载链接",
                  "value": "download"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination' | 'download'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            },
            "docDescription": "支持页面跳转、普通链接、下载链接"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接地址",
            "tsType": "nasl.core.String",
            "docDescription": "链接的详细地址"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "新窗口",
                  "value": "_blank"
                },
                {
                  "title": "当前窗口",
                  "value": "_self"
                },
                {
                  "title": "父级窗口",
                  "value": "_parent"
                },
                {
                  "title": "顶级窗口",
                  "value": "_top"
                }
              ]
            },
            "name": "target",
            "title": "链接打开方式",
            "tsType": "'_blank' | '_self' | '_parent' | '_top'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "_self"
              },
              "playground": []
            },
            "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
            "docDescription": "支持新窗口、当前窗口、父级窗口、顶级窗口四种方式，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下并释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "dblclick",
            "title": "双击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上双击鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "contextmenu",
            "title": "右键点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在右键菜单显示前触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mousedown",
            "title": "鼠标按下",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseup",
            "title": "鼠标释放",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseenter",
            "title": "鼠标移入",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移入元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseleave",
            "title": "鼠标移出",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移出元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "focus",
            "title": "获得焦点",
            "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "获得焦点时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "blur",
            "title": "失去焦点",
            "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "失去焦点时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "navigate",
            "title": "切换路由后",
            "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
            "description": "使用 router 相关属性切换路由后触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "侧边栏项自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USidebarGroup",
        "kebabName": "u-sidebar-group",
        "title": "侧边栏分组",
        "description": "侧边栏分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "collapsible",
            "title": "可折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置是否可以展开/折叠",
            "docDescription": "设置分组是否可折叠"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "expanded",
            "title": "展开状态",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "展开状态分为“True(展开)/False(折叠)”，默认为“展开”",
            "docDescription": "设置分组的展开折叠状态。在某些场景下需要预置分组的展开或者折叠状态"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用展开/折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止展开/折叠操作",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "侧边栏分组",
                "code": "<u-sidebar-group><template #title><u-text text=\"分组\"></u-text></template><u-sidebar-item><u-text text=\"侧边栏项\"></u-text></u-sidebar-item></u-sidebar-group>"
              },
              {
                "title": "侧边栏项",
                "code": "<u-sidebar-item><u-text text=\"侧边栏项\"></u-text></u-sidebar-item>"
              },
              {
                "title": "分隔线",
                "code": "<u-sidebar-divider></u-sidebar-divider>"
              }
            ],
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<USidebarGroup | USidebarItem | USidebarDivider>",
            "params": [],
            "description": "插入`<u-sidebar-item>`或`<u-sidebar-divider>`子组件。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题文本。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "extra",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "在右侧可以附加内容。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USidebarDivider",
        "kebabName": "u-sidebar-divider",
        "title": "侧边栏分隔线",
        "description": "侧边栏分隔线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-sidebar value=\"3\" :router=\"true\">\n<u-sidebar-item value=\"1\"><u-text text=\"导航一\"></u-text></u-sidebar-item>\n<u-sidebar-item value=\"2\"><u-text text=\"导航二\"></u-text></u-sidebar-item>\n<u-sidebar-item value=\"3\"><u-text text=\"导航三\"></u-text></u-sidebar-item>\n</u-sidebar>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-sidebar.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "折叠功能",
        "description": "",
        "code": "<template>\n<u-sidebar collapsible :router=\"true\">\n<u-sidebar-group expanded>\n<template #title><u-text text=\"导航一\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n<u-sidebar-group expanded disabled>\n<template #title><u-text text=\"导航二\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n</u-sidebar>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-sidebar.vue/screenshots/1.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "分组",
        "description": "",
        "code": "<template>\n<u-sidebar :router=\"true\">\n<u-sidebar-group expanded>\n<template #title><u-text text=\"导航一\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n<u-sidebar-group expanded>\n<template #title><u-text text=\"导航二\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n</u-sidebar>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-sidebar.vue/screenshots/2.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "手风琴模式",
        "description": "",
        "code": "<template>\n<u-sidebar collapsible accordion :router=\"true\">\n<u-sidebar-group>\n<template #title><u-text text=\"导航一\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n<u-sidebar-group>\n<template #title><u-text text=\"导航二\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n<u-sidebar-group>\n<template #title><u-text text=\"导航三\"></u-text></template>\n<u-sidebar-item><u-text text=\"选项一\"></u-text></u-sidebar-item>\n</u-sidebar-group>\n</u-sidebar>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-sidebar.vue/screenshots/3.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "UNavbarMulti",
    "alias": "导航栏",
    "title": "导航栏",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-navbar-multi",
    "description": "通常用于页面顶部的导航菜单，放置 Logo、导航链接、用户信息等。",
    "icon": "navbar-multi",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "hasDataSource",
        "title": "数据源配置",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "onChange": [
          {
            "clear": [
              "dataSource",
              "dataSchema",
              "textField",
              "toField",
              "iconField",
              "valueField",
              "parentField",
              "linkTypeField",
              "targetField"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ],
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于显示文本的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "iconField",
        "title": "图标属性字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "icon"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于图标的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "toField",
        "title": "跳转链接字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "to"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于跳转链接的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于标识父节点的属性",
        "docDescription": "集合的元素类型中，用于标识父级字段的属性，支持自定义变更",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "router",
        "title": "使用路由",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否根据 vue-router 来控制选择项",
        "docDescription": "设置是否根据vue-router来控制选择哪一项，默认开启。开启后当前所在的导航栏项底部会有标识",
        "onChange": [
          {
            "clear": [
              "value"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "V",
        "description": "当前选中的值",
        "docDescription": "当前选择的值",
        "if": "_ => _.router === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n}) => any",
        "description": "选择某一项后触发。"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "导航栏分组",
            "code": "<u-navbar-group-multi><template #title><u-text text=\"导航栏分组\"></u-text></template><u-navbar-item-multi><u-text text=\"导航栏项\"></u-text></u-navbar-item-multi></u-navbar-group-multi>"
          },
          {
            "title": "导航栏项",
            "code": "<u-navbar-item-multi><u-text text=\"导航栏项\"></u-text></u-navbar-item-multi>"
          },
          {
            "title": "分隔线",
            "code": "<u-navbar-divider-multi></u-navbar-divider-multi>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<UNavbarGroupMulti | UNavbarItemMulti | UNavbarDividerMulti>",
        "params": [],
        "description": "插入`<u-navbar-multi>`子组件。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "left",
        "title": "左侧导航",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "内容自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "right",
        "title": "右侧导航",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "内容自定义"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarItemMulti",
        "kebabName": "u-navbar-item-multi",
        "title": "导航栏项",
        "description": "导航栏的子项目",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "nasl.core.String",
            "description": "用于标识此项的值",
            "docDescription": "当前选择的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "icon",
            "title": "图标",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": ""
              },
              "playground": []
            },
            "docDescription": "支持从图标库选择图标或上传自定义图标"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                },
                {
                  "title": "下载链接",
                  "value": "download"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination' | 'download'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            },
            "docDescription": "支持页面跳转、下载链接"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接地址",
            "tsType": "nasl.core.String",
            "docDescription": "链接地址配置"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "新窗口",
                  "value": "_blank"
                },
                {
                  "title": "当前窗口",
                  "value": "_self"
                },
                {
                  "title": "父级窗口",
                  "value": "_parent"
                },
                {
                  "title": "顶级窗口",
                  "value": "_top"
                }
              ]
            },
            "name": "target",
            "title": "链接打开方式",
            "tsType": "'_blank' | '_self' | '_parent' | '_top'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "_self"
              },
              "playground": []
            },
            "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
            "docDescription": "支持新窗口、当前窗口、父级窗口、顶级窗口四种方式，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口。"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下并释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "dblclick",
            "title": "双击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上双击鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "contextmenu",
            "title": "右键点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在右键菜单显示前触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mousedown",
            "title": "鼠标按下",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseup",
            "title": "鼠标释放",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上释放任意鼠标按钮时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseenter",
            "title": "鼠标移入",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移入元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "mouseleave",
            "title": "鼠标移出",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "鼠标移出元素时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "focus",
            "title": "获得焦点",
            "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "获得焦点时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "blur",
            "title": "失去焦点",
            "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "失去焦点时触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "navigate",
            "title": "切换路由后",
            "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
            "description": "使用 router 相关属性切换路由后触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "导航栏项的内容"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarDividerMulti",
        "kebabName": "u-navbar-divider-multi",
        "title": "导航栏分割线",
        "description": "导航栏的分割线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarDropdownMulti",
        "kebabName": "u-navbar-dropdown-multi",
        "title": "导航栏下拉菜单",
        "description": "导航栏下拉菜单",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "上",
                  "value": "top"
                },
                {
                  "title": "下",
                  "value": "bottom"
                },
                {
                  "title": "左",
                  "value": "left"
                },
                {
                  "title": "右",
                  "value": "right"
                },
                {
                  "title": "上左",
                  "value": "top-start"
                },
                {
                  "title": "上右",
                  "value": "top-end"
                },
                {
                  "title": "下左",
                  "value": "bottom-start"
                },
                {
                  "title": "下右",
                  "value": "bottom-end"
                },
                {
                  "title": "左上",
                  "value": "left-start"
                },
                {
                  "title": "左下",
                  "value": "left-end"
                },
                {
                  "title": "右上",
                  "value": "right-start"
                },
                {
                  "title": "右下",
                  "value": "right-end"
                }
              ]
            },
            "name": "placement",
            "title": "弹出方向",
            "tsType": "'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "bottom"
              },
              "playground": []
            },
            "description": "弹出层的弹出方向"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "点击",
                  "value": "click"
                },
                {
                  "title": "悬浮",
                  "value": "hover"
                },
                {
                  "title": "右击",
                  "value": "right-click"
                },
                {
                  "title": "双击",
                  "value": "double-click"
                },
                {
                  "title": "手动",
                  "value": "manual"
                }
              ]
            },
            "name": "trigger",
            "title": "触发方式",
            "tsType": "'click' | 'hover' | 'right-click' | 'double-click' | 'manual'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "hover"
              },
              "playground": []
            }
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuMulti",
        "kebabName": "u-navbar-menu-multi",
        "title": "导航菜单",
        "description": "导航菜单",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuGroupMulti",
        "kebabName": "u-navbar-menu-group-multi",
        "title": "导航菜单分组",
        "description": "导航菜单分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuItemMulti",
        "kebabName": "u-navbar-menu-item-multi",
        "title": "导航菜单项",
        "description": "导航菜单项",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuDividerMulti",
        "kebabName": "u-navbar-menu-divider-multi",
        "title": "导航菜单分割线",
        "description": "导航菜单分割线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectMulti",
        "kebabName": "u-navbar-select-multi",
        "title": "导航选择",
        "description": "导航选择",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectGroupMulti",
        "kebabName": "u-navbar-select-group-multi",
        "title": "导航选择分组",
        "description": "导航选择分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectItemMulti",
        "kebabName": "u-navbar-select-item-multi",
        "title": "导航选择项",
        "description": "导航选择项",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectDividerMulti",
        "kebabName": "u-navbar-select-divider-multi",
        "title": "导航选择分割线",
        "description": "导航选择分割线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarGroupMulti",
        "kebabName": "u-navbar-group-multi",
        "title": "导航栏分组",
        "description": "导航栏分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "collapsible",
            "title": "可折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置是否可以展开/折叠",
            "docDescription": "设置分组是否可折叠"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "点击",
                  "value": "click"
                },
                {
                  "title": "悬浮",
                  "value": "hover"
                },
                {
                  "title": "右击",
                  "value": "right-click"
                },
                {
                  "title": "双击",
                  "value": "double-click"
                }
              ]
            },
            "name": "trigger",
            "title": "触发方式",
            "tsType": "'click' | 'hover' | 'right-click' | 'double-click'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "click"
              },
              "playground": []
            }
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "expanded",
            "title": "展开状态",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "展开状态分为“True(展开)/False(折叠)”，默认为“展开”",
            "docDescription": "设置分组的展开折叠状态。在某些场景下需要预置分组的展开或者折叠状态"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用展开/折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止展开/折叠操作",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "导航栏分组",
                "code": "<u-navbar-group-multi><template #title><u-text text=\"导航栏分组\"></u-text></template><u-navbar-item-multi><u-text text=\"导航栏项\"></u-text></u-navbar-item-multi></u-navbar-group-multi>"
              },
              {
                "title": "导航栏项",
                "code": "<u-navbar-item-multi><u-text text=\"导航栏项\"></u-text></u-navbar-item-multi>"
              }
            ],
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<UNavbarGroupMulti | UNavbarItemMulti>",
            "params": [],
            "description": "插入`<u-navbar-multi>`子组件。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "标题自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "导航栏",
        "description": "",
        "code": "<template>\n<u-navbar-multi>\n<template #left>\n<u-multi-layout-item alignItems=\"center\" style=\"width: 200px;\">\n<u-image fit=\"cover\" src=\"/assets/lcap-logo-light.svg\"\nstyle=\"width: 28px; height: 28px; margin: 16px 14px; --custom-start: auto; vertical-align: middle;\"></u-image>\n<u-text text=\"应用名称\" size=\"large\" style=\"--custom-start: auto; vertical-align: middle;\"></u-text>\n</u-multi-layout-item>\n</template>\n<u-navbar-item-multi><u-text>导航项1</u-text></u-navbar-item-multi>\n<u-navbar-item-multi><u-text>导航项2</u-text></u-navbar-item-multi>\n<template #right>\n<u-multi-layout-item alignItems=\"center\" justify=\"end\">\n<u-dropdown style=\"margin-right: 10px;\">\n<template #title>\n<u-linear-layout gap=\"small\" v-if=\"$global.userInfo\">\n<u-image fit=\"cover\" src=\"/assets/avatar-default.svg\" style=\"width: 36px; height: 36px; vertical-align: middle;\"></u-image>\n<span style=\"display: inline-block; vertical-align: top; margin-left: 10px; margin-right: 10px;\">\n<u-text :text=\"$global.userInfo.UserName\"></u-text>\n</span>\n</u-linear-layout>\n</template>\n<template #default>\n<u-dropdown-item><u-text>安全退出</u-text></u-dropdown-item>\n</template>\n</u-dropdown>\n</u-multi-layout-item>\n</template>\n</u-navbar-multi>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-navbar-multi.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "UNavbar",
    "alias": "导航栏(tradition)",
    "show": false,
    "title": "导航栏",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-navbar",
    "description": "通常用于页面顶部的导航菜单，放置 Logo、导航链接、用户信息等。",
    "icon": "navbar",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "router",
        "title": "使用路由",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否根据 vue-router 来控制选择项"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.String",
        "description": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否只读"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否禁用"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击此项时触发，与原生 click 事件不同的是，它只会在非只读和禁用的情况下触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "输入前",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  selectedItem: nasl.core.Any;\n  item: nasl.core.Any;\n  oldItem: nasl.core.Any;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  selectedItem: nasl.core.Any;\n  item: nasl.core.Any;\n  oldItem: nasl.core.Any;\n}) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  selectedItem: nasl.core.Any;\n  item: nasl.core.Any;\n  oldItem: nasl.core.Any;\n}) => any",
        "description": "选择值改变时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "导航项",
            "code": "<u-navbar-item>导航项</u-navbar-item>"
          },
          {
            "title": "分隔线",
            "code": "<u-navbar-divider></u-navbar-divider>"
          }
        ],
        "name": "default",
        "title": "链接区域",
        "tsType": "() => Array<UNavbarItem | UNavbarDivider>",
        "params": [],
        "description": "链接区域"
      },
      {
        "concept": "SlotDeclaration",
        "name": "left",
        "title": "左部区域",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "左部区域，一般放置 logo 等"
      },
      {
        "concept": "SlotDeclaration",
        "name": "right",
        "title": "右部区域",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "右部区域，一般放置用户个人信息等"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarItem",
        "kebabName": "u-navbar-item",
        "title": "导航栏项",
        "description": "导航栏的子项目",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "text",
            "title": "文本",
            "tsType": "nasl.core.String",
            "description": "文本内容"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "nasl.core.Any",
            "description": "此项的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "icon",
            "title": "图标",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": ""
              },
              "playground": []
            },
            "description": "图标"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "禁用此项"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                },
                {
                  "title": "下载链接",
                  "value": "download"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination' | 'download'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            },
            "description": "链接类型"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接",
            "tsType": "nasl.core.String",
            "description": "链接地址"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "新窗口",
                  "value": "_blank"
                },
                {
                  "title": "当前窗口",
                  "value": "_self"
                },
                {
                  "title": "父级窗口",
                  "value": "_parent"
                },
                {
                  "title": "顶级窗口",
                  "value": "_top"
                }
              ]
            },
            "name": "target",
            "title": "打开方式",
            "tsType": "'_blank' | '_self' | '_parent' | '_top'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "_self"
              },
              "playground": []
            },
            "description": "链接跳转方式"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "before-select",
            "title": "选择前",
            "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  selectedItem: nasl.core.Any;\n  item: nasl.core.Any;\n  oldItem: nasl.core.Any;\n}) => any",
            "description": "选择此项前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "before-navigate",
            "title": "导航前",
            "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
            "description": "使用 router 相关属性切换路由前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "navigate",
            "title": "导航",
            "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
            "description": "使用router相关属性切换路由时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "导航项自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarDivider",
        "kebabName": "u-navbar-divider",
        "title": "导航栏分割线",
        "description": "导航栏的分割线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarDropdown",
        "kebabName": "u-navbar-dropdown",
        "title": "导航栏下拉菜单",
        "description": "导航栏下拉菜单",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "点击",
                  "value": "click"
                },
                {
                  "title": "悬浮",
                  "value": "hover"
                },
                {
                  "title": "右击",
                  "value": "right-click"
                },
                {
                  "title": "双击",
                  "value": "double-click"
                },
                {
                  "title": "手动",
                  "value": "manual"
                }
              ]
            },
            "name": "trigger",
            "title": "触发方式",
            "tsType": "'click' | 'hover' | 'right-click' | 'double-click' | 'manual'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "hover"
              },
              "playground": []
            },
            "description": "触发方式"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "上",
                  "value": "top"
                },
                {
                  "title": "下",
                  "value": "bottom"
                },
                {
                  "title": "左",
                  "value": "left"
                },
                {
                  "title": "右",
                  "value": "right"
                },
                {
                  "title": "上左",
                  "value": "top-start"
                },
                {
                  "title": "上右",
                  "value": "top-end"
                },
                {
                  "title": "下左",
                  "value": "bottom-start"
                },
                {
                  "title": "下右",
                  "value": "bottom-end"
                },
                {
                  "title": "左上",
                  "value": "left-start"
                },
                {
                  "title": "左下",
                  "value": "left-end"
                },
                {
                  "title": "右上",
                  "value": "right-start"
                },
                {
                  "title": "右下",
                  "value": "right-end"
                }
              ]
            },
            "name": "placement",
            "title": "弹出位置",
            "tsType": "'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "bottom"
              },
              "playground": []
            },
            "description": "弹出方位"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "是否禁用"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenu",
        "kebabName": "u-navbar-menu",
        "title": "导航菜单",
        "description": "导航菜单",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuGroup",
        "kebabName": "u-navbar-menu-group",
        "title": "导航菜单分组",
        "description": "导航菜单分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuItem",
        "kebabName": "u-navbar-menu-item",
        "title": "导航菜单项",
        "description": "导航菜单项",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "在元素上按下并释放任意鼠标按钮时触发。"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarMenuDivider",
        "kebabName": "u-navbar-menu-divider",
        "title": "导航菜单分割线",
        "description": "导航菜单分割线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelect",
        "kebabName": "u-navbar-select",
        "title": "导航选择",
        "description": "导航选择",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectGroup",
        "kebabName": "u-navbar-select-group",
        "title": "导航选择分组",
        "description": "导航选择分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectItem",
        "kebabName": "u-navbar-select-item",
        "title": "导航选择项",
        "description": "导航选择项",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UNavbarSelectDivider",
        "kebabName": "u-navbar-select-divider",
        "title": "导航选择分割线",
        "description": "导航选择分割线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-navbar style=\"background: #4289db;\">\n<u-navbar-item href=\"https://github.com/vusion/cloud-ui\" text=\"GitHub\"></u-navbar-item>\n<u-navbar-item disabled text=\"指令\"></u-navbar-item>\n<u-navbar-divider></u-navbar-divider>\n<u-navbar-item text=\"配置\"></u-navbar-item>\n</u-navbar>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-navbar.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "选择控制",
        "description": "",
        "code": "<template>\n<u-navbar value=\"3\" :router=\"false\" style=\"background: #4289db;\">\n<u-navbar-item value=\"1\" text=\"组件\"></u-navbar-item>\n<u-navbar-item value=\"2\" text=\"备案管理\"></u-navbar-item>\n<u-navbar-item value=\"3\" text=\"帮助\"></u-navbar-item>\n<u-navbar-item value=\"4\" text=\"GitHub\"></u-navbar-item>\n</u-navbar>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-navbar.vue/screenshots/1.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "UDropdown",
    "alias": "下拉菜单",
    "title": "下拉菜单",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-dropdown",
    "description": "下拉菜单",
    "icon": "dropdown-new",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "hasDataSource",
        "title": "数据源配置",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "onChange": [
          {
            "clear": [
              "dataSource",
              "dataSchema",
              "textField",
              "toField",
              "iconField",
              "valueField",
              "parentField",
              "linkTypeField",
              "targetField"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ],
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于显示文本的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "iconField",
        "title": "图标属性字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "icon"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于图标的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "toField",
        "title": "跳转链接字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "to"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于跳转链接的属性名称",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于标识父节点的属性",
        "docDescription": "集合的元素类型中，用于标识父级字段的属性，支持自定义变更",
        "if": "_ => _.hasDataSource === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "点击",
              "value": "click"
            },
            {
              "title": "悬浮",
              "value": "hover"
            },
            {
              "title": "右击",
              "value": "right-click"
            },
            {
              "title": "双击",
              "value": "double-click"
            },
            {
              "title": "手动",
              "value": "manual"
            }
          ]
        },
        "name": "trigger",
        "title": "触发方式",
        "tsType": "'click' | 'hover' | 'right-click' | 'double-click' | 'manual'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "description": "触发方式"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "基础按钮样式",
              "value": "text"
            },
            {
              "title": "主要按钮样式",
              "value": "primary"
            },
            {
              "title": "次要按钮样式",
              "value": "primary_secondary"
            },
            {
              "title": "普通按钮样式",
              "value": "normal"
            },
            {
              "title": "更多按钮样式",
              "value": "more"
            }
          ]
        },
        "name": "type",
        "title": "样式类型",
        "tsType": "'text' | 'primary' | 'primary_secondary' | 'normal' | 'more'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "docDescription": "支持基础按钮样式、主要按钮样式、次要按钮样式、普通按钮样式共4种样式"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "上",
              "value": "top"
            },
            {
              "title": "下",
              "value": "bottom"
            },
            {
              "title": "左",
              "value": "left"
            },
            {
              "title": "右",
              "value": "right"
            },
            {
              "title": "上左",
              "value": "top-start"
            },
            {
              "title": "上右",
              "value": "top-end"
            },
            {
              "title": "下左",
              "value": "bottom-start"
            },
            {
              "title": "下右",
              "value": "bottom-end"
            },
            {
              "title": "左上",
              "value": "left-start"
            },
            {
              "title": "左下",
              "value": "left-end"
            },
            {
              "title": "右上",
              "value": "right-start"
            },
            {
              "title": "右下",
              "value": "right-end"
            }
          ]
        },
        "name": "placement",
        "title": "弹出方向",
        "tsType": "'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "bottom"
          },
          "playground": []
        },
        "description": "弹出层的弹出方向",
        "docDescription": "设置下拉菜单的弹出位置，支持上、下、左、右、上左、上右、下左、下右、左上、左下、右上、右下共12个方向"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "弹出层位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "reference"
          },
          "playground": []
        },
        "description": "设置弹出层依据哪个元素定位位置，可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。",
        "docDescription": "设置弹出层在html里的位置，支持引用元素下、全局body设置。当把下拉菜单放入某个组件，而组件overflow是hidden的时候，需要设置为全局body"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "router",
        "title": "使用路由",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否使用 vue-router",
        "docDescription": "设置使用vue-router。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "V",
        "description": "当前选中的值",
        "docDescription": "当前选择的值，值仅在不适用路由下支持编辑",
        "if": "_ => _.router === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "显示状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "开启时进入页面即展示下拉菜单，默认关闭"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "下拉菜单分组",
            "code": "<u-dropdown-group><template #title><u-text text=\"菜单分组\"></u-text></template><u-dropdown-item><u-text text=\"菜单项\"></u-text></u-dropdown-item></u-dropdown-group>"
          },
          {
            "title": "菜单项",
            "code": "<u-dropdown-item><u-text text=\"菜单项\"></u-text></u-dropdown-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UDropdownGroup | UDropdownItem>",
        "params": [],
        "description": "插入`<u-dropdown>`子组件。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "标题",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "内容自定义"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UDropdownItem",
        "kebabName": "u-dropdown-item",
        "title": "下拉菜单项",
        "description": "下拉菜单项",
        "icon": "dropdown-new-item",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "icon",
            "title": "图标",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": ""
              },
              "playground": []
            },
            "docDescription": "菜单项前增加自定义图标显示"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                },
                {
                  "title": "下载链接",
                  "value": "download"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination' | 'download'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            },
            "docDescription": "支持页面跳转、下载链接"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接地址",
            "tsType": "nasl.core.String",
            "docDescription": "链接地址配置"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "新窗口",
                  "value": "_blank"
                },
                {
                  "title": "当前窗口",
                  "value": "_self"
                },
                {
                  "title": "父级窗口",
                  "value": "_parent"
                },
                {
                  "title": "顶级窗口",
                  "value": "_top"
                }
              ]
            },
            "name": "target",
            "title": "链接打开方式",
            "tsType": "'_blank' | '_self' | '_parent' | '_top'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "_self"
              },
              "playground": []
            },
            "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
            "docDescription": "支持新窗口、当前窗口、父级窗口、顶级窗口四种方式，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: any) => any",
            "description": "点击此项时触发，与原生 click 事件不同的是，它只会在非只读和禁用的情况下触发。"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UDropdownGroup",
        "kebabName": "u-dropdown-group",
        "title": "下拉菜单分组",
        "description": "侧边栏分组",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "collapsible",
            "title": "可折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "true"
              },
              "playground": []
            },
            "description": "设置是否可以展开/折叠",
            "docDescription": "设置分组是否可折叠"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "点击",
                  "value": "click"
                },
                {
                  "title": "悬浮",
                  "value": "hover"
                },
                {
                  "title": "右击",
                  "value": "right-click"
                },
                {
                  "title": "双击",
                  "value": "double-click"
                },
                {
                  "title": "与父级同步",
                  "value": "none"
                }
              ]
            },
            "name": "trigger",
            "title": "触发方式",
            "tsType": "'click' | 'hover' | 'right-click' | 'double-click' | 'none'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "none"
              },
              "playground": []
            },
            "description": "触发方式"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "expanded",
            "title": "展开状态",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "展开状态分为“True(展开)/False(折叠)”，默认为“展开”",
            "docDescription": "设置分组的展开折叠状态。在某些场景下需要预置分组的展开或者折叠状态"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用展开/折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止展开/折叠操作",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "下拉菜单分组",
                "code": "<u-dropdown-group><template #title><u-text text=\"菜单分组\"></u-text></template><u-dropdown-item><u-text text=\"菜单项\"></u-text></u-dropdown-item></u-dropdown-group>"
              },
              {
                "title": "菜单项",
                "code": "<u-dropdown-item><u-text text=\"菜单项\"></u-text></u-dropdown-item>"
              }
            ],
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<UDropdownGroup | UDropdownItem>",
            "params": [],
            "description": "插入`<u-dropdown>`子组件。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "内容自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基础按钮样式",
        "description": "",
        "code": "<template>\n<u-dropdown>\n<template #title><u-text text=\"下拉菜单\"></u-text></template>\n<u-dropdown-item><u-text text=\"选项一\"></u-text></u-dropdown-item>\n<u-dropdown-item><u-text text=\"选项二\"></u-text></u-dropdown-item>\n<u-dropdown-item><u-text text=\"选项三\"></u-text></u-dropdown-item>\n</u-dropdown>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-dropdown.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-dropdown.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "主要按钮样式",
        "description": "",
        "code": "<template>\n<u-dropdown type=\"primary\">\n<template #title><u-text text=\"下拉菜单\"></u-text></template>\n<u-dropdown-item><u-text text=\"选项一\"></u-text></u-dropdown-item>\n<u-dropdown-item><u-text text=\"选项二\"></u-text></u-dropdown-item>\n<u-dropdown-item><u-text text=\"选项三\"></u-text></u-dropdown-item>\n</u-dropdown>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-dropdown.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "更多按钮样式",
        "description": "",
        "code": "<template>\n<u-dropdown type=\"more\">\n<template #title><u-text text=\"下拉菜单\"></u-text></template>\n<u-dropdown-item><u-text text=\"选项一\"></u-text></u-dropdown-item>\n<u-dropdown-item><u-text text=\"选项二\"></u-text></u-dropdown-item>\n<u-dropdown-item><u-text text=\"选项三\"></u-text></u-dropdown-item>\n</u-dropdown>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-dropdown.vue/drawings/2.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "列表含图标样式",
        "description": "",
        "code": "<template>\n<u-dropdown>\n<template #title><u-text text=\"下拉菜单\"></u-text></template>\n<u-dropdown-item icon=\"menu\"><u-text text=\"选项一\"></u-text></u-dropdown-item>\n<u-dropdown-item icon=\"menu\"><u-text text=\"选项二\"></u-text></u-dropdown-item>\n<u-dropdown-item icon=\"menu\"><u-text text=\"选项三\"></u-text></u-dropdown-item>\n</u-dropdown>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-dropdown.vue/drawings/3.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "UToc",
    "alias": "目录",
    "title": "目录",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-toc",
    "description": "用于展示文档的目录",
    "icon": "toc",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "nasl.core.String",
        "description": "当前选中的值",
        "docDescription": "当前选择的值"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  node: nasl.core.String;\n  oldNode: nasl.core.String;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  node: nasl.core.String;\n  oldNode: nasl.core.String;\n}) => any",
        "description": "选择某一项时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "子节点",
            "code": "<u-toc-item><template #label>目录节点</template></u-toc-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UTocItem>",
        "params": [],
        "description": "插入`<u-toc-item>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTocItem",
        "kebabName": "u-toc-item",
        "title": "目录节点",
        "description": "",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "nasl.core.String",
            "description": "集合的元素类型中，用于标识选中值的属性",
            "docDescription": "集合的元素类型中，用于标识选中值的属性"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                },
                {
                  "title": "下载链接",
                  "value": "download"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination' | 'download'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            },
            "docDescription": "支持页面跳转、普通链接、下载链接"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接地址",
            "tsType": "nasl.core.String",
            "docDescription": "链接的详细地址"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "新窗口",
                  "value": "_blank"
                },
                {
                  "title": "当前窗口",
                  "value": "_self"
                },
                {
                  "title": "父级窗口",
                  "value": "_parent"
                },
                {
                  "title": "顶级窗口",
                  "value": "_top"
                }
              ]
            },
            "name": "target",
            "title": "链接打开方式",
            "tsType": "'_blank' | '_self' | '_parent' | '_top'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "_self"
              },
              "playground": []
            },
            "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
            "docDescription": "可选新窗口、父级窗口、当前窗口和顶级窗口，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "点击此项时触发，与原生 click 事件不同的是，它只会在非只读和禁用的情况下触发。"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "子节点",
                "code": "<u-toc-item><template #label>目录节点</template></u-toc-item>"
              }
            ],
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<UTocItem>",
            "params": [],
            "description": "插入`<u-toc-item>`子组件。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "label",
            "title": "标签",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "内容自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-toc>\n<u-toc-item>\n<template #label>目录节点1</template>\n<u-toc-item><template #label>目录节点1.1</template></u-toc-item>\n</u-toc-item>\n<u-toc-item><template #label>目录节点2</template></u-toc-item>\n<u-toc-item><template #label>目录节点3</template></u-toc-item>\n</u-toc>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-toc.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Navigation",
    "name": "UAnchor",
    "alias": "锚点",
    "title": "锚点",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-anchor",
    "description": "锚点",
    "icon": "anchor",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "label",
        "title": "标识",
        "tsType": "nasl.core.String",
        "description": "锚点的唯一标识，用于跳转链接，如“/page#linkname”",
        "docDescription": "锚点的唯一标识，用于跳转链接，标识为空时，默认将组件名作为标识"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-anchor>\n</u-anchor>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-anchor.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Container",
    "name": "URouterView",
    "alias": "子页面容器",
    "title": "子页面容器",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-router-view",
    "description": "用于嵌入子页面的容器。",
    "icon": "router-view",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disableKeepAlive",
        "title": "进入已打开页面时刷新",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "重新进入已打开页面时，会刷新页面"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-router-view></u-router-view>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-router-view.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-router-view.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Container",
    "name": "UIframe",
    "alias": "Iframe",
    "title": "Iframe",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-iframe",
    "description": "用于嵌入其他网页的容器。",
    "icon": "iframe",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "src",
        "title": "网页地址",
        "tsType": "nasl.core.String",
        "description": "需要嵌入的网页地址",
        "docDescription": "需要嵌入的网页地址"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载完成",
        "tsType": "(event: any) => any",
        "description": "网页加载完成时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-iframe src=\"https://sf.163.com\" style=\"width: 100%; height: 400px;\"></u-iframe>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-iframe.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-iframe.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Container",
    "name": "UPanel",
    "alias": "面板",
    "title": "面板",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-panel",
    "description": "用于快速布局",
    "icon": "panel",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "bordered",
        "title": "显示边框",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置是否显示边框",
        "docDescription": "支持配置面板边框的显示和隐藏，默认显示"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "一直显示",
              "value": "always"
            },
            {
              "title": "hover时显示",
              "value": "hover"
            },
            {
              "title": "不显示",
              "value": "never"
            }
          ]
        },
        "name": "shadow",
        "title": "阴影",
        "tsType": "'always' | 'hover' | 'never'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "always"
          },
          "playground": []
        },
        "description": "阴影显示方式",
        "docDescription": "支持配置面板阴影状态，默认为一直显示。- 一直显示：常态显示面板阴影。\n- hover时显示：鼠标悬停在面板区域时显示面板阴影。\n- 不显示：不显示面板阴影"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "面板组",
            "code": "<u-panel-group><template #title><u-text text=\"面板组\"></u-text></template>面板项</u-panel-group>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<UPanelGroup | ViewComponent>",
        "params": [],
        "description": "插入`<u-panel-group>`子组件。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "标题",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "标题自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "extra",
        "title": "额外信息",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "额外信息自定义"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UPanelGroup",
        "kebabName": "u-panel-group",
        "title": "面板组",
        "description": "面板组",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "title",
            "title": "标题",
            "tsType": "nasl.core.String",
            "description": "面板项的标题",
            "docDescription": "面板组的标题"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入默认的元素"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "标题自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-panel><template #title><u-text>任务总览</u-text></template>任务内容</u-panel>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-panel.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-panel.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "面板分组",
        "description": "",
        "code": "<template>\n<u-panel>\n<template #title><u-text>任务总览</u-text></template>\n<u-panel-group><template #title><u-text text=\"当天概览\"></u-text></template>概览内容</u-panel-group>\n<u-panel-group><template #title><u-text text=\"事务分组\"></u-text></template>事务内容</u-panel-group>\n</u-panel>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-panel.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-panel.vue/drawings/1.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Container",
    "name": "UCollapse",
    "alias": "折叠面板",
    "title": "折叠面板",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-collapse",
    "description": "可以折叠/展开的内容区域。",
    "icon": "collapse",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认模式",
              "value": "default"
            },
            {
              "title": "简洁模式",
              "value": "simple"
            }
          ]
        },
        "name": "appear",
        "title": "显示效果",
        "tsType": "'default' | 'simple'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "docDescription": "支持默认模式和简洁模式，默认模式面板有边框，简洁模式面板无左右边框"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "头部填充",
              "value": "head"
            },
            {
              "title": "内容填充",
              "value": "content"
            },
            {
              "title": "无填充",
              "value": "none"
            }
          ]
        },
        "name": "fill",
        "title": "填充位置",
        "tsType": "'head' | 'content' | 'none'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "head"
          },
          "playground": []
        },
        "docDescription": "可选背景色填充位置，支持头部填充、内容填充和无填充"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "accordion",
        "title": "手风琴模式",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否每次只展开一个",
        "docDescription": "控制手风琴模式的开关，默认关闭。\n- 开启：展开一个面板项时，其他面板项全部折叠。\n- 关闭：可同时展开多个面板项。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "整行点击均可触发",
              "value": "click"
            },
            {
              "title": "仅点击小箭头时触发",
              "value": "click-expander"
            }
          ]
        },
        "name": "expandTrigger",
        "title": "展开触发方式",
        "tsType": "'click' | 'click-expander'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "description": "展开/折叠操作的触发方式",
        "docDescription": "可选择点击整行均可触发或仅点击小箭头时触发"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用展开/折叠",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止展开/折叠操作",
        "docDescription": "开启后当前面板所有项均无法展开或折叠，默认关闭"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "expand",
        "title": "展开时",
        "tsType": "(event: any) => any",
        "description": "展开此面板时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "collapse",
        "title": "折叠时",
        "tsType": "(event: any) => any",
        "description": "折叠某面板时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "多选项",
            "code": "<u-collapse-item><template #title><u-text text=\"面板\"></u-text></template><template #extra></template>内容</u-collapse-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UCollapseItem>",
        "params": [],
        "description": "插入`<u-collapse-item>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCollapseItem",
        "kebabName": "u-collapse-item",
        "title": "折叠面板项",
        "description": "折叠面板项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "expanded",
            "title": "展开状态",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "展开状态分为“True(展开)/False(折叠)”，默认为“展开”",
            "docDescription": "控制折叠面板项的默认状态，若开启当前面板项默认展开，若关闭当前面板项默认关闭"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用展开/折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止展开/折叠操作",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "expand",
            "title": "展开时",
            "tsType": "(event: any) => any",
            "description": "展开此面板时触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "collapse",
            "title": "折叠时",
            "tsType": "(event: any) => any",
            "description": "折叠某面板时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题文本。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "extra",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "在右侧可以附加内容。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-collapse>\n<u-collapse-item><template #title><u-text text=\"面板1\"></u-text></template>Content1</u-collapse-item>\n<u-collapse-item expanded><template #title><u-text text=\"面板2\"></u-text></template>Content2</u-collapse-item>\n<u-collapse-item><template #title><u-text text=\"面板3\"></u-text></template>Content3</u-collapse-item>\n</u-collapse>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-collapse.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-collapse.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "额外插槽",
        "description": "",
        "code": "<template>\n<u-collapse showExtraEmptySlot>\n<u-collapse-item><template #title><u-text text=\"面板1\"></u-text></template><template #extra><u-link>设置</u-link></template>Content1</u-collapse-item>\n<u-collapse-item expanded><template #title><u-text text=\"面板2\"></u-text></template><template #extra></template>Content2</u-collapse-item>\n<u-collapse-item><template #title><u-text text=\"面板3\"></u-text></template><template #extra></template>Content3</u-collapse-item>\n</u-collapse>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-collapse.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-collapse.vue/drawings/1.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Container",
    "name": "UCard",
    "alias": "卡片",
    "title": "卡片",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-card",
    "description": "用于快速布局",
    "icon": "card",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "name": "width",
        "title": "宽度",
        "tsType": "nasl.core.String",
        "description": "设置卡片宽度，可设置为像素或百分比",
        "docDescription": "卡片宽度，支持设置像素或是百分比"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "一直显示",
              "value": "always"
            },
            {
              "title": "hover时显示",
              "value": "hover"
            },
            {
              "title": "不显示",
              "value": "never"
            }
          ]
        },
        "name": "shadow",
        "title": "阴影",
        "tsType": "'always' | 'hover' | 'never'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "always"
          },
          "playground": []
        },
        "description": "卡片阴影显示时机",
        "docDescription": "支持配置卡片阴影状态，默认为一直显示。\n- 一直显示：常态显示卡片阴影。\n- hover时显示：鼠标悬停在卡片区域时显示卡片阴影。\n- 不显示：不显示卡片阴影"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "border",
        "title": "显示边框",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "控制卡片边框的显隐，默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "split",
        "title": "分割线",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "控制卡片标题和内容间分割线的显隐，默认关闭"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入默认的元素"
      },
      {
        "concept": "SlotDeclaration",
        "name": "cover",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入图片"
      },
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "标题",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCardGroup",
        "kebabName": "u-card-group",
        "title": "卡片组",
        "description": "卡片组",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "title",
            "title": "标题",
            "tsType": "nasl.core.String"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入默认的元素"
          },
          {
            "concept": "SlotDeclaration",
            "name": "cover",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入图片"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本样式",
        "description": "",
        "code": "<template>\n<u-card><template #title><u-text text=\"卡片\"></u-text></template>卡片内容</u-card>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-card.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "带分割线样式",
        "description": "",
        "code": "<template>\n<u-card split><template #title><u-text text=\"卡片\"></u-text></template>卡片内容</u-card>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-card.vue/screenshots/1.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "带图片样式",
        "description": "",
        "code": "<template>\n<u-card style=\"width: 280px\" cover-slot><template #title><u-text text=\"卡片\"></u-text></template><template #cover>\n<u-image src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\" fit=\"contain\"></u-image>\n</template>卡片内容</u-card>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-card.vue/screenshots/2.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UText",
    "alias": "文本",
    "title": "文本",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-text",
    "description": "用于展示文字或表达式",
    "icon": "text",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "text",
        "title": "文本",
        "tsType": "nasl.core.String",
        "description": "显示文本内容",
        "docDescription": "显示的文本内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认",
              "value": "default"
            },
            {
              "title": "主要色",
              "value": "primary"
            },
            {
              "title": "辅助色",
              "value": "secondary"
            },
            {
              "title": "成功色",
              "value": "success"
            },
            {
              "title": "警告色",
              "value": "warning"
            },
            {
              "title": "错误色",
              "value": "error"
            },
            {
              "title": "禁用色",
              "value": "disabled"
            }
          ]
        },
        "name": "color",
        "title": "主题颜色",
        "tsType": "'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'disabled'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "设置主题颜色样式",
        "docDescription": "支持定义文本的颜色，支持默认、主要色、辅助色、成功色、警告色、错误色、禁用色"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内",
              "value": "inline"
            },
            {
              "title": "块级",
              "value": "block"
            }
          ]
        },
        "name": "display",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "description": "行内展示，或块级换行展示",
        "docDescription": "文本展示方式，支持行内展示或块级换行展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认不处理",
              "value": "normal"
            },
            {
              "title": "多余的文本省略",
              "value": "ellipsis"
            },
            {
              "title": "强制换行且英文自动添加换行符",
              "value": "break"
            },
            {
              "title": "始终不换行",
              "value": "nowrap"
            }
          ]
        },
        "name": "overflow",
        "title": "隐藏过长文本",
        "tsType": "'normal' | 'ellipsis' | 'break' | 'nowrap'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "文本过长时省略显示",
        "docDescription": "文本过长的处理方式，支持默认不处理、多余的文本省略、强制换行且英文自动添加换行符、始终不换行共四种隐藏处理方式，缺省情况为默认不处理"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认",
              "value": "default"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "巨大",
              "value": "huge"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'default' | 'small' | 'normal' | 'large' | 'huge'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "设置文本大小",
        "docDescription": "文本框尺寸，支持小、正常、大、巨大"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "普通文本",
        "description": "",
        "code": "<template>\n<u-text text=\"普通文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "小号文本",
        "description": "",
        "code": "<template>\n<u-text size=\"small\" text=\"小号文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "大号文本",
        "description": "",
        "code": "<template>\n<u-text size=\"large\" text=\"大号文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/2.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "主要文本",
        "description": "",
        "code": "<template>\n<u-text color=\"primary\" text=\"主要文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/3.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/3.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "辅助文本",
        "description": "",
        "code": "<template>\n<u-text color=\"secondary\" text=\"辅助文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/4.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/4.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "成功文本",
        "description": "",
        "code": "<template>\n<u-text color=\"success\" text=\"成功文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/5.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/5.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "警告文本",
        "description": "",
        "code": "<template>\n<u-text color=\"warning\" text=\"警告文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/6.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/6.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "错误文本",
        "description": "",
        "code": "<template>\n<u-text color=\"error\" text=\"错误文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/7.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/7.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "禁用文本",
        "description": "",
        "code": "<template>\n<u-text color=\"disabled\" text=\"禁用文本\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/8.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/8.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "文本过长省略",
        "description": "",
        "code": "<template>\n<u-text overflow=\"ellipsis\" text=\"文字过长省略过长省略过长省略过长省略过长省略。\"></u-text>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/screenshots/9.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-text.vue/drawings/9.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "ULink",
    "alias": "链接",
    "title": "链接",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-link",
    "description": "文字超链接",
    "icon": "link",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "text",
        "title": "文本",
        "tsType": "nasl.core.String",
        "description": "显示文本内容",
        "docDescription": "显示的文本内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认",
              "value": "default"
            },
            {
              "title": "浅色",
              "value": "light"
            },
            {
              "title": "成功色",
              "value": "success"
            },
            {
              "title": "警告色",
              "value": "warning"
            },
            {
              "title": "危险色",
              "value": "danger"
            }
          ]
        },
        "name": "color",
        "title": "主题颜色",
        "tsType": "'default' | 'light' | 'success' | 'warning' | 'danger'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "设置主题颜色样式",
        "docDescription": "设置文本的颜色，支持默认、浅色、成功色、警告色、危险色"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内展示",
              "value": "inline"
            },
            {
              "title": "块级展示，宽度会充满父元素",
              "value": "block"
            }
          ]
        },
        "name": "display",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "docDescription": "行内展示、块级展示（占据整行）"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "页面跳转",
              "value": "destination"
            },
            {
              "title": "下载链接",
              "value": "download"
            }
          ]
        },
        "name": "linkType",
        "title": "链接类型",
        "tsType": "'destination' | 'download'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "destination"
          },
          "playground": []
        },
        "docDescription": "支持页面跳转、普通链接、下载链接"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "name": "hrefAndTo",
        "title": "链接地址",
        "tsType": "nasl.core.String",
        "docDescription": "链接的详细地址"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "新窗口",
              "value": "_blank"
            },
            {
              "title": "当前窗口",
              "value": "_self"
            },
            {
              "title": "父级窗口",
              "value": "_parent"
            },
            {
              "title": "顶级窗口",
              "value": "_top"
            }
          ]
        },
        "name": "target",
        "title": "链接打开方式",
        "tsType": "'_blank' | '_self' | '_parent' | '_top'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "_self"
          },
          "playground": []
        },
        "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
        "docDescription": "可选新窗口、父级窗口、当前窗口和顶级窗口，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "下划线",
              "value": "underline"
            },
            {
              "title": "颜色变化",
              "value": "color"
            }
          ]
        },
        "name": "hoverType",
        "title": "鼠标悬停效果",
        "tsType": "'underline' | 'color'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "underline"
          },
          "playground": []
        },
        "description": "鼠标悬停时的样式变化方式",
        "docDescription": "支持鼠标悬停时样式变化，支持颜色变化和下划线两种方式",
        "onChange": [
          {
            "clear": [
              "decoration"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-navigate",
        "title": "切换路由前",
        "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
        "description": "使用 router 相关属性切换路由前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "navigate",
        "title": "切换路由后",
        "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
        "description": "使用 router 相关属性切换路由后触发"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "普通链接",
        "description": "",
        "code": "<template>\n<u-link text=\"普通链接\"></u-link>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "成功链接",
        "description": "",
        "code": "<template>\n<u-link color=\"success\" text=\"成功链接\"></u-link>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "警告链接",
        "description": "",
        "code": "<template>\n<u-link color=\"warning\" text=\"警告链接\"></u-link>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/drawings/2.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "危险链接",
        "description": "",
        "code": "<template>\n<u-link color=\"danger\" text=\"危险链接\"></u-link>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/screenshots/3.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/drawings/3.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "禁用链接",
        "description": "",
        "code": "<template>\n<u-link disabled text=\"禁用链接\"></u-link>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/screenshots/4.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-link.vue/drawings/4.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UButton",
    "alias": "按钮",
    "title": "按钮",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-button",
    "description": "用于触发一个即时操作。",
    "icon": "button",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "text",
        "title": "文本",
        "tsType": "nasl.core.String",
        "description": "显示文本内容",
        "docDescription": "显示的文本内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "主要按钮",
              "value": "primary"
            },
            {
              "title": "次要按钮",
              "value": "primary_secondary"
            },
            {
              "title": "普通按钮",
              "value": "default"
            },
            {
              "title": "危险操作按钮",
              "value": "danger"
            },
            {
              "title": "次要危险操作按钮",
              "value": "danger_secondary"
            }
          ]
        },
        "name": "color",
        "title": "样式类型",
        "tsType": "'primary' | 'primary_secondary' | 'default' | 'danger' | 'danger_secondary'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "设置主题颜色和按钮样式类型",
        "docDescription": "- 支持定义按钮样式，包括主要按钮、次要按钮、普通按钮、危险操作按钮和次要危险操作按钮。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内展示",
              "value": "inline"
            },
            {
              "title": "块级展示，宽度会充满父元素",
              "value": "block"
            }
          ]
        },
        "name": "display",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "description": "行内展示，或块级换行展示",
        "docDescription": "控制展示方式，支持行内展示、块级展示（宽度会充满父元素）两种方式。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "icon",
        "title": "图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持从图标库选择图标或上传自定义图标。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "左",
              "value": "left"
            },
            {
              "title": "右",
              "value": "right"
            }
          ]
        },
        "name": "iconPosition",
        "title": "图标位置",
        "tsType": "'left' | 'right'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "left"
          },
          "playground": []
        },
        "description": "设置图标居左或居右显示"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "页面跳转",
              "value": "destination"
            },
            {
              "title": "下载链接",
              "value": "download"
            }
          ]
        },
        "name": "linkType",
        "title": "链接类型",
        "tsType": "'destination' | 'download'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "destination"
          },
          "playground": []
        },
        "docDescription": "支持页面跳转、普通链接、下载链接。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "name": "hrefAndTo",
        "title": "链接地址",
        "tsType": "nasl.core.String",
        "docDescription": "链接的详细地址。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "新窗口",
              "value": "_blank"
            },
            {
              "title": "当前窗口",
              "value": "_self"
            },
            {
              "title": "父级窗口",
              "value": "_parent"
            },
            {
              "title": "顶级窗口",
              "value": "_top"
            }
          ]
        },
        "name": "target",
        "title": "链接打开方式",
        "tsType": "'_blank' | '_self' | '_parent' | '_top'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "_self"
          },
          "playground": []
        },
        "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
        "docDescription": "可选新窗口、父级窗口、当前窗口和顶级窗口，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "dashed",
        "title": "显示虚线边框",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否显示虚线边框",
        "docDescription": "启用后，按钮边框变为虚线，默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置按钮大小",
        "docDescription": "按钮尺寸，支持设置巨大、大、中型、正常、小、迷你。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认",
              "value": "default"
            },
            {
              "title": "方形",
              "value": "square"
            },
            {
              "title": "圆角",
              "value": "round"
            },
            {
              "title": "圆形",
              "value": "circle"
            }
          ]
        },
        "name": "shape",
        "title": "形状",
        "tsType": "'default' | 'square' | 'round' | 'circle'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "设置按钮形状",
        "docDescription": "支持定义按钮形状，包括默认、方形、圆角、圆形四种。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-navigate",
        "title": "切换路由前",
        "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
        "description": "使用 router 相关属性切换路由前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "navigate",
        "title": "切换路由后",
        "tsType": "(event: {\n  to: nasl.core.String;\n  replace: nasl.core.Boolean;\n  append: nasl.core.Boolean;\n}) => any",
        "description": "使用 router 相关属性切换路由后触发"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "主要按钮",
        "description": "",
        "code": "<template>\n<u-button color=\"primary\" text=\"确 定\"></u-button>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "次要按钮",
        "description": "",
        "code": "<template>\n<u-button text=\"确 定\" color=\"primary_secondary\"></u-button>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "普通按钮",
        "description": "",
        "code": "<template>\n<u-button text=\"确 定\"></u-button>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/drawings/2.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "图标按钮",
        "description": "",
        "code": "<template>\n<u-button color=\"primary\" icon=\"add\" text=\"创 建\"></u-button>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/screenshots/3.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-button.vue/drawings/3.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "IIco",
    "alias": "图标",
    "title": "图标",
    "concept": "ViewComponentDeclaration",
    "kebabName": "i-ico",
    "description": "图标",
    "icon": "icon",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "name",
        "title": "图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持从图标库选择图标或上传自定义图标。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "仅图标",
              "value": "only"
            },
            {
              "title": "组合图标-上下",
              "value": "top"
            },
            {
              "title": "组合图标-左右",
              "value": "left"
            }
          ]
        },
        "name": "icotype",
        "title": "图标布局",
        "tsType": "'only' | 'top' | 'left'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "top"
          },
          "playground": []
        },
        "description": "图标和文本的布局方式",
        "docDescription": "支持选择图标的展示方式，包括仅图标、组合图标-上下、组合图标-左右三种方式。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "页面跳转",
              "value": "destination"
            },
            {
              "title": "下载链接",
              "value": "download"
            }
          ]
        },
        "name": "linkType",
        "title": "链接类型",
        "tsType": "'destination' | 'download'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "destination"
          },
          "playground": []
        },
        "docDescription": "支持页面跳转、普通链接、下载链接。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "name": "hrefAndTo",
        "title": "链接地址",
        "tsType": "nasl.core.String",
        "docDescription": "链接的详细地址。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "新窗口",
              "value": "_blank"
            },
            {
              "title": "当前窗口",
              "value": "_self"
            },
            {
              "title": "父级窗口",
              "value": "_parent"
            },
            {
              "title": "顶级窗口",
              "value": "_top"
            }
          ]
        },
        "name": "target",
        "title": "链接打开方式",
        "tsType": "'_blank' | '_self' | '_parent' | '_top'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "_self"
          },
          "playground": []
        },
        "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
        "docDescription": "可选新窗口、父级窗口、当前窗口和顶级窗口，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击后",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击此项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "双击此项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "rightclick",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "右键点击此项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "over",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入此项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "out",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出此项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "down",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标按下此项时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "组合图标-上下",
        "description": "",
        "code": "<template>\n<i-ico name=\"default\">\n<u-text>图标</u-text>\n</i-ico>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/i-ico.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "组合图标-左右",
        "description": "",
        "code": "<template>\n<i-ico name=\"default\" icotype=\"left\">\n<u-text>图标</u-text>\n</i-ico>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/i-ico.vue/screenshots/1.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "仅图标",
        "description": "",
        "code": "<template>\n<i-ico name=\"default\" icotype=\"only\">\n<u-text>图标</u-text>\n</i-ico>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/i-ico.vue/screenshots/2.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UGallery",
    "alias": "画廊",
    "title": "画廊",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-gallery",
    "description": "画廊",
    "icon": "gallery",
    "tsTypeParams": "T",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "组件所展示数据的输入源，可以是逻辑、变量。格式可参见示例"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "集合类型每一元素的数据类型"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "缩略图模式",
              "value": "small"
            },
            {
              "title": "大图模式",
              "value": "big"
            }
          ]
        },
        "name": "pattern",
        "title": "画廊模式",
        "tsType": "'small' | 'big'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "big"
          },
          "playground": []
        },
        "description": "图片的显示模式，支持大图模式和缩略图模式。",
        "docDescription": "图片的显示模式，支持大图模式和缩略图模式"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "num",
        "title": "显示图片数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "同时展示的图片数量"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "arrow",
        "title": "显示左右箭头",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "图片支持通过鼠标按住拖动或点击左右箭头的方式调整位置，关闭该选项后不显示左右箭头"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "重新加载数据",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-gallery>\n</u-gallery>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-gallery.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "ULabel",
    "alias": "标签",
    "title": "标签",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-label",
    "description": "用于展示状态、标签、分类等",
    "icon": "label",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "text",
        "title": "文本",
        "tsType": "nasl.core.String",
        "docDescription": "标签显示的文本内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "主要标签",
              "value": "filled"
            },
            {
              "title": "普通标签",
              "value": "line"
            }
          ]
        },
        "name": "type",
        "title": "样式类型",
        "tsType": "'filled' | 'line'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "filled"
          },
          "playground": []
        },
        "description": "设置标签样式，主要标签有背景，次要标签没有背景",
        "docDescription": "支持选择标签样式，包括主要标签和普通标签"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认",
              "value": "default"
            },
            {
              "title": "主题色",
              "value": "primary"
            },
            {
              "title": "成功色",
              "value": "success"
            },
            {
              "title": "警告色",
              "value": "warning"
            },
            {
              "title": "错误色",
              "value": "error"
            }
          ]
        },
        "name": "color",
        "title": "主题颜色",
        "tsType": "'default' | 'primary' | 'success' | 'warning' | 'error'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "设置主题颜色样式",
        "docDescription": "支持定义标签颜色，包括默认、主题色、成功色、警告色和错误色"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内",
              "value": "inline"
            },
            {
              "title": "块级",
              "value": "block"
            }
          ]
        },
        "name": "display",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "description": "行内展示，或块级换行展示",
        "docDescription": "文本展示方式，支持行内展示或块级换行展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "removable",
        "title": "可关闭",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置标签是否可点击删除图标进行关闭",
        "docDescription": "支持控制删除图标的显隐，开启时显示删除图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "巨大",
              "value": "huge"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'small' | 'normal' | 'large' | 'huge'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置标签大小",
        "docDescription": "标签尺寸，支持小、正常、大、巨大"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-remove",
        "title": "删除前触发",
        "tsType": "(event: any) => any",
        "description": "删除前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "remove",
        "title": "删除时触发",
        "tsType": "(event: any) => any",
        "description": "删除时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "主要标签",
        "description": "",
        "code": "<template>\n<u-label color=\"primary\" text=\"主要标签\"></u-label>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-label.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-label.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UBadge",
    "alias": "徽章",
    "title": "徽章",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-badge",
    "description": "用于显示消息条数和提醒用户处理的角标。",
    "icon": "badge",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.Integer",
        "description": "用于标识的值",
        "docDescription": "当前提醒消息的条数。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "max",
        "title": "最大值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "99",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "最大值，超过最大值会显示为“最大值+”的形式，当最大值是数字类型时生效",
        "docDescription": "提醒消息的最大值，超过最大值将不再显示准确的数字，用最大值+代替，如99+。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "corner",
        "title": "角标在右上角",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "开启时提醒角标位置显示在右上角，关闭时提醒角标显示在组件右侧。",
        "docDescription": "开启时提醒角标位置显示在右上角，关闭时提醒角标显示在组件右侧。"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入需要附加徽章的元素。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "数字徽章",
        "description": "",
        "code": "<template>\n<u-badge :value=\"3\" :corner=\"true\"><u-text>消息</u-text></u-badge>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-badge.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-badge.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "小圆点",
        "description": "",
        "code": "<template>\n<u-badge :value=\"3\" :dot=\"true\" :corner=\"true\"><u-text>消息</u-text></u-badge>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-badge.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-badge.vue/drawings/1.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UCarousel",
    "alias": "幻灯片",
    "title": "幻灯片",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-carousel",
    "description": "动态播放内部内容",
    "icon": "carousel",
    "tsTypeParams": "T",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "designerValue": [
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "IDE 根据配置的数据源动态计算返回内容的数据结构，用于动态配置项 current.item 的类型说明。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autoplay",
        "title": "轮播",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "是否循环播放所有图片"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "interval",
        "title": "切换间隔时间",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "4000",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "单位：毫秒，幻灯片切换时间，如果设置值小于动画时长，会在动画完成后切换",
        "docDescription": "单位：毫秒，幻灯片切换时间，如果设置值小于动画时长，会在动画完成后切换"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "选择某一页前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "选择某一页时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "幻灯片子项",
            "code": "<u-carousel-item><u-image style=\"width: 100%; height: 100%\" fit=\"cover\" src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\"></u-carousel-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UCarouselItem>",
        "params": [],
        "description": "插入`<u-carousel-item>`子组件。",
        "emptyBackground": "add-sub-large"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "undefined",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCarouselItem",
        "kebabName": "u-carousel-item",
        "title": "幻灯片选项",
        "description": "幻灯片选项",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。",
            "emptyBackground": "image"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题文本。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-carousel style=\"width:100%\">\n<template #item=\"current\"></template>\n</u-carousel>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-carousel.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UInfoList",
    "alias": "详情列表",
    "title": "详情列表",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-info-list",
    "description": "详情列表",
    "icon": "info-list",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "repeat",
        "title": "列数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "3",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "整个详情列表的划分列数",
        "docDescription": "- 设置列表信息展示的划分列数"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示表格头部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否显示表格头部",
        "docDescription": "开启时会显示表格头部"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "自适应",
              "value": "auto"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "labelSize",
        "title": "列表项标题宽度",
        "tsType": "'auto' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "auto"
          },
          "playground": []
        },
        "description": "设置详情列表所有列表项的标题宽度。",
        "docDescription": "列表中所有列表项的标签大小"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "详情列表组",
            "code": "<u-info-list-group><template #title><u-text text=\"基本信息\"></u-text></template><u-info-list-item label=\"名称\"><u-text text=\"张三\"></u-text></u-info-list-item></u-info-list-group>"
          },
          {
            "title": "详情列表项",
            "code": "<u-info-list-item><template #label><u-text text=\"基本信息\"></u-text></template><u-text text=\"张三\"></u-text></u-info-list-item>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<UInfoListGroup | UInfoListItem>",
        "params": [],
        "description": "插入`<u-info-list-item>`或`<u-info-list-group>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UInfoListItem",
        "kebabName": "u-info-list-item",
        "title": "详情列表项",
        "description": "详情列表项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "span",
            "title": "占据数",
            "tsType": "nasl.core.Decimal",
            "description": "列跨越的格数",
            "docDescription": "当前列表项占的列数，为空默认取列表组的列数值，优先取列表项的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "ellipsis",
            "title": "文本过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "开启时该项文本过长会省略显示，默认不开启为换行显示"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "自适应",
                  "value": "auto"
                },
                {
                  "title": "小",
                  "value": "small"
                },
                {
                  "title": "正常",
                  "value": "normal"
                },
                {
                  "title": "大",
                  "value": "large"
                }
              ]
            },
            "name": "labelSize",
            "title": "列表项标题宽度",
            "tsType": "'auto' | 'small' | 'normal' | 'large'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "auto"
              },
              "playground": []
            },
            "docDescription": "当前列表项的标签大小，优先取列表项的值"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或HTML。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "label",
            "title": "自定义标签内容",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "用于自定义 label 内容。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UInfoListGroup",
        "kebabName": "u-info-list-group",
        "title": "详情列表组",
        "description": "详情列表组",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "repeat",
            "title": "列数",
            "tsType": "nasl.core.Decimal",
            "description": "当前组范围内的划分列数",
            "docDescription": "当前组信息展示划分的列数，为空默认取详情列表的值，若和列表列数不一致，优先取列表组的值。"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "自适应",
                  "value": "auto"
                },
                {
                  "title": "小",
                  "value": "small"
                },
                {
                  "title": "正常",
                  "value": "normal"
                },
                {
                  "title": "大",
                  "value": "large"
                }
              ]
            },
            "name": "labelSize",
            "title": "列表项标题宽度",
            "tsType": "'auto' | 'small' | 'normal' | 'large'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "auto"
              },
              "playground": []
            },
            "description": "设置详情列表组所有列表项的标题宽度。",
            "docDescription": "当前组列表项的标签大小，若和列表列数不一致，优先取列表组的值。"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "详情列表项",
                "code": "<u-info-list-item><template #label><u-text text=\"基本信息\"></u-text></template><u-text text=\"张三\"></u-text></u-info-list-item>"
              }
            ],
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<UInfoListItem>",
            "params": [],
            "description": "插入`<u-info-list-item>`子组件"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "自定义标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "extra",
            "title": "自定义额外操作项",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义额外操作项。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-info-list>\n<u-info-list-group>\n<template #title><u-text text=\"基本信息\"></u-text></template>\n<u-info-list-item><template #label><u-text text=\"名称\"></u-text></template><u-text text=\"张三\"></u-text></u-info-list-item>\n<u-info-list-item><template #label><u-text text=\"ID\"></u-text></template><u-text text=\"152f36a3cfff4572a3a35\"></u-text></u-info-list-item>\n<u-info-list-item><template #label><u-text text=\"创建时间\"></u-text></template><u-text text=\"2018-02-22\"></u-text></u-info-list-item>\n</u-info-list-group>\n<u-info-list-group>\n<template #title><u-text text=\"基本信息\"></u-text></template>\n<u-info-list-item><template #label><u-text text=\"名称\"></u-text></template><u-text text=\"张三\"></u-text></u-info-list-item>\n<u-info-list-item><template #label><u-text text=\"ID\"></u-text></template><u-text text=\"152f36a3cfff4572a3a35\"></u-text></u-info-list-item>\n<u-info-list-item><template #label><u-text text=\"创建时间\"></u-text></template><u-text text=\"2018-02-22\"></u-text></u-info-list-item>\n</u-info-list-group>\n</u-info-list>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-info-list.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-info-list.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "额外插槽",
        "description": "",
        "code": "<template>\n<u-info-list>\n<u-info-list-group>\n<template #title><u-text text=\"基本信息\"></u-text></template>\n<template #extra>\n<u-link>设置</u-link>\n</template>\n<u-info-list-item><template #label><u-text text=\"名称\"></u-text></template><u-text text=\"张三\"></u-text></u-info-list-item>\n<u-info-list-item><template #label><u-text text=\"ID\"></u-text></template><u-text text=\"152f36a3cfff4572a3a35\"></u-text></u-info-list-item>\n<u-info-list-item><template #label><u-text text=\"创建时间\"></u-text></template><u-text text=\"2018-02-22\"></u-text></u-info-list-item>\n</u-info-list-group>\n</u-info-list>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-info-list.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-info-list.vue/drawings/1.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UImage",
    "alias": "图片展示",
    "title": "图片展示",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-image",
    "description": "可以用来展示一张图片，支持设置图片地址。",
    "icon": "image",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "ImageSetter"
        },
        "name": "src",
        "title": "地址",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "图片链接，可以是来自网络的链接，也可以上传本地图片。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "适应",
              "value": "contain"
            },
            {
              "title": "适应（图片小于父元素时以原尺寸展示）",
              "value": "scale-down"
            },
            {
              "title": "原尺寸",
              "value": "none"
            },
            {
              "title": "拉伸",
              "value": "fill"
            },
            {
              "title": "填充",
              "value": "cover"
            }
          ]
        },
        "name": "fit",
        "title": "填充方式",
        "tsType": "'contain' | 'scale-down' | 'none' | 'fill' | 'cover'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "contain"
          },
          "playground": []
        },
        "docDescription": "设置图片的显示方式，适应、适应（图片小于父元素时以原尺寸展示、原尺寸、拉伸、填充）"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "circle",
        "title": "圆形遮罩",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "是否使用圆形进行图片展示。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "左对齐",
              "value": "left"
            },
            {
              "title": "居中对齐",
              "value": "center"
            },
            {
              "title": "右对齐",
              "value": "right"
            }
          ]
        },
        "name": "horizontalCenter",
        "title": "水平对齐方式",
        "tsType": "'left' | 'center' | 'right'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "center"
          },
          "playground": []
        },
        "docDescription": "左对齐、右对齐、居中对齐"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "顶部对齐",
              "value": "top"
            },
            {
              "title": "居中对齐",
              "value": "center"
            },
            {
              "title": "底部对齐",
              "value": "bottom"
            }
          ]
        },
        "name": "verticalCenter",
        "title": "垂直对齐方式",
        "tsType": "'top' | 'center' | 'bottom'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "center"
          },
          "playground": []
        },
        "docDescription": "顶部对齐、居中对齐、底部对齐"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "点击放大",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否支持点击放大全屏展示",
        "docDescription": "是否支持点击放大全屏展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "Loading",
              "value": "loading"
            },
            {
              "title": "不显示加载状态",
              "value": "none"
            },
            {
              "title": "自定义默认图",
              "value": "placeholder"
            }
          ]
        },
        "name": "loadingType",
        "title": "加载样式",
        "tsType": "'loading' | 'none' | 'placeholder'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "loading"
          },
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholderSrc",
        "title": "默认图地址",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "https://static-vusion.nos-eastchina1.126.net/h5-template/lietu.png"
          },
          "playground": []
        },
        "if": "_ => _.loadingType === 'placeholder'"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载完成",
        "tsType": "(event: any) => any",
        "description": "网页加载完成时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "适应",
        "description": "",
        "code": "<template>\n<u-image src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\" fit=\"contain\"></u-image>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-image.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "适应（图片小于父元素时以原尺寸展示）",
        "description": "",
        "code": "<template>\n<u-image src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\" fit=\"scale-down\"></u-image>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-image.vue/screenshots/1.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "原尺寸",
        "description": "",
        "code": "<template>\n<u-image src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\" fit=\"none\"></u-image>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-image.vue/screenshots/2.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "拉伸",
        "description": "",
        "code": "<template>\n<u-image src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\" fit=\"fill\"></u-image>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-image.vue/screenshots/3.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "填充",
        "description": "",
        "code": "<template>\n<u-image src=\"https://static-vusion.163yun.com/assets/cloud-ui/1.jpg\" fit=\"cover\"></u-image>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-image.vue/screenshots/4.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UAlert",
    "alias": "公告",
    "title": "公告",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-alert",
    "description": "公告。",
    "icon": "alert",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "信息",
              "value": "info"
            },
            {
              "title": "成功",
              "value": "success"
            },
            {
              "title": "警告",
              "value": "warning"
            },
            {
              "title": "错误",
              "value": "error"
            }
          ]
        },
        "name": "type",
        "title": "公告类型",
        "tsType": "'info' | 'success' | 'warning' | 'error'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "info"
          },
          "playground": []
        },
        "docDescription": "信息、成功、警告、错误"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showIcon",
        "title": "显示图标",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "是否展开图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "左对齐",
              "value": "left"
            },
            {
              "title": "居中对齐",
              "value": "center"
            }
          ]
        },
        "name": "horizontal",
        "title": "对其方式",
        "tsType": "'left' | 'center'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "left"
          },
          "playground": []
        },
        "description": "选择对齐方式"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "closeable",
        "title": "手动关闭",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否可手动关闭公告",
        "docDescription": "是否显示关闭按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "bordered",
        "title": "显示边框",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "是否显示边框"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "关闭时",
        "tsType": "(event: any) => any",
        "description": "关闭时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "辅助文本"
      },
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "标题"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-alert type=\"info\"><template #title><u-text text=\"公告内容\"></u-text></template></u-alert>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-alert.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UCountDown",
    "alias": "计时器",
    "title": "计时器",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-count-down",
    "description": "用于计时",
    "icon": "countdown",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "timer",
        "title": "定时时长（秒）",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "60",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "设置定时时间",
        "docDescription": "计时器的总时长，单位为秒。支持手动输入或是动态绑定。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "正计时",
              "value": "positive"
            },
            {
              "title": "倒计时",
              "value": "negative"
            }
          ]
        },
        "name": "reverse",
        "title": "计时方式",
        "tsType": "'positive' | 'negative'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "positive"
          },
          "playground": []
        },
        "description": "设置计时器计时方式",
        "docDescription": "可选择正计时和倒计时"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autostart",
        "title": "自动计时",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置是否自动开始计时",
        "docDescription": "默认自动开始计时，支持动态绑定布尔类型（Boolean）的变量"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "start",
        "title": "计时器开始",
        "tsType": "(event: any) => any",
        "description": "计时器开始时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "pause",
        "title": "计时器暂停",
        "tsType": "(event: any) => any",
        "description": "计时器暂停时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "continue",
        "title": "计时器继续",
        "tsType": "(event: any) => any",
        "description": "计时器继续时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "stop",
        "title": "计时器结束",
        "tsType": "(event: any) => any",
        "description": "计时器结束时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "开始计时器",
        "params": [],
        "returns": [],
        "name": "start",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "暂停计时器",
        "params": [],
        "returns": [],
        "name": "pause",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "继续计时器",
        "params": [],
        "returns": [],
        "name": "continue",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "停止计时器",
        "params": [],
        "returns": [],
        "name": "stop",
        "title": "undefined"
      }
    ],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-count-down></u-count-down>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UDivider",
    "alias": "分割线",
    "title": "分隔线",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-divider",
    "description": "用于将内容分隔为多个区域",
    "icon": "divider",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "虚线",
              "value": "b"
            },
            {
              "title": "实线",
              "value": "a"
            }
          ]
        },
        "name": "dashed",
        "title": "线条类型",
        "tsType": "'b' | 'a'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "a"
          },
          "playground": []
        },
        "docDescription": "实线、虚线"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "居中",
              "value": "center"
            },
            {
              "title": "左",
              "value": "left"
            },
            {
              "title": "右",
              "value": "right"
            }
          ]
        },
        "name": "contentPosition",
        "title": "内容位置",
        "tsType": "'center' | 'left' | 'right'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "center"
          },
          "playground": []
        },
        "docDescription": "居中、左、右"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "横向",
              "value": "horizontal"
            },
            {
              "title": "竖向",
              "value": "column"
            }
          ]
        },
        "name": "direction",
        "title": "方向",
        "tsType": "'horizontal' | 'column'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "horizontal"
          },
          "playground": []
        },
        "docDescription": "横向、竖向"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "显示的文本"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "实线",
        "description": "",
        "code": "<template>\n<u-divider dashed=\"a\"><u-text text=\"文本\"></u-text></u-divider>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-divider.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "虚线",
        "description": "",
        "code": "<template>\n<u-divider dashed=\"b\"><u-text text=\"文本\"></u-text></u-divider>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-divider.vue/screenshots/1.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Display",
    "name": "UTimeline",
    "alias": "时间线",
    "title": "时间线",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-timeline",
    "description": "",
    "icon": "timeline",
    "tsTypeParams": "T",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T>",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "时间线的数据源。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "时间线数据类型。该属性为展示属性，由数据源推倒得到，无需填写。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "默认",
              "value": "default"
            },
            {
              "title": "时间线居中",
              "value": "label"
            }
          ]
        },
        "name": "mode",
        "title": "排布方式",
        "tsType": "'default' | 'label'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "default"
          },
          "playground": []
        },
        "description": "时间线节点与内容的排布方式",
        "docDescription": "默认、时间线居中"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "pending",
        "title": "待定节点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "待定节点连接线为虚线展示，用于表示即将发生或者正在进行的节点",
        "docDescription": "待定节点连接线为虚线展示，用于表示即将发生或者正在进行的节点"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "时间线子选项",
            "code": "<u-timeline-item></u-timeline-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UTimelineItem>",
        "params": [],
        "description": "插入 `<u-timeline-item>` 子组件"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "undefined",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTimelineItem",
        "kebabName": "u-timeline-item",
        "title": "时间线项",
        "description": "",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "label",
            "title": "标签",
            "tsType": "nasl.core.String",
            "description": "指定展示在另一侧的 `label`，只在 `label` 模式下生效",
            "docDescription": "指定展示在另一侧的 `label`，只在 `label` 模式下生效。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "左",
                  "value": "left"
                },
                {
                  "title": "右",
                  "value": "right"
                }
              ]
            },
            "name": "position",
            "title": "位置",
            "tsType": "'left' | 'right'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "right"
              },
              "playground": []
            },
            "description": "指定交替展示时的位置，只在 `alternate` 或 `label` 模式下生效",
            "docDescription": "指定交替展示时的位置，只在 `alternate` 或 `label` 模式下生效。"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "name": "color",
            "title": "节点颜色",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "blue"
              },
              "playground": []
            },
            "description": "指定圆圈颜色 `primary`, `success`, `warning`, `error`，或自定义的色值",
            "docDescription": "指定圆圈颜色 `primary`, `success`, `warning`, `error`，或自定义的色值。"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML"
          },
          {
            "concept": "SlotDeclaration",
            "name": "dot",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义图标"
          },
          {
            "concept": "SlotDeclaration",
            "name": "label",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义 `label` ，只在 `label` 模式下生效"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "普通用法",
        "description": "",
        "code": "<template>\n<u-timeline :dataSource=\"[{}, {}, {}]\">\n<template #item=\"current\">\n<u-timeline-item insource>\n<template #label>\n</template>\n</u-timeline-item>\n</template>\n</u-timeline>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Table",
    "name": "UTableView",
    "alias": "数据表格",
    "title": "数据表格",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-table-view",
    "description": "用于展示大量结构化数据。支持排序、过滤（筛选）、分页、自定义操作等复杂功能。",
    "icon": "table-view",
    "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "{\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n} | nasl.collection.List<T>",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "表格展示的数据。数据源可以绑定变量或者逻辑。变量或逻辑的返回值可以是数组，也可以是对象。对象格式为{list:[], total:10}",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "表格每一行的数据类型。该属性为展示属性，由数据源推导得到，无需填写"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "pagination",
        "title": "分页",
        "tsType": "nasl.core.Boolean",
        "description": "设置是否分页展示数据",
        "docDescription": "是否展示分页组件，数据源调用接口是否加入分页参数。默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "pageSize",
        "title": "默认每页条数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "20",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "每页的数据条数。默认20条。在\"分页\"属性开启时有效",
        "if": "_ => _.pagination === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showSizer",
        "title": "显示每页条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "显示每页条数切换器",
        "docDescription": "分页组件处是否展示数据条数的选择列表。默认开启。在\"分页\"属性开启时有效",
        "if": "_ => _.pagination === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "pageSizeOptions",
        "title": "每页条数选项",
        "tsType": "Array<nasl.core.Integer>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [
              {
                "concept": "NumericLiteral",
                "value": "10",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "20",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "50",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              }
            ],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "每页条数切换器的选项",
        "docDescription": "分页组件处是否展示每页显示数据条数的选择列表，需设置数组，如[10,20,30,40,50]。在\"分页\"属性开启时有效。",
        "if": "_ => _.pagination === true && _.showSizer === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "pageNumber",
        "title": "当前页数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当前默认展示在第几页",
        "docDescription": "当前加载的表格页。默认1。在\"分页\"属性开启时有效",
        "if": "_ => _.pagination === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showTotal",
        "title": "显示总条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "分页组件处是否显示表格总数。默认关闭。在\"分页\"属性开启时有效",
        "if": "_ => _.pagination === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showJumper",
        "title": "显示跳转输入",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示页面跳转输入框",
        "docDescription": "分页组件处是否展示跳转到某一页的输入框。默认关闭。在\"分页\"属性开启时有效",
        "if": "_ => _.pagination === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "sorting",
        "title": "初始化排序规则",
        "tsType": "{\n  field: nasl.core.String;\n  order: nasl.core.String;\n  compare?: Function;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        },
        "description": "设置数据初始化时的排序字段和顺序规则",
        "docDescription": "支持选择数据表格数据源中的某一条数据，配置默认排序规则，支持升序和降序"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "description": "在单选、多选操作、渲染树形数据中，指定数据唯一值的字段",
        "docDescription": "在表格开启了单选、多选操作、渲染树形数据中，指定数据唯一值的字段"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "单选值",
        "tsType": "T",
        "description": "用于标识单选选项的值",
        "docDescription": "当表格设置了单选列，或开启了可选行，选中某一行时的值。该取值由值字段名决定。一般会是id等能唯一标识每一行数据的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "values",
        "title": "多选值",
        "tsType": "nasl.collection.List<T>",
        "description": "用于标识多选选项的值",
        "docDescription": "当表格设置了多选列，选择多个值后获得了值列表数组。该取值由值字段名决定"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "treeDisplay",
        "title": "树形模式",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "以树形数据展示表格",
        "docDescription": "表格是否以树型方式展示。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => any",
        "description": "当数据源为平铺数据时自动生成树形数据的节点字段名，重要：值字段名需要一起配置",
        "docDescription": "标识父节点字段名，用于标识表格行取哪个数据作为父级的判断，需同步配置“值字段名”。在\"树行模式\"属性开启时有效",
        "if": "_ => _.treeDisplay === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "childrenField",
        "title": "子级值字段",
        "tsType": "(item: T) => nasl.collection.List<any>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "children"
          },
          "playground": []
        },
        "description": "树形数据子节点字段名，默认为children",
        "docDescription": "标识子节点字段名，用于表格显示时取哪个数据展示子树。在\"树行模式\"属性开启时有效",
        "if": "_ => _.treeDisplay === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "hasChildrenField",
        "title": "包含子级值字段",
        "tsType": "(item: T) => nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "hasChildren"
          },
          "playground": []
        },
        "description": "该字段指定行数据是否包含子节点数据，默认为hasChildren",
        "docDescription": "表示当前行是否需要展示子节点的\"展开/收起\"图标。在\"树形模式\"属性开启时有效",
        "if": "_ => _.treeDisplay === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "父子双向关联选中",
              "value": "up+down"
            },
            {
              "title": "单项父关联子",
              "value": "down"
            },
            {
              "title": "单项子关联父",
              "value": "up"
            },
            {
              "title": "父子不关联",
              "value": "none"
            }
          ]
        },
        "name": "treeCheckType",
        "title": "关联选中类型",
        "tsType": "'up+down' | 'down' | 'up' | 'none'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "up+down"
          },
          "playground": []
        },
        "description": "父子树节点是否关联选中",
        "docDescription": "当选中父节点时，子节点是否相应选中等。在\"树形模式\"属性开启并且表格存在\"多选列\"时有效",
        "if": "_ => _.treeDisplay === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "title",
        "title": "表格标题",
        "tsType": "nasl.core.String",
        "docDescription": "表格上方的标题信息。默认为空"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示表格头部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "是否显示表格头。默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "stickHead",
        "title": "表格头部吸顶",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "当页面滚动到顶时，表格头是否固定在头部，不随页面滚动。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "stickHeadOffset",
        "title": "表格头部吸顶偏移量",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "与\"表格头部吸顶\"选项配合使用，表示表格头吸顶时与顶部的距离",
        "if": "_ => _.stickHead === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "thEllipsis",
        "title": "表头文本过长省略",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "文字过长是否省略显示。默认文字超出时会换行。",
        "docDescription": "开启后，该列表头文本过长会省略显示，否则换行显示，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "ellipsis",
        "title": "内容区文本过长省略",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "文字过长是否省略显示。默认文字超出时会换行。",
        "docDescription": "开启后，该列文本过长会省略显示，否则换行显示，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "selectable",
        "title": "可选行",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以单选行",
        "docDescription": "表格行是否可点击选中，该取值由值字段名决定，一般会是id等能唯一标识每一行数据的值。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "cancelable",
        "title": "可取消",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以取消选择",
        "docDescription": "与\"可选行\"属性对应，表示选中的行再点击时是否可以取消选中。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "draggable",
        "title": "表格内可拖拽",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以拖拽行排序",
        "docDescription": "表格行是否可拖拽放置。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "acrossTableDrag",
        "title": "表格间可拖拽",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置多个表格间是否可以拖拽放置",
        "docDescription": "表格间是否可拖拽放置。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "bindOpen": true,
        "tabKind": "property",
        "name": "canDragableHandler",
        "title": "可拖拽节点",
        "tsType": "Function",
        "description": "设置表格行是否可拖拽起来。绑定逻辑",
        "if": "_ => _.draggable === true || _.acrossTableDrag === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "bindOpen": true,
        "tabKind": "property",
        "name": "canDropinHandler",
        "title": "可放置节点",
        "tsType": "Function",
        "description": "设置表格行是否可拖拽放入。绑定逻辑",
        "if": "_ => _.draggable === true || _.acrossTableDrag === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "accordion",
        "title": "手风琴模式",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否每次只展开一个",
        "docDescription": "表示点击展开行时，其它已经展开的行是否收起。在表格存在\"展开列\"时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "resizable",
        "title": "可调整列宽",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以调整列宽",
        "docDescription": "表格列之间是否出现调整样式，可以手动调整列宽"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "保持总宽不变，优先后一列弥补宽度",
              "value": "sequence"
            },
            {
              "title": "保持总宽不变，后面所有列平均弥补宽度",
              "value": "average"
            },
            {
              "title": "不做任何处理，表格宽度变化",
              "value": "none"
            }
          ]
        },
        "name": "resizeRemaining",
        "title": "调整列宽效果",
        "tsType": "'sequence' | 'average' | 'none'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "average"
          },
          "playground": []
        },
        "description": "设置调整列宽时如何处理剩余大小",
        "docDescription": "表示调整列宽时其他列宽的处理方式。在\"可调整列宽\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "configurable",
        "title": "配置展示列",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以配置展示列"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "virtual",
        "title": "虚拟滚动",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "虚拟滚动表示不展示所有的数据，只展示默认条数的数据，当滚动时再展示剩余的数据。当表格数据量大时，可设置为虚拟滚动，提高性能。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "itemHeight",
        "title": "每行高度",
        "tsType": "nasl.core.Decimal",
        "description": "与虚拟滚动配合使用，表示每一行的高度。请确保行里的数据不要换行",
        "if": "_ => _.virtual === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "virtualCount",
        "title": "展示条数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "60",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "与虚拟滚动配合使用，表示每屏展示的最大条数",
        "if": "_ => _.virtual === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "initialLoad",
        "title": "初始即加载",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置初始时是否立即加载",
        "docDescription": "- 是否在表格出现时立即加载数据，默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "加载完成-有数据",
              "value": "success"
            },
            {
              "title": "加载完成-暂无数据",
              "value": "empty"
            },
            {
              "title": "加载中",
              "value": "loading"
            },
            {
              "title": "加载失败",
              "value": "error"
            }
          ]
        },
        "name": "designerMode",
        "title": "加载状态设置",
        "tsType": "'success' | 'empty' | 'loading' | 'error'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "success"
          },
          "playground": []
        },
        "description": "设置不同加载状态的展示内容",
        "docDescription": "可通过切换该选项，设置不同状态时该组件的展示形式，支持配置"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "loadingText",
        "title": "加载中文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "正在加载中..."
          },
          "playground": []
        },
        "description": "加载中状态显示的提示文案",
        "docDescription": "当加载表格数据过程中的提示文字。默认“正在加载中...”。",
        "if": "_ => _.designerMode === 'loading'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindOpen": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "loading",
        "title": "加载中触发条件",
        "tsType": "nasl.core.Boolean",
        "description": "加载中状态的触发条件，未设置则默认为系统定义条件",
        "docDescription": "支持自定义状态的触发条件，未设置则默认为系统定义条件。",
        "if": "_ => _.designerMode === 'loading'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "errorText",
        "title": "加载失败文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "加载失败，请重试"
          },
          "playground": []
        },
        "description": "加载失败状态显示的提示文案",
        "docDescription": "加载失败的提示文字。默认\"加载失败，请重试\"。",
        "if": "_ => _.designerMode === 'error'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindOpen": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "error",
        "title": "加载失败触发条件",
        "tsType": "nasl.core.Boolean",
        "description": "加载失败状态的触发条件，未设置则默认为系统定义条件",
        "docDescription": "支持自定义状态的触发条件，未设置则默认为系统定义条件。",
        "if": "_ => _.designerMode === 'error'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "emptyText",
        "title": "暂无数据文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "暂无数据"
          },
          "playground": []
        },
        "description": "暂无数据状态显示的提示文案",
        "docDescription": "当表格为空时的提示文字。默认\"暂无数据\"。",
        "if": "_ => _.designerMode === 'empty'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "左对齐",
              "value": "left"
            },
            {
              "title": "居中对齐",
              "value": "center"
            },
            {
              "title": "右对齐",
              "value": "right"
            }
          ]
        },
        "name": "titleAlignment",
        "title": "标题对齐方式",
        "tsType": "'left' | 'center' | 'right'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "center"
          },
          "playground": []
        },
        "docDescription": "表格上方的标题信息的对齐方式。默认\"居中对齐\"。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "boldHeader",
        "title": "表头加粗",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "表格每一列的表头文字是否加粗。默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "line",
        "title": "分隔线条",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "单元格之间是否显示分隔线条",
        "docDescription": "表格每列之间是否展示分隔线条。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "striped",
        "title": "斑马条纹",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "表格行是否按斑马线条纹显示",
        "docDescription": "表格行是否按斑马线条纹显示。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "name": "defaultColumnWidth",
        "title": "默认列宽度",
        "tsType": "nasl.core.String | nasl.core.Decimal",
        "description": "表格的默认列宽度，可设置为数字或百分比",
        "docDescription": "表格每列的默认宽度。"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UTableViewOptions<T, V, P, M>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "size",
        "title": "分页大小",
        "tsType": "UTableViewOptions<T, V, P, M>['pageSize']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "page",
        "title": "当前页数",
        "tsType": "UTableViewOptions<T, V, P, M>['pageNumber']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "sort",
        "title": "排序属性",
        "tsType": "UTableViewOptions<T, V, P, M>['sorting']['field']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "order",
        "title": "排序属性",
        "tsType": "UTableViewOptions<T, V, P, M>['sorting']['order']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "value",
        "title": "单选选中值",
        "tsType": "UTableViewOptions<T, V, P, M>['value']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "values",
        "title": "多选选中值",
        "tsType": "UTableViewOptions<T, V, P, M>['values']"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-page",
        "title": "切换分页前",
        "tsType": "(event: {\n  size: nasl.core.Integer;\n  oldSize: nasl.core.Integer;\n  number: nasl.core.Integer;\n  oldNumber: nasl.core.Integer;\n}) => any",
        "description": "切换分页前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "page",
        "title": "切换分页后",
        "tsType": "(event: {\n  size: nasl.core.Integer;\n  oldSize: nasl.core.Integer;\n  number: nasl.core.Integer;\n  oldNumber: nasl.core.Integer;\n}) => any",
        "description": "切换分页或改变分页大小时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-sort",
        "title": "排序前",
        "tsType": "(event: {\n  field: nasl.core.String;\n  order: nasl.core.String;\n  compare?: Function;\n}) => any",
        "description": "排序前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "sort",
        "title": "排序后",
        "tsType": "(event: {\n  field: nasl.core.String;\n  order: nasl.core.String;\n  compare?: Function;\n}) => any",
        "description": "排序后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-filter",
        "title": "筛选前",
        "tsType": "(event: any) => any",
        "description": "筛选前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "filter",
        "title": "筛选后",
        "tsType": "(event: any) => any",
        "description": "筛选后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "click-row",
        "title": "点击行",
        "tsType": "(event: {\n  item: T;\n  index: nasl.core.Integer;\n  rowIndex: nasl.core.Integer;\n}) => any",
        "description": "点击某一行时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick-row",
        "title": "双击行",
        "tsType": "(event: {\n  item: T;\n  index: nasl.core.Integer;\n  rowIndex: nasl.core.Integer;\n}) => any",
        "description": "双击某一行时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  item: T;\n  oldItem: T;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "选择触发",
        "tsType": "(event: V) => any",
        "description": "选择某一项后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selectedItem: T;\n  value: V;\n  oldValue: V;\n  item: T;\n  oldItem: T;\n  index: nasl.core.Integer;\n}) => any",
        "description": "选择某一项后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "check",
        "title": "多选后",
        "tsType": "(event: {\n  checked: nasl.core.Boolean;\n  oldChecked: nasl.core.Boolean;\n  values: nasl.collection.List<V>;\n  oldValues: nasl.collection.List<V>;\n  item: T;\n}) => any",
        "description": "多选模式中，选中节点后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  item: T;\n  oldItem: T;\n  values: nasl.collection.List<V>;\n  oldValues: nasl.collection.List<V>;\n  items: nasl.collection.List<T>;\n}) => any",
        "description": "单选或多选值改变后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "resize",
        "title": "调整列宽后",
        "tsType": "(event: any) => any",
        "description": "调整列宽后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-toggle-expanded",
        "title": "展开行前",
        "tsType": "(event: {\n  item: T;\n  expanded: nasl.core.Boolean;\n  oldExpanded: nasl.core.Boolean;\n}) => any",
        "description": "点击展开按钮前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "toggle-expanded",
        "title": "展开行后",
        "tsType": "(event: {\n  item: T;\n  expanded: nasl.core.Boolean;\n}) => any",
        "description": "点击展开按钮后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "dragstart",
        "title": "拖拽开始时",
        "tsType": "(event: {\n  source: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  target: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  finalSource: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  position: nasl.core.String;\n  updateData: {\n    sourceList: nasl.collection.List<T>;\n    targetList: nasl.collection.List<T>;\n  };\n}) => any",
        "description": "拖拽行时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "dragover",
        "title": "拖拽经过时",
        "tsType": "(event: {\n  source: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  target: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  finalSource: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  position: nasl.core.String;\n  updateData: {\n    sourceList: nasl.collection.List<T>;\n    targetList: nasl.collection.List<T>;\n  };\n}) => any",
        "description": "拖拽经过每一行时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "drop",
        "title": "拖拽放置时",
        "tsType": "(event: {\n  source: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  target: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  finalSource: {\n    parent: T;\n    item: T;\n    level: nasl.core.Integer;\n    index: nasl.core.Integer;\n  };\n  position: nasl.core.String;\n  updateData: {\n    sourceList: nasl.collection.List<T>;\n    targetList: nasl.collection.List<T>;\n  };\n}) => any",
        "description": "拖拽结束时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "获取所有表格列的 field",
        "params": [],
        "returns": [],
        "name": "getFields",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "导出 excel 文件",
        "params": [
          {
            "concept": "Param",
            "name": "page",
            "description": "'当前页码'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "1",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "size",
            "description": "'每页条数'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "2000",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "filename",
            "description": "'导出文件名'"
          },
          {
            "concept": "Param",
            "name": "sort",
            "description": "'排序字段'"
          },
          {
            "concept": "Param",
            "name": "order",
            "description": "'排序顺序'"
          },
          {
            "concept": "Param",
            "name": "excludeColumns",
            "description": "'排除字段'",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "List",
              "typeNamespace": "nasl.collection",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            },
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NewList",
                "items": [],
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "List",
                  "typeNamespace": "nasl.collection",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "includeStyles",
            "description": "'是否带样式'"
          }
        ],
        "returns": [],
        "name": "exportExcel",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "重制编辑列的编辑状态为非编辑态",
        "params": [
          {
            "concept": "Param",
            "name": "item",
            "description": "'行数据'"
          }
        ],
        "returns": [],
        "name": "resetEdit",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "表格列",
            "code": "<u-table-view-column> <template #cell=\"current\"></template> <template #title><u-text text=\"表格列\"></u-text></template> <template #expander=\"current\"><u-table-view-expander :item=\"current.item\" @toggle=\"current.toggle\"></u-table-view-expander></template> </u-table-view-column>"
          },
          {
            "title": "表格动态列",
            "code": "<u-table-view-column-dynamic><template #cell=\"current\"></template><template #title=\"current\"><u-text text=\"表格动态列\"></u-text></template></u-table-view-column-dynamic>"
          },
          {
            "title": "表格列分组",
            "code": "<u-table-view-column-group> <template #title><u-text text=\"表格列分组\"></u-text></template> <u-table-view-column> <template #cell=\"current\"></template> <template #title><u-text text=\"表格列\"></u-text></template> <template #expander=\"current\"><u-table-view-expander :item=\"current.item\" @toggle=\"current.toggle\"></u-table-view-expander></template> </u-table-view-column> </u-table-view-column-group>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<UTableViewColumn<T, V, P, M> | UTableViewColumnDynamic<T, V, P, M, unknown> | UTableViewColumnGroup<T, V, P, M>>",
        "params": [],
        "description": "在表格中插入`<u-table-view-column>`子组件",
        "emptyBackground": "drag-entity-here"
      },
      {
        "concept": "SlotDeclaration",
        "name": "loading",
        "title": "加载中内容",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "自定义加载中内容"
      },
      {
        "concept": "SlotDeclaration",
        "name": "error",
        "title": "加载错误内容",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "自定义加载错误内容"
      },
      {
        "concept": "SlotDeclaration",
        "name": "empty",
        "title": "暂无数据内容",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "自定义暂无数据内容"
      },
      {
        "concept": "SlotDeclaration",
        "name": "dragGhost",
        "title": "拖拽缩略图",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义拖拽缩略图"
      },
      {
        "concept": "SlotDeclaration",
        "name": "configColumns",
        "title": "配置列",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "自定义配置列内容"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTableViewColumn",
        "kebabName": "u-table-view-column",
        "title": "表格列",
        "description": "表格列",
        "icon": "",
        "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "field",
            "title": "值字段",
            "tsType": "(item: T) => any",
            "description": "data 项中的字段",
            "docDescription": "数据项中对应的字段名，如createdTime"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "sortable",
            "title": "排序",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置该列是否可以排序",
            "docDescription": "开启后该列可排序，可设置默认顺序，升序或倒序"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "升序",
                  "value": "asc"
                },
                {
                  "title": "倒序",
                  "value": "desc"
                }
              ]
            },
            "name": "defaultOrder",
            "title": "排序初始顺序",
            "tsType": "'asc' | 'desc'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "asc"
              },
              "playground": []
            },
            "description": "该列首次点击时的排序顺序",
            "docDescription": "该列首次点击时的排序顺序。与表格属性中的\"默认排序顺序\"相同",
            "if": "_ => _.sortable === true"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "普通列",
                  "value": "normal"
                },
                {
                  "title": "序号列",
                  "value": "index"
                },
                {
                  "title": "单选列",
                  "value": "radio"
                },
                {
                  "title": "多选列",
                  "value": "checkbox"
                },
                {
                  "title": "展开列",
                  "value": "expander"
                },
                {
                  "title": "树形列",
                  "value": "tree"
                },
                {
                  "title": "编辑列",
                  "tooltip": "与列字段关联，列字段不能为空",
                  "disabledIf": "_ => _.field === null",
                  "value": "editable"
                },
                {
                  "title": "拖拽标识列",
                  "value": "dragHandler"
                }
              ]
            },
            "name": "type",
            "title": "列类型",
            "tsType": "'normal' | 'index' | 'radio' | 'checkbox' | 'expander' | 'tree' | 'editable' | 'dragHandler'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "normal"
              },
              "playground": []
            },
            "description": "支持序号列、单/多选、树形列和编辑列切换，序号列支持按照数字排序。选择编辑列需要先设置列字段。",
            "docDescription": "可设置序号列、单选列、多选列、展开列或树型列"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "autoIndex",
            "title": "换页继续编号",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "换页后，继续上一页的列序号进行编号",
            "docDescription": "支持换页后，继续上一页的列序号进行编号",
            "if": "_ => _.type === 'index'"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "startIndex",
            "title": "起始序号",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "1",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "序号列的起始序号",
            "docDescription": "当列类型为\"序号列\"时有效。默认值为1",
            "if": "_ => _.type === 'index' && _.autoIndex !== true"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "fixed",
            "title": "固定列",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "该列是否固定。左侧固定列需要从第一列到当前固定列之间的列都是固定列。右侧固定列需要最后一列到当前固定列之间的列都是固定列。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "thEllipsis",
            "title": "表头文本过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "开启后，该列表头文本过长会省略显示，否则换行显示，默认关闭"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "ellipsis",
            "title": "内容区文本过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "开启后，该列文本过长会省略显示，否则换行显示，默认关闭"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "hidden",
            "title": "隐藏列",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "docDescription": "开启后，当表格横向滚动条滚动时，该列会固定不会跟随滚动条滚动"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "左侧",
                  "value": "left"
                },
                {
                  "title": "右侧",
                  "value": "right"
                }
              ]
            },
            "name": "expanderPosition",
            "title": "展开列图标位置",
            "tsType": "'left' | 'right'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "left"
              },
              "playground": []
            },
            "description": "展开列图标的位置",
            "docDescription": "展开列图标的位置。默认\"左侧\"。",
            "if": "_ => _.type === 'expander'"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "name": "width",
            "title": "列宽度",
            "tsType": "nasl.core.String | nasl.core.Decimal",
            "description": "设置列宽度，可设置为数字或百分比",
            "docDescription": "指定列宽，可以是数字或百分比，如100，或10%。"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter",
              "min": 1,
              "precision": 0
            },
            "name": "colSpan",
            "title": "合并列数",
            "tsType": "nasl.core.Integer"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "autoRowSpan",
            "title": "自动合并相同数据",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            }
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "cell",
            "title": "单元格",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "对单元格的数据展示进行自定义"
          },
          {
            "concept": "SlotDeclaration",
            "name": "editcell",
            "title": "编辑单元格",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "对单元格的编辑数据展示进行自定义"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "对标题进行自定义"
          },
          {
            "concept": "SlotDeclaration",
            "name": "expandContent",
            "title": "展开列内容",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "展开列的内容"
          },
          {
            "concept": "SlotDeclaration",
            "name": "expander",
            "title": "展开列图标",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "展开列图标"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTableViewColumnConfig",
        "kebabName": "u-table-view-column-config",
        "title": "表格配置列",
        "description": "",
        "icon": "",
        "tsTypeParams": "T, V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "dataSource",
            "title": "数据源",
            "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
            "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html",
            "docDescription": "表格展示的数据。数据源可以绑定变量或者逻辑。变量或逻辑的返回值可以是数组，也可以是对象。对象格式为{list:[], total:10}",
            "designerValue": [
              {},
              {},
              {}
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "dataSchema",
            "title": "数据类型",
            "tsType": "T",
            "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html",
            "docDescription": "表格每一行的数据类型。该属性为展示属性，由数据源推导得到，无需填写"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "PropertySelectSetter"
            },
            "name": "valueField",
            "title": "值字段",
            "tsType": "(item: T) => V",
            "description": "在单选、多选操作、渲染树形数据中，指定数据唯一值的字段",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html",
            "docDescription": "在表格开启了单选、多选操作、渲染树形数据中，指定数据唯一值的字段",
            "disabledIf": "_ => _.dataSource === null"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "sync": true,
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "V",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "showFooter",
            "title": "确定/取消按钮",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "true"
              },
              "playground": []
            },
            "description": "控制弹出层的确定/取消按钮是否展示"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "select",
            "title": "选择后",
            "tsType": "(event: {\n  selectedItem: T;\n  value: V;\n  oldValue: V;\n  item: T;\n  oldItem: T;\n}) => any"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "配置列展示title",
            "tsType": "() => Array<ViewComponent>",
            "params": []
          },
          {
            "concept": "SlotDeclaration",
            "name": "item",
            "title": "配置列展示item",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "自定义选项的结构和样式"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTableViewColumnDynamic",
        "kebabName": "u-table-view-column-dynamic",
        "title": "表格动态列",
        "description": "",
        "icon": "",
        "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean, T1",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "dataSource",
            "title": "数据源",
            "tsType": "{\n  list: nasl.collection.List<T1>;\n  total: nasl.core.Integer;\n} | nasl.collection.List<T1>",
            "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html",
            "docDescription": "表格展示的数据。数据源可以绑定变量或者逻辑。变量或逻辑的返回值可以是数组，也可以是对象。对象格式为{list:[], total:10}",
            "designerValue": [
              {}
            ]
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "dataSchema",
            "title": "数据类型",
            "tsType": "T1",
            "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html",
            "docDescription": "表格每一行的数据类型。该属性为展示属性，由数据源推导得到，无需填写"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "PropertySelectSetter"
            },
            "name": "valueField",
            "title": "值字段",
            "tsType": "(item: T) => V",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "value"
              },
              "playground": []
            },
            "description": "在单选、多选操作、渲染树形数据中，指定数据唯一值的字段",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/05.%E8%A1%A8%E6%A0%BC/100.%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC.html",
            "docDescription": "在表格开启了单选、多选操作、渲染树形数据中，指定数据唯一值的字段",
            "disabledIf": "_ => _.dataSource === null"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "sortable",
            "title": "排序",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置该列是否可以排序",
            "docDescription": "开启后该列可排序，可设置默认顺序，升序或倒序"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "升序",
                  "value": "asc"
                },
                {
                  "title": "倒序",
                  "value": "desc"
                }
              ]
            },
            "name": "defaultOrder",
            "title": "排序初始顺序",
            "tsType": "'asc' | 'desc'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "asc"
              },
              "playground": []
            },
            "description": "该列首次点击时的排序顺序",
            "docDescription": "该列首次点击时的排序顺序。与表格属性中的\"默认排序顺序\"相同",
            "if": "_ => _.sortable === true"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "fixed",
            "title": "固定列",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "该列是否固定。左侧固定列需要从第一列到当前固定列之间的列都是固定列。右侧固定列需要最后一列到当前固定列之间的列都是固定列。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "thEllipsis",
            "title": "表头文本过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "开启后，该列表头文本过长会省略显示，否则换行显示，默认关闭"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "ellipsis",
            "title": "内容区文本过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "开启后，该列文本过长会省略显示，否则换行显示，默认关闭"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "hidden",
            "title": "隐藏列",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "docDescription": "开启后，当表格横向滚动条滚动时，该列会固定不会跟随滚动条滚动"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "name": "width",
            "title": "列宽度",
            "tsType": "nasl.core.String | nasl.core.Decimal",
            "description": "设置列宽度，可设置为数字或百分比",
            "docDescription": "指定列宽，可以是数字或百分比，如100，或10%。"
          }
        ],
        "readableProps": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "data",
            "title": "数据",
            "tsType": "UTableViewColumnDynamicOptions<T, V, P, M, unknown>['dataSource']"
          }
        ],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "配置列展示title",
            "tsType": "(current: {\n  columnIndex: nasl.core.Integer;\n  columnItem: T1;\n}) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": ""
              }
            ]
          },
          {
            "concept": "SlotDeclaration",
            "name": "cell",
            "title": "配置列展示item",
            "tsType": "(current: CurrentDynamic<T, T1>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "CurrentDynamic",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    },
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "自定义选项的结构和样式"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTableViewColumnGroup",
        "kebabName": "u-table-view-column-group",
        "title": "表格列分组",
        "description": "",
        "icon": "",
        "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "表格列",
                "code": "<u-table-view-column><template #cell=\"current\"></template><template #title><u-text text=\"表格列\"></u-text></template></u-table-view-column>"
              },
              {
                "title": "表格动态列",
                "code": "<u-table-view-column-dynamic><template #cell=\"current\"></template><template #title=\"current\"><u-text text=\"表格动态列\"></u-text></template></u-table-view-column-dynamic>"
              }
            ],
            "name": "default",
            "title": "默认",
            "tsType": "SlotType<() => Array<UTableViewColumn<T, V, P, M>>>",
            "params": [],
            "description": "在表格中插入`<u-table-view-column>`子组件",
            "emptyBackground": "drag-entity-here"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "对标题进行自定义"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTableViewExpander",
        "kebabName": "u-table-view-expander",
        "title": "展开列图标",
        "description": "",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "expandIcon",
            "title": "展开时图标",
            "tsType": "nasl.core.String",
            "description": "展开时图标"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "collapseIcon",
            "title": "关闭时图标",
            "tsType": "nasl.core.String",
            "description": "关闭时图标"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "普通数据表格",
        "description": "",
        "code": "<template>\n<u-table-view :pagination=\"true\" :pageSize=\"20\" :pageNumber=\"1\"></u-table-view>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-table-view.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Table",
    "name": "UListView",
    "alias": "数据列表",
    "title": "数据列表",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-list-view",
    "description": "用于列举大量数据的列表框，支持单选、多选、过滤（搜索）、分页等功能。",
    "icon": "list-view",
    "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean, C extends string",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "{\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n} | nasl.collection.List<T>",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "列表展示的数据。数据源可以绑定变量或者逻辑。变量或逻辑的返回值可以是数组，也可以是对象。对象格式为{list:[], total:10}",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "列表每一行的数据类型。该属性为展示属性，由数据源推倒得到，无需填写。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "pageable",
        "title": "分页",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否分页展示数据",
        "docDescription": "是否展示分页组件，数据源调用接口是否加入分页参数。默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "pageSize",
        "title": "默认每页条数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "50",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "每页的数据条数。默认50条。在\"可分页\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "pageNumber",
        "title": "当前页数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当前默认展示在第几页",
        "docDescription": "当前加载的列表页。默认1。在\"可分页\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "pageSizeOptions",
        "title": "每页条数选项",
        "tsType": "Array<nasl.core.Integer>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [
              {
                "concept": "NumericLiteral",
                "value": "10",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "20",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "50",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              }
            ],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "每页条数切换器的选项",
        "docDescription": "每页显示数据条数的选择列表，需设置数组，如[10,20,30,40,50]。在\"可分页\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showTotal",
        "title": "显示总条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "分页组件处是否显示列表总数。默认关闭。在\"可分页\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showSizer",
        "title": "显示每页条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示每页条数切换器",
        "docDescription": "是否展示数据条数的选择列表。默认开启。在\"可分页\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showJumper",
        "title": "显示跳转输入",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示页面跳转输入框",
        "docDescription": "分页组件处是否展示跳转到某一页的输入框。默认关闭。在\"可分页\"属性开启时有效。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "filterable",
        "title": "筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以筛选，开启将会显示搜索框。",
        "docDescription": "是否展示可筛选的输入框。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "remotePaging",
        "title": "后端分页",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否使用后端分页。",
        "docDescription": "表示数据列表的分页由接口处理。分页参数传入后端接口，由后端接口返回相应的数据。默认开始。关闭后，如果\"可分页\"属性开启，分页将由列表组件处理，不会发送后端接口。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "matchMethod",
        "title": "匹配方法",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "includes"
          },
          "playground": []
        },
        "description": "筛选时的匹配方法",
        "docDescription": "筛选时的匹配方法。可写值\"=\"、\"==\"、\"eq\"、\"!=\"、\"neq\"、\"<\"，\"lt\"，\"<=\"，\"lte\"，\">\"，\"gt\"，\">=\"，\"gte\"，\"includes\"，\"startsWith\"，\"endsWith\"。也可传入处理函数。当\"可筛选\"属性开启时有效。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "caseSensitive",
        "title": "大小写敏感",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否区分大小写",
        "docDescription": "表示筛选时是否大小写敏感。当\"可筛选\"属性开启时有效。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "搜索框占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请输入"
          },
          "playground": []
        },
        "description": "搜搜框为空时显示的占位符文本",
        "docDescription": "搜索框为空时提示文本，默认\"请输入\"。当\"可筛选\"属性开启时有效。",
        "if": "_ => _.filterable === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "M extends true ? (C extends '' ? nasl.collection.List<V> : nasl.core.String) : V",
        "description": "显示的值",
        "docDescription": "在列表开启可多选时，指定数据唯一值的字段。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "当开启可多选时，显示的选项文本字段名",
        "docDescription": "当开启可多选时，显示的选项文本字段名。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "当开启可多选时，选项值的字段",
        "docDescription": "当开启可多选时，选项值的字段名。当\"可多选\"属性开启时有效。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "cancelable",
        "title": "可取消",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "与\"可多选\"属性对应，表示选中的行再点击时是否可以取消选中。默认关闭。",
        "docDescription": "与\"可多选\"属性对应，表示选中的行再点击时是否可以取消选中。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multiple",
        "title": "可多选",
        "tsType": "M",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以多选行",
        "docDescription": "列表的行是否可选中。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "可点击搜索框中的清除按钮一键清除内容",
        "docDescription": "搜索框是否有清除按钮，默认关闭。当\"可筛选\"属性开启时有效。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示头部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "是否显示列表头。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "title",
        "title": "列表标题",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "列表"
          },
          "playground": []
        },
        "docDescription": "列表头部的标题信息。当\"显示头部\"属性开启时有效"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFoot",
        "title": "显示底部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "显示列表底部，包括分页组件。默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "initialLoad",
        "title": "初始即加载",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置初始时是否立即加载",
        "docDescription": "是否在列表出现时立即加载数据，默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "加载完成-有数据",
              "value": "success"
            },
            {
              "title": "加载完成-暂无数据",
              "value": "empty"
            },
            {
              "title": "加载中",
              "value": "loading"
            },
            {
              "title": "加载失败",
              "value": "error"
            }
          ]
        },
        "name": "designerMode",
        "title": "加载状态设置",
        "tsType": "'success' | 'empty' | 'loading' | 'error'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "success"
          },
          "playground": []
        },
        "description": "设置不同加载状态的展示内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "loadingText",
        "title": "加载中文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "加载中..."
          },
          "playground": []
        },
        "description": "加载中状态显示的文案",
        "docDescription": "当数据正在加载时展示的文字，默认为\"加载中...\"。",
        "if": "_ => _.designerMode === 'loading'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindOpen": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "loading",
        "title": "自定义加载中触发条件",
        "tsType": "nasl.core.Boolean",
        "description": "支持自定义状态的触发条件，未设置则默认为系统定义条件",
        "if": "_ => _.designerMode === 'loading'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "errorText",
        "title": "加载失败文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "加载失败，请重试"
          },
          "playground": []
        },
        "description": "加载失败状态显示的提示文案",
        "docDescription": "加载失败的提示文字。默认\"加载失败，请重试\"",
        "if": "_ => _.designerMode === 'error'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindOpen": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "error",
        "title": "加载失败触发条件",
        "tsType": "nasl.core.Boolean",
        "description": "加载失败状态的触发条件，未设置则默认为系统定义条件",
        "docDescription": "控制表格加载失败的展示时机。默认关闭。",
        "if": "_ => _.designerMode === 'error'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "emptyText",
        "title": "暂无数据文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "暂无数据"
          },
          "playground": []
        },
        "description": "暂无数据状态显示的提示文案",
        "docDescription": "当列表为空时的提示文字。默认\"暂无数据\"",
        "if": "_ => _.designerMode === 'empty'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "border",
        "title": "显示边框",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "列表是否展示边框。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "自适应",
              "value": "auto"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'normal' | 'auto'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "auto"
          },
          "playground": []
        },
        "description": "设置数据列表宽度大小",
        "docDescription": "数据列表宽度。默认自适应。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "自适应",
              "value": "auto"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'normal' | 'auto'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置数据列表高度大小",
        "docDescription": "数据列表高度。默认正常。"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UListViewOptions<T, V, P, M, C>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "size",
        "title": "分页大小",
        "tsType": "UListViewOptions<T, V, P, M, C>['pageSize']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "page",
        "title": "当前页数",
        "tsType": "UListViewOptions<T, V, P, M, C>['pageNumber']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "sort",
        "title": "排序属性",
        "tsType": "nasl.core.String"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "order",
        "title": "排序方式",
        "tsType": "nasl.core.String"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "filterText",
        "title": "过滤文本",
        "tsType": "nasl.core.String"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "选择时",
        "tsType": "(event: V) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项时触发。单选模式中："
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n  values: nasl.collection.List<V>;\n}) => any",
        "description": "选择值改变时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML",
        "emptyBackground": "drag-entity-here"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "项",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-list-view :pageNumber=\"1\" :pageSize=\"50\"></u-list-view>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-list-view.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Table",
    "name": "UGridView",
    "alias": "数据网格",
    "title": "数据网格",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-grid-view",
    "description": "用于列举大量数据的列表框，支持单选、多选、过滤（搜索）、分页等功能。",
    "icon": "grid-view",
    "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean, C extends string",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "{\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n} | nasl.collection.List<T>",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "组件的数据源，配置内容为数据集对象或者返回数据集的逻辑。",
        "designerValue": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "IDE 根据配置的数据源动态计算返回内容的数据结构，用于动态配置项 current.item 的类型说明。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段名",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "选项文本的字段名"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段名",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "选项值的字段名"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "pageable",
        "title": "分页",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否分页展示数据",
        "docDescription": "可分页：是否需要数据分页展示，默认关闭。\n- 开启：展示分页内容，调用数据源逻辑时会将分页信息作为入参传入。\n- 关闭：不展示分页内容。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "pageSize",
        "title": "默认每页条数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "50",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "每页的数据条数，默认 50。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "pageNumber",
        "title": "当前页数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当前默认展示在第几页",
        "docDescription": "可设置加载出的网格处于第几页的位置。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "pageSizeOptions",
        "title": "每页条数选项",
        "tsType": "Array<nasl.core.Integer>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [
              {
                "concept": "NumericLiteral",
                "value": "10",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "20",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "50",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              }
            ],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "每页条数切换器的选项",
        "docDescription": "每页显示数据条数的选择列表，需设置数组，如 [10,20,50]。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showTotal",
        "title": "显示总条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "开启时显示列表所有行数，默认关闭。\n- 开启：展示分页内容，调用数据源时会将数据源作为入参传入。\n- 关闭：不展示分页内容。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showSizer",
        "title": "显示每页条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示每页条数切换器",
        "docDescription": "开启时显示分页大小选项，可选择每页显示条数，默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showJumper",
        "title": "显示跳转输入",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示页面跳转输入框",
        "docDescription": "开启时可直接输入要跳转的页数，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "remotePaging",
        "title": "后端分页",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "数据网格内容展示，完全由数据源返回值控制，比如总条目数、数据展示条数等。默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "repeat",
        "title": "网格数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "每行排列几项",
        "docDescription": "每行排列多少个网格。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示头部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "显示数据网格列表标题，默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "title",
        "title": "头部标题",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "列表"
          },
          "playground": []
        },
        "docDescription": "数据网格列表标题，在开始显示头部功能后显示"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFoot",
        "title": "显示底部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "显示数据网格底部选项，如分页大小，跳转输入等，默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "initialLoad",
        "title": "初始即加载",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置初始时是否立即加载",
        "docDescription": "是否在初始时立即加载，当数据源配置为逻辑时，组件首次渲染自动调用逻辑。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "加载完成-有数据",
              "value": "success"
            },
            {
              "title": "加载完成-暂无数据",
              "value": "empty"
            },
            {
              "title": "加载中",
              "value": "loading"
            },
            {
              "title": "加载失败",
              "value": "error"
            }
          ]
        },
        "name": "designerMode",
        "title": "状态设置",
        "tsType": "'success' | 'empty' | 'loading' | 'error'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "success"
          },
          "playground": []
        },
        "description": "设置不同状态的展示内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "loadingText",
        "title": "加载中文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "正在加载中..."
          },
          "playground": []
        },
        "description": "加载中状态显示的提示文案",
        "docDescription": "加载中显示的文字，仅在使用分页加载时出现，默认正在加载中。",
        "if": "_ => _.designerMode === 'loading'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindOpen": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "loading",
        "title": "自定义加载中触发条件",
        "tsType": "nasl.core.Boolean",
        "description": "支持自定义状态的触发条件，未设置则默认为系统定义条件",
        "if": "_ => _.designerMode === 'loading'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "errorText",
        "title": "加载失败文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "加载失败，请重试"
          },
          "playground": []
        },
        "description": "加载失败状态显示的提示文案",
        "docDescription": "数据网格加载失败时展示的文字，加载失败，请重试。",
        "if": "_ => _.designerMode === 'error'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "bindOpen": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "error",
        "title": "加载失败触发条件",
        "tsType": "nasl.core.Boolean",
        "description": "加载失败状态的触发条件，未设置则默认为系统定义条件",
        "docDescription": "开启后所有数据均不展示，仅展示加载失败文字，常用在数据源不是逻辑的时候，由外部触发组件的加载失败状态，默认关闭",
        "if": "_ => _.designerMode === 'error'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "emptyText",
        "title": "暂无数据文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "暂无数据"
          },
          "playground": []
        },
        "description": "暂无数据状态显示的提示文案",
        "docDescription": "数据网格数据源返回值为空时展示的文字，默认暂无数据。",
        "if": "_ => _.designerMode === 'empty'"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）。"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UGridViewOptions<T, V, P, M, C>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "size",
        "title": "分页大小",
        "tsType": "UGridViewOptions<T, V, P, M, C>['pageSize']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "page",
        "title": "当前页数",
        "tsType": "UGridViewOptions<T, V, P, M, C>['pageNumber']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "sort",
        "title": "排序属性",
        "tsType": "nasl.core.String"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "order",
        "title": "排序方式",
        "tsType": "nasl.core.String"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "选择时",
        "tsType": "(event: V) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项时触发。单选模式中："
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n  values: nasl.collection.List<V>;\n}) => any",
        "description": "选择值改变时触发。单选模式中："
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML",
        "emptyBackground": "drag-entity-here"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "undefined",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "普通数据网格",
        "description": "",
        "code": "<template>\n<u-grid-view style=\"height:auto\" :pageNumber=\"1\" :pageSize=\"50\"></u-grid-view>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-grid-view.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Table",
    "name": "UCalendarView",
    "alias": "日历",
    "title": "日历",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-calendar-view",
    "description": "用于展示大量结构化数据。支持日历结构展示。",
    "icon": "calendar",
    "tsTypeParams": "T",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "组件的数据源，配置内容为数据集对象或者返回数据集的逻辑。",
        "designerValue": [
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "IDE 根据配置的数据源动态计算返回内容的数据结构，用于动态配置项 current.item 的类型说明。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "startKey",
        "title": "开始时间字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "startTime"
          },
          "playground": []
        },
        "description": "数据内表示开始时间的字段",
        "docDescription": "数据内表示开始时间的字段，要求对应数据必须包含日期（日期/日期时间格式），**单独使用表示当天**；跟结束时间字段配合使用表示日期区间，组件根据日期区间判断展示在哪些日期内。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "endKey",
        "title": "结束时间字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "endTime"
          },
          "playground": []
        },
        "description": "数据内表示结束时间的字段",
        "docDescription": "数据内表示结束时间的字段，要求对应数据必须包含日期（日期/日期时间格式），跟开始时间字段配合使用表示日期区间，组件根据时间区间判断展示在哪些日期内。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "nasl.core.Date",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "TODAY"
          },
          "playground": []
        },
        "description": "当前选中的日期",
        "docDescription": "当前选择的日期。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "minDate",
        "title": "最小日期值",
        "tsType": "nasl.core.Date",
        "description": "最小可选的日期值，默认为10年前，日期填写格式为“yyyy-mm-dd”",
        "docDescription": "控制日历展示的日期范围，默认 10 年前。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "maxDate",
        "title": "最大日期值",
        "tsType": "nasl.core.Date",
        "description": "最大可选的日期值，默认为9年后，日期填写格式为“yyyy-mm-dd”",
        "docDescription": "控制日历展示的日期范围，默认 9 年后。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showWeekDays",
        "title": "展示周天",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "控制头部示例星期几信息展示，默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showWeeks",
        "title": "展示周数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "控制当前周为第几周信息展示，默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showBasic",
        "title": "展示基础配置",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否展示顶部左侧的 \"<\" \"今天\" \">\" 等基础配置功能",
        "docDescription": "控制顶部左侧 上个月、当天、下个月 的快捷操作入口展示，默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showAdvance",
        "title": "展示高级配置",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否展示顶部右侧的年份、月份选项高级配置",
        "docDescription": "控制顶部右侧 年份、月份 快捷切换操作入口展示，默认开启。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "firstDayOfWeek",
        "title": "首列星期",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "填写数字1~7，分别表示周一~周日",
        "docDescription": "0～7 (周一～周日) 数字配置，自定义每行从周几开始展示，默认 1，**当开启展示周数时固定周一开始**。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multiple",
        "title": "可多选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "开启可多选后，可通过ctrl/command+鼠标多选"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  date: nasl.core.Integer;\n  timestamp: nasl.core.Integer;\n  value: nasl.core.String | nasl.core.Date;\n  oldValue: nasl.core.String | nasl.core.Date;\n  week: nasl.core.Integer;\n}) => any",
        "description": "选择某一个日期时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  date: nasl.core.Integer;\n  timestamp: nasl.core.Integer;\n  week: nasl.core.Integer;\n}) => any",
        "description": "日期改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change-year",
        "title": "年改变后",
        "tsType": "(event: nasl.core.String) => any",
        "description": "年份改变后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change-month",
        "title": "月改变后",
        "tsType": "(event: nasl.core.String) => any",
        "description": "月份改变后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "插入文本或 HTML 至日期组件底部"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "普通日历",
        "description": "",
        "code": "<template>\n<u-calendar-view>\n<template #default=\"current\">\n<u-linear-layout gap=\"small\"></u-linear-layout>\n</template>\n</u-calendar-view>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-calendar-view.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Table",
    "name": "UListComponents",
    "alias": "组件列表",
    "title": "组件列表",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-list-components",
    "description": "组件列表",
    "icon": "forcom",
    "tsTypeParams": "T",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "组件的数据源，配置内容为数据集对象或者返回数据集的逻辑。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "IDE 根据配置的数据源动态计算返回内容的数据结构，用于动态配置项 current.item 的类型说明。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "colnum",
        "title": "每行排列项数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "为空时默认为5",
        "docDescription": "支持定义每一行排列的项数，为空时会自适应宽度并自动换行。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "equalWidth",
        "title": "均分宽度",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置是否均分宽度",
        "docDescription": "支持根据组件列表所占宽度自动均匀排布各项。\n- 开启：默认根据组件列表宽度自动计算每一项内容宽度，宽度为 100% / 每行项数。\n- 关闭：每一项内容自适应宽度。"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UListComponentsOptions<T>['dataSource']"
      }
    ],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "内容自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-list-components>\n<template #default=\"current\">\n</template>\n</u-list-components>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-list-components.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UForm",
    "alias": "表单",
    "title": "表单",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-form",
    "description": "具有数据收集、校验和提交功能的表单，包含输入框、选择框、复选框、单选框等元素。",
    "icon": "form",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内展示",
              "value": "inline"
            },
            {
              "title": "块级展示，宽度会充满父元素",
              "value": "block"
            },
            {
              "title": "栅格展示，可设置列数",
              "value": "inline-flex"
            }
          ]
        },
        "name": "layout",
        "title": "表单布局",
        "tsType": "'inline' | 'block' | 'inline-flex'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "block"
          },
          "playground": []
        },
        "docDescription": "更改表单的布局方式。行内展示，标签与表单项在一行展示。块级展示，宽度会充满父元素。栅格展示，可设置列数。",
        "onChange": [
          {
            "clear": [
              "repeat"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "min": 1
        },
        "name": "repeat",
        "title": "列数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "整个表单的划分列数",
        "docDescription": "整个表单的划分列数，此项需要设置表单布局为“栅格展示”。",
        "if": "_ => _.layout === 'inline-flex' || _.repeat !== 1"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内展示",
              "value": "inline"
            },
            {
              "title": "块级展示，标签与表单项分行展示",
              "value": "block"
            }
          ]
        },
        "name": "labelLayout",
        "title": "标签布局",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "docDescription": "设置标签布局方式。行内展示；块级展示，标签与单项分行展示- "
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "labelEllipsis",
        "title": "标签过长省略",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "文字过长是否省略显示。默认文字超出时会换行。",
        "docDescription": "文字过长是否省略显示，默认文字超出时会换行。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "collapsible",
        "title": "可折叠",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以展开/折叠",
        "docDescription": "分组是否可以折叠。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "accordion",
        "title": "手风琴模式",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否每次只展开一个",
        "docDescription": "是否每次只会展开一个分组。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "整行点击均可触发",
              "value": "click"
            },
            {
              "title": "仅点击小箭头时触发",
              "value": "click-expander"
            }
          ]
        },
        "name": "expandTrigger",
        "title": "展开触发方式",
        "tsType": "'click' | 'click-expander'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "description": "展开/折叠操作的触发方式",
        "docDescription": "展开/折叠的触发方式。\n- 整行点击均可触发。\n- 仅点击小箭头时触发。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "无",
              "value": "none"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "gapWidth",
        "title": "列间隔",
        "tsType": "'none' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置表单列间隔大小",
        "docDescription": "设置表单项间隔大小。支持无、小、正常、大四个级别，此项需要设置表单布局为“行内展示”。",
        "if": "_ => _.layout === 'inline'"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "无",
              "value": "none"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "gapHeight",
        "title": "行间隔",
        "tsType": "'none' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置表单行间隔大小",
        "docDescription": "设置表单行间隔大小。支持无、小、正常、大四个级别。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "迷你",
              "value": "mini"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "labelSize",
        "title": "标签宽度",
        "tsType": "'mini' | 'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "docDescription": "设置标签宽度。支持迷你、小、正常、大四个级别。",
        "if": "_ => _.labelLayout === 'inline'"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "validate",
        "title": "验证后",
        "tsType": "(event: {\n  rawValue: nasl.core.String;\n  value: nasl.core.String;\n  trigger: nasl.core.String;\n  muted: nasl.core.String;\n  valid: nasl.core.Boolean;\n  touched: nasl.core.Boolean;\n  dirty: nasl.core.Boolean;\n  firstError: nasl.core.String;\n  triggerValid: nasl.core.Boolean;\n}) => any",
        "description": "验证时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "手动验证。",
        "params": [
          {
            "concept": "Param",
            "name": "trigger",
            "description": "'触发方式，可选值：`submit`、`blur`和`input`之一，或者它们的任意组合。'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "submit"
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "muted",
            "description": "'是否验证后无提示'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            }
          }
        ],
        "returns": [],
        "name": "validate",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "验证表单中的某一项，已废弃。表单中的项是嵌套的，用 name 层级较深，而且可能有重名。",
        "params": [
          {
            "concept": "Param",
            "name": "name",
            "description": "'表单项的 name'"
          },
          {
            "concept": "Param",
            "name": "trigger",
            "description": "'触发方式，可选值：`submit`、`blur`和`input`之一，或者它们的任意组合。'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "submit"
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "muted",
            "description": "'是否验证后无提示'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            }
          }
        ],
        "returns": [],
        "name": "validateItem",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "表单分组",
            "code": "<u-form-group><template #title><u-text text=\"分组\"></u-text></template><u-form-item><template #label><u-text text=\"表单项\"></u-text></template></u-form-item></u-form-group>"
          },
          {
            "title": "表单项",
            "code": "<u-form-item><template #label><u-text text=\"表单项\"></u-text></template></u-form-item>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UFormGroup | UFormItem>",
        "params": [],
        "description": "插入`<u-form-item>`子组件。",
        "emptyBackground": "add-sub-large"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UFormItem",
        "kebabName": "u-form-item",
        "title": "表单项",
        "description": "表单项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "span",
            "title": "占据数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "1",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "列跨越的格数",
            "docDescription": "列跨越的格数。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "行内展示",
                  "value": "inline"
                },
                {
                  "title": "块级展示，标签与表单项分行展示",
                  "value": "block"
                }
              ]
            },
            "name": "labelLayout",
            "title": "标签布局",
            "tsType": "'inline' | 'block'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "inline"
              },
              "playground": []
            },
            "docDescription": "设置标签布局方式，行内展示、块级展示，标签与表单项分行展示"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "labelEllipsis",
            "title": "标签过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "文字过长是否省略显示，默认文字超出时会换行。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "required",
            "title": "必填标记",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "是否必填。仅显示样式，如果要验证必填项，需要在`rules`中添加必填规则。",
            "docDescription": "是否必填。仅显示样式，如果要验证必填项，需要在rules中添加必填规则。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "文本左侧",
                  "value": "left"
                },
                {
                  "title": "文本右侧",
                  "value": "right"
                }
              ]
            },
            "name": "requiredPosition",
            "title": "必填标记位置",
            "tsType": "'left' | 'right'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "right"
              },
              "playground": []
            },
            "if": "_ => _.required === true"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "message",
            "title": "释义提示",
            "tsType": "nasl.core.String",
            "description": "鼠标悬浮标签后的图标显示释义提示信息",
            "docDescription": "默认提示消息。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "description",
            "title": "辅助文本",
            "tsType": "nasl.core.String",
            "description": "辅助说明的文本信息",
            "docDescription": "添加描述内容。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "顶对齐",
                  "value": "block"
                },
                {
                  "title": "居中对齐",
                  "value": "center"
                },
                {
                  "title": "尾对齐",
                  "value": "end"
                }
              ]
            },
            "name": "layout",
            "title": "标签纵轴对齐",
            "tsType": "'block' | 'center' | 'end'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "center"
              },
              "playground": []
            },
            "description": "标签与表单元素的纵轴对齐方式，默认为顶对齐",
            "docDescription": "标签与表单元素的纵轴对齐方式，默认为顶对齐。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "bindHide": true,
            "tabKind": "property",
            "name": "rules",
            "title": "验证规则",
            "tsType": "nasl.core.String",
            "description": "验证规则。简写格式为字符串类型，完整格式或混合格式为数组类型",
            "docDescription": "验证规则。简写格式为字符串类型，完整格式或混合格式为数组类型，详见[验证规则](#验证规则)。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "ignoreValidation",
            "title": "忽略验证",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "docDescription": "设置是否忽略验证。"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "迷你",
                  "value": "mini"
                },
                {
                  "title": "小",
                  "value": "small"
                },
                {
                  "title": "正常",
                  "value": "normal"
                },
                {
                  "title": "大",
                  "value": "large"
                }
              ]
            },
            "name": "fieldSize",
            "title": "字段大小",
            "tsType": "'mini' | 'small' | 'normal' | 'large'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "normal"
              },
              "playground": []
            },
            "description": "单独设置表单项的内容大小",
            "docDescription": "单独设置表单项的内容大小。"
          },
          {
            "concept": "PropDeclaration",
            "group": "样式属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "迷你",
                  "value": "mini"
                },
                {
                  "title": "小",
                  "value": "small"
                },
                {
                  "title": "正常",
                  "value": "normal"
                },
                {
                  "title": "大",
                  "value": "large"
                }
              ]
            },
            "name": "labelSize",
            "title": "表单项标题宽度",
            "tsType": "'mini' | 'small' | 'normal' | 'large'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "normal"
              },
              "playground": []
            },
            "docDescription": "单独设置表单项的标签宽度大小。支持迷你、小、正常、大四个级别。"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "validate",
            "title": "验证后",
            "tsType": "(event: {\n  rawValue: nasl.core.String;\n  value: nasl.core.String;\n  trigger: nasl.core.String;\n  muted: nasl.core.String;\n  valid: nasl.core.Boolean;\n  touched: nasl.core.Boolean;\n  dirty: nasl.core.Boolean;\n  firstError: nasl.core.String;\n  triggerValid: nasl.core.Boolean;\n}) => any",
            "description": "对于第一个 Field 或者所有子 UValidator："
          }
        ],
        "methods": [
          {
            "concept": "LogicDeclaration",
            "description": "验证此表单项。",
            "params": [
              {
                "concept": "Param",
                "name": "trigger",
                "description": "'触发方式，可选值：`submit`、`blur`和`input`之一，或者它们的任意组合。'",
                "defaultValue": {
                  "concept": "DefaultValue",
                  "expression": {
                    "concept": "StringLiteral",
                    "value": "submit"
                  },
                  "playground": []
                }
              },
              {
                "concept": "Param",
                "name": "muted",
                "description": "'是否验证后无提示'",
                "defaultValue": {
                  "concept": "DefaultValue",
                  "expression": {
                    "concept": "BooleanLiteral",
                    "value": "false"
                  },
                  "playground": []
                }
              }
            ],
            "returns": [],
            "name": "validate",
            "title": "undefined"
          }
        ],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "label",
            "title": "标签自定义",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入自定义标签，代替`label`属性。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "description",
            "title": "描述自定义",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入自定义描述内容，代替`description`属性。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "extra",
            "title": "附加内容",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标签右侧额外内容。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UFormGroup",
        "kebabName": "u-form-group",
        "title": "表单分组",
        "description": "展开折叠前",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "title",
            "title": "标题",
            "tsType": "nasl.core.String",
            "docDescription": "显示的标题。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "NumberInputSetter"
            },
            "name": "repeat",
            "title": "列数",
            "tsType": "nasl.core.Decimal",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "NumericLiteral",
                "value": "1",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              "playground": []
            },
            "description": "整个表单的划分列数",
            "docDescription": "整个表单的划分列数。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "行内展示",
                  "value": "inline"
                },
                {
                  "title": "块级展示，标签与表单项分行展示",
                  "value": "block"
                }
              ]
            },
            "name": "labelLayout",
            "title": "标签布局",
            "tsType": "'inline' | 'block'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "inline"
              },
              "playground": []
            },
            "docDescription": "设置标签布局方式。行内展示、块级展示，标签与表单项分行展示。"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "labelEllipsis",
            "title": "标签过长省略",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "文字过长是否省略显示。默认文字超出时会换行。",
            "docDescription": "文字过长是否省略显示。默认文字超出时会换行。"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "collapsible",
            "title": "可折叠",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置是否可以展开/折叠",
            "docDescription": "分组是否可以折叠。"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "expanded",
            "title": "展开状态",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "展开状态分为“True(展开)/False(折叠)”，默认为“展开”",
            "docDescription": "绑定展开/折叠状态的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止展开/折叠操作",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "before-toggle",
            "title": "展开折叠前",
            "tsType": "(event: {\n  expanded: nasl.core.Boolean;\n}) => any",
            "description": "展开/折叠此分组前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "toggle",
            "title": "展开折叠后",
            "tsType": "(event: {\n  expanded: nasl.core.Boolean;\n}) => any",
            "description": "展开/折叠某分组时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "表单项",
                "code": "<u-form-item><template #label><u-text text=\"表单项\"></u-text></template></u-form-item>"
              }
            ],
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<UFormItem>",
            "params": [],
            "description": "插入`<u-form-item>`或`<u-form-divider>`子组件。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题文本。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "extra",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "在右侧可以附加内容。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基础表单",
        "description": "",
        "code": "<template>\n<u-form\n><u-form-item required layout=\"center\">\n<template #label><u-text text=\"名称\"></u-text></template>\n<u-input placeholder=\"由字母、数字和中划线组成\"></u-input>\n</u-form-item\n><u-form-item required layout=\"center\">\n<template #label><u-text text=\"类型\"></u-text></template>\n<u-radios>\n<u-radio label=\"A\"><template #item><u-text text=\"类型 A\"></u-text></template></u-radio>\n<u-radio label=\"B\"><template #item><u-text text=\"类型 B\"></u-text></template></u-radio>\n</u-radios>\n</u-form-item\n><u-form-item layout=\"center\">\n<u-button color=\"primary\">立即创建</u-button>\n</u-form-item\n></u-form>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-form.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-form.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "行内表单",
        "description": "",
        "code": "<template>\n<u-form layout=\"inline\">\n<u-form-item layout=\"center\">\n<template #label><u-text text=\"名称\"></u-text></template>\n<u-input placeholder=\"请输入名称\"></u-input>\n</u-form-item>\n<u-form-item layout=\"center\">\n<u-button color=\"primary\">查 询</u-button>\n</u-form-item\n></u-form>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-form.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-form.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "折叠分组",
        "description": "",
        "code": "<template>\n<u-form layout=\"block\" collapsible\n><u-form-group expanded\n><template #title><u-text text=\"常用条件\"></u-text></template><u-form-item layout=\"center\">\n<template #label><u-text text=\"名称\"></u-text></template>\n<u-input placeholder=\"请输入名称\"></u-input>\n</u-form-item\n><u-form-item layout=\"center\">\n<template #label><u-text text=\"状态\"></u-text></template>\n<u-select>\n<u-select-item><u-text text=\"启用\"></u-text></u-select-item>\n<u-select-item><u-text text=\"禁用\"></u-text></u-select-item>\n</u-select>\n</u-form-item\n></u-form-group\n><u-form-group expanded\n><template #title><u-text text=\"更多条件\"></u-text></template><u-form-item layout=\"center\">\n<template #label><u-text text=\"名称\"></u-text></template>\n<u-input placeholder=\"请输入名称\"></u-input>\n</u-form-item\n><u-form-item layout=\"center\">\n<template #label><u-text text=\"状态\"></u-text></template>\n<u-select>\n<u-select-item><u-text text=\"启用\"></u-text></u-select-item>\n<u-select-item><u-text text=\"禁用\"></u-text></u-select-item>\n</u-select>\n</u-form-item\n></u-form-group\n></u-form>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-form.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-form.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UInput",
    "alias": "单行输入",
    "title": "单行输入",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-input",
    "description": "基本的表单输入组件",
    "icon": "input",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "文本",
              "value": "text"
            },
            {
              "title": "密码",
              "value": "password"
            }
          ]
        },
        "name": "type",
        "title": "类型",
        "tsType": "'text' | 'password'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "文本框或者密码框",
        "docDescription": "文本框或者密码框。文本：文本类型。密码：密码类型。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.String",
        "description": "输入的值",
        "docDescription": "输入框的值。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "description": "为空时显示的占位符文本",
        "docDescription": "内容为空时的提示文本。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "precision": 0
        },
        "name": "maxlength",
        "title": "最大字符数",
        "tsType": "nasl.core.Integer",
        "docDescription": "限定输入文本最大长度。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "是否自动获取输入框焦点。",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "prefix",
        "title": "前缀图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "设置输入框的前缀图标。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "suffix",
        "title": "后缀图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "设置输入框的后缀图标。"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "description": "可点击清除按钮一键清除内容",
        "docDescription": "是否在输入框有内容时会显示清除内容的按钮。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "password",
        "title": "显示状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示状态分为“True(显示)/False(隐藏)”，默认为“隐藏”",
        "docDescription": "切换密码的显示/隐藏。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置单行输入框宽度大小",
        "docDescription": "设置单行输入框宽度大小，可选占满、巨大、大、中型、正常、小、迷你"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置单行输入框高度大小",
        "docDescription": "设置单行输入框高度大小，可选占满、巨大、大、中型、正常、小、迷你。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-input",
        "title": "输入前",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "输入前触发。可以在这个阶段阻止输入，或者修改输入的值 $event.value"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "输入时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "值变化时触发。（注意：与原生事件不同）"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-clear",
        "title": "清空前",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "清空前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "clear",
        "title": "清空后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "清空后触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "click-prefix",
        "title": "点击前缀图标",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击前缀图标后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "click-suffix",
        "title": "点击后缀图标",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击后缀图标后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "keydown",
        "title": "键盘按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  code: nasl.core.String;\n  ctrlKey: nasl.core.Boolean;\n  isComposing: nasl.core.Boolean;\n  key: nasl.core.String;\n  metaKey: nasl.core.Boolean;\n  repeat: nasl.core.Boolean;\n  shiftKey: nasl.core.Boolean;\n}) => any",
        "description": "键盘按键按下时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "keyup",
        "title": "键盘松开",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  code: nasl.core.String;\n  ctrlKey: nasl.core.Boolean;\n  isComposing: nasl.core.Boolean;\n  key: nasl.core.String;\n  metaKey: nasl.core.Boolean;\n  repeat: nasl.core.Boolean;\n  shiftKey: nasl.core.Boolean;\n}) => any",
        "description": "键盘按键松开时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "让输入框获取焦点。",
        "params": [],
        "returns": [],
        "name": "focus",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "让输入框失去焦点。",
        "params": [],
        "returns": [],
        "name": "blur",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "清空输入框。",
        "params": [],
        "returns": [],
        "name": "clear",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "prefix",
        "title": "前缀图标",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "前缀图标自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "suffix",
        "title": "后缀图标",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "后缀图标自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "",
        "description": "",
        "code": "<template>\n<u-input placeholder=\"请输入\"></u-input>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-input.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UNumberInput",
    "alias": "数字输入",
    "title": "数字输入",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-number-input",
    "description": "输入数字时使用",
    "icon": "number",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "输入的值",
        "docDescription": "输入框的值。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "min",
        "title": "最小值",
        "tsType": "nasl.core.Decimal",
        "description": "最小可输入的值",
        "docDescription": "限制输入数值的最小值。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "max",
        "title": "最大值",
        "tsType": "nasl.core.Decimal",
        "description": "最大可输入的值",
        "docDescription": "限制输入数值的最大值。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "decimalLength",
        "title": "精度",
        "tsType": "nasl.core.Decimal",
        "description": "控制数据存储时小数点后保留几位。例如：精度为2，则数据存储时小数点后保留2位。",
        "docDescription": "限制值要保留的小数位数。默认0，不保留小数位"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "decimalPlaces",
        "title": "小数位数",
        "tsType": "{\n  places: nasl.core.Decimal;\n  omit: nasl.core.Boolean;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        },
        "description": "控制数据展示时小数点后保留几位，仅影响展示，不影响数据实际存储的值。例如：小数位数为2，则数据展示时小数点后保留2位。",
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "thousandths",
        "title": "千位符",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "percentSign",
        "title": "百分号",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "unit",
        "title": "单位",
        "tsType": "{\n  type: nasl.core.String;\n  value: nasl.core.String;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        },
        "description": "输入框中显示的单位"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "name": "advancedFormat",
        "title": "高级格式化",
        "tsType": "{\n  enable: nasl.core.Boolean;\n  value: nasl.core.String;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        },
        "description": "用来控制数字的展示格式"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "description": "为空时显示的占位符文本",
        "docDescription": "为空时的提示文本。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "description": "设置是否自动获取焦点",
        "docDescription": "是否自动获取输入框的焦点。",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "hideButtons",
        "title": "隐藏按钮",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否隐藏上下点击按钮",
        "docDescription": "是否隐藏数值加减按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "description": "可点击清除按钮一键清除内容",
        "docDescription": "开启并在输入框有内容时会显示清除按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "step",
        "title": "间隔",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "间隔，表示点击按钮或按上下键所增加或减少的量",
        "docDescription": "限制点击按钮或按上下键所增加或减少的量。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置数字输入框宽度大小",
        "docDescription": "设置数字输入框宽度大小，可选占满、巨大、大、中型、正常、小、迷你。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置数字输入框高度大小",
        "docDescription": "设置数字输入框高度大小，可选占满、巨大、大、中型、正常、小、迷你。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "输入时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "validate",
        "title": "验证时",
        "tsType": "(event: {\n  trigger: nasl.core.String;\n  valid: nasl.core.Boolean;\n  triggerValid: nasl.core.Boolean;\n  touched: nasl.core.Boolean;\n  dirty: nasl.core.Boolean;\n  firstError: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "输入验证时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.Decimal;\n  oldValue: nasl.core.Decimal;\n  formattedValue: nasl.core.String;\n  valid: nasl.core.Boolean;\n}) => any",
        "description": "值变化时触发（与原生事件不同）"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "聚焦后",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失焦后",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "keydown",
        "title": "键盘按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  code: nasl.core.String;\n  ctrlKey: nasl.core.Boolean;\n  isComposing: nasl.core.Boolean;\n  key: nasl.core.String;\n  metaKey: nasl.core.Boolean;\n  repeat: nasl.core.Boolean;\n  shiftKey: nasl.core.Boolean;\n}) => any",
        "description": "键盘按键按下时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "keyup",
        "title": "键盘松开",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  code: nasl.core.String;\n  ctrlKey: nasl.core.Boolean;\n  isComposing: nasl.core.Boolean;\n  key: nasl.core.String;\n  metaKey: nasl.core.Boolean;\n  repeat: nasl.core.Boolean;\n  shiftKey: nasl.core.Boolean;\n}) => any",
        "description": "键盘按键松开时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入 HTML 或 `Component`, 可展示额外内容。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-number-input></u-number-input>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-number-input.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "按钮样式",
        "description": "",
        "code": "<template>\n<u-number-input buttonDisplay=\"bothEnds\"></u-number-input>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-number-input.vue/screenshots/1.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UTextarea",
    "alias": "多行输入",
    "title": "多行输入",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-textarea",
    "description": "多行输入组件",
    "icon": "textarea",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.String",
        "description": "输入的值",
        "docDescription": "当前多行输入组件，输入框内的本文内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "description": "为空时显示的占位符文本",
        "docDescription": "输入框为空时的提示文本"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "placeholder": "不限制"
        },
        "name": "maxlength",
        "title": "最大字符数",
        "tsType": "nasl.core.Decimal",
        "description": "输入框内可输入的最大字符数，超过时不支持输入",
        "docDescription": "输入框内可输入的最大字符数，超过时不支持输入",
        "onChange": [
          {
            "update": {
              "showWordLimit": false
            },
            "if": "_ => _ === null"
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showWordLimit",
        "title": "显示字数统计",
        "tsType": "nasl.core.Boolean",
        "description": "设置是否显示「最大字符数」的字数统计",
        "docDescription": "开启后，会在组件上显示当前输入字数以及最大字符数，当前输入字数超过最大字符数时，不支持输入。",
        "if": "_ => _.maxlength !== null"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "输入框内",
              "value": "inside"
            },
            {
              "title": "输入框外",
              "value": "outside"
            }
          ]
        },
        "name": "limitPosition",
        "title": "字数统计位置",
        "tsType": "'inside' | 'outside'",
        "description": "设置字数统计位置",
        "docDescription": "**显示字数统计**开启后，支持选择字数统计位置：输入框内、输入框外。",
        "if": "_ => _.showWordLimit === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "进入页面时，自动选中该输入框。",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "可点击清除按钮一键清除内容",
        "docDescription": "是否可清空。开启并在输入框有内容时会显示清空按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "不可调整",
              "value": "none"
            },
            {
              "title": "可调整",
              "value": "both"
            },
            {
              "title": "水平可调整",
              "value": "horizontal"
            },
            {
              "title": "竖直可调整",
              "value": "vertical"
            }
          ]
        },
        "name": "resize",
        "title": "可调整大小",
        "tsType": "'none' | 'both' | 'horizontal' | 'vertical'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "vertical"
          },
          "playground": []
        },
        "description": "设置调整大小的方式",
        "docDescription": "设置多行输入框是否可以调整大小。包括：不可调整，可调整，水平可调整，竖直可调整四种设置"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置多行输入框大小",
        "docDescription": "- 设置多行输入框大小。支持正常，中型，大，巨大，占满五种尺寸。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "InputSetter",
          "placeholder": "不设置则根据输入内容自适应"
        },
        "name": "autosize",
        "title": "自适应内容高度",
        "tsType": "nasl.core.Boolean | object",
        "description": "可输入如{maxHeight:100,minHeight:50}，单位默认为px",
        "docDescription": "可输入如{maxHeight:100,minHeight:50}，单位默认为px，不设置则根据输入内容自适应"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-input",
        "title": "输入前",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "输入前触发。可以在这个阶段阻止输入，或者修改输入的值 $event.value"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "输入时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "值变化时触发。（注意：与原生事件不同）"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "聚焦后",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失焦后",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-clear",
        "title": "清空前",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "清空前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "clear",
        "title": "清空后",
        "tsType": "(event: {\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "清空时触发。"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "让输入框获取焦点。",
        "params": [],
        "returns": [],
        "name": "focus",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "让输入框失去焦点。",
        "params": [],
        "returns": [],
        "name": "blur",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "清空输入框。",
        "params": [],
        "returns": [],
        "name": "clear",
        "title": "undefined"
      }
    ],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-textarea placeholder=\"请输入\" limitPosition=\"outside\"></u-textarea>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-textarea.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "URadios",
    "alias": "单选组",
    "title": "单选组",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-radios",
    "description": "多项中选择一个时使用",
    "icon": "radios",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "选项值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的字段",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "V",
        "description": "当前选中的值",
        "docDescription": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "URadiosOptions<T, V>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "URadiosOptions<T, V>['value']"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
        "description": "选择值改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "单选项",
            "code": "<u-radio><template slot=\"item\">节点</template></u-radio>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<URadio<V>>",
        "params": [],
        "description": "插入`<u-radio>`子组件。",
        "emptyBackground": "add-sub"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "undefined",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "URadio",
        "kebabName": "u-radio",
        "title": "单选项",
        "description": "单选项",
        "icon": "",
        "tsTypeParams": "V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "label",
            "title": "选项值",
            "tsType": "V",
            "description": "用于标识选项的值",
            "docDescription": "单选框返还的选项值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "autofocus",
            "title": "自动获取焦点",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置是否自动获取焦点"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "readonly",
            "title": "只读",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "正常显示，但禁止选择/输入",
            "docDescription": "正常显示，但禁止选择或输入。"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "before-select",
            "title": "选择前",
            "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
            "description": "选择此项前触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "item",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义选项的结构和样式"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-radios>\n<template #item=\"current\"></template>\n</u-radios>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-radios.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "USwitch",
    "alias": "开关",
    "title": "开关",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-switch",
    "description": "开关",
    "icon": "switch",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "标识开关状态的值",
        "docDescription": "开关状态，返还true或者false。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "withText",
        "title": "显示开关文字",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否显示开关`ON`和`OFF`文字",
        "docDescription": "设置开关是否显示开关`ON`和`OFF`文字。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-toggle",
        "title": "切换状态前",
        "tsType": "(event: {\n  value: nasl.core.Boolean;\n  oldValue: nasl.core.Boolean;\n}) => any",
        "description": "切换开关状态前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.Boolean) => any",
        "description": "切换开关状态时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "on",
        "title": "打开时",
        "tsType": "(event: any) => any",
        "description": "开关打开时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "off",
        "title": "关闭时",
        "tsType": "(event: any) => any",
        "description": "开关关闭时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "toggle",
        "title": "切换状态后",
        "tsType": "(event: {\n  value: nasl.core.Boolean;\n  oldValue: nasl.core.Boolean;\n}) => any",
        "description": "切换开关状态时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.Boolean;\n  oldValue: nasl.core.Boolean;\n}) => any",
        "description": "开关状态改变时触发"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-switch></u-switch>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-switch.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UCheckboxes",
    "alias": "多选组",
    "title": "多选组",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-checkboxes",
    "description": "多项中选择多个时使用",
    "icon": "checkboxes",
    "tsTypeParams": "T, V, C extends string",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "用于标识选中值的字段",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "C extends '' ? nasl.collection.List<V> : nasl.core.String",
        "description": "当前选中的值",
        "docDescription": "多选组的选中项，返还结构为List<T>。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "checkAll",
        "title": "全选控制",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否进行全选",
        "onChange": [
          {
            "clear": [
              "min",
              "max"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "checkAllText",
        "title": "全选展示内容",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "全选"
          },
          "playground": []
        },
        "description": "全选功能展示的文案内容",
        "if": "_ => _.checkAll === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "同行展示",
              "value": "inline"
            },
            {
              "title": "分行展示",
              "value": "block"
            }
          ]
        },
        "name": "checkAllDisplay",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "description": "选择展开方式",
        "if": "_ => _.checkAll === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "min",
        "title": "最小选中数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "可以勾选多选框的最小数量",
        "docDescription": "多选组可以勾选多选框的最小数量。",
        "if": "_ => _.checkAll === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "max",
        "title": "最大选中数",
        "tsType": "nasl.core.Decimal",
        "description": "可以勾选多选框的最大数量",
        "docDescription": "多选组可以勾选多选框的最大数量。",
        "if": "_ => _.checkAll === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "无",
              "value": ""
            },
            {
              "title": "以', '连接",
              "value": "join"
            },
            {
              "title": "以'|'连接",
              "value": "join:|"
            },
            {
              "title": "以';'连接",
              "value": "join:;"
            },
            {
              "title": "json",
              "value": "json"
            }
          ]
        },
        "name": "converter",
        "title": "转换器",
        "tsType": "'' | 'join' | 'join:|' | 'join:;' | 'json'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "将选中的值以选择的符号作为连接符，转为字符串格式；选择“json”则转为JSON字符串格式",
        "docDescription": "将选中的值以选择的符号作为连接符，转为字符串格式；选择“json”则转为JSON字符串格式"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UCheckboxesOptions<T, V, C>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "UCheckboxesOptions<T, V, C>['value']"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.collection.List<V>) => any",
        "description": "切换选项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "check",
        "title": "选中后",
        "tsType": "(event: {\n  value: nasl.collection.List<V> | nasl.core.String;\n  oldValue: nasl.collection.List<V> | nasl.core.String;\n}) => any",
        "description": "切换选项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.collection.List<V> | nasl.core.String;\n  oldValue: nasl.collection.List<V> | nasl.core.String;\n}) => any",
        "description": "选中状态改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "多选项",
            "code": "<u-checkbox><template slot=\"item\">节点</template></u-checkbox>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UCheckbox<T, V>>",
        "params": [],
        "description": "插入`<checkbox>`子组件。",
        "emptyBackground": "add-sub"
      },
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "全选/反选文本",
            "code": "<u-text text='全选'></u-text>"
          }
        ],
        "name": "checkAll",
        "title": "undefined",
        "tsType": "() => Array<UText>",
        "params": [],
        "description": "全选/反选"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "undefined",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCheckbox",
        "kebabName": "u-checkbox",
        "title": "多选项",
        "description": "多选项",
        "icon": "",
        "tsTypeParams": "T, V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "label",
            "title": "选项值",
            "tsType": "V",
            "description": "用于标识选项的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "autofocus",
            "title": "自动获取焦点",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            }
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "readonly",
            "title": "只读",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "正常显示，但禁止选择/输入",
            "docDescription": "正常显示，但禁止选择或输入"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）。"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "before-check",
            "title": "选中前",
            "tsType": "(event: {\n  value: nasl.core.Boolean;\n  oldValue: nasl.core.Boolean;\n}) => any",
            "description": "切换选中状态前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "input",
            "title": "输入时",
            "tsType": "(event: V) => any",
            "description": "切换选中状态时触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "check",
            "title": "选中后",
            "tsType": "(event: {\n  value: V;\n}) => any",
            "description": "切换选中状态时触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "change",
            "title": "改变后",
            "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
            "description": "选中状态改变时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "item",
            "title": "项",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基础用法",
        "description": "",
        "code": "<template>\n<u-checkboxes>\n<template #item=\"current\"></template>\n</u-checkboxes>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-checkboxes.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UCapsules",
    "alias": "胶囊",
    "title": "胶囊",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-capsules",
    "description": "多项中选择一项",
    "icon": "capsules",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "nasl.core.Any",
        "description": "当前选中的值",
        "docDescription": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autoSelect",
        "title": "自动选择",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否自动选择第一个非禁用的项",
        "docDescription": "是否自动选择第一个非禁用的项"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "cancelable",
        "title": "可取消",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否可以取消选择",
        "docDescription": "是否可以取消选择"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multiple",
        "title": "可多选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否可以多选",
        "docDescription": "是否可以多选"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: nasl.core.String;\n  oldItem: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  items: nasl.collection.List<nasl.core.String>;\n  oldItems: nasl.collection.List<nasl.core.String>;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "选择某一项时触发，仅在单选模式中生效"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: nasl.core.String;\n  oldItem: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  items: nasl.collection.List<nasl.core.String>;\n  oldItems: nasl.collection.List<nasl.core.String>;\n}) => any",
        "description": "选择某一项时触发。单选模式中："
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  item: nasl.core.String;\n  oldItem: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  items: nasl.collection.List<nasl.core.String>;\n  oldItems: nasl.collection.List<nasl.core.String>;\n  values: nasl.collection.List<nasl.core.String>;\n}) => any",
        "description": "选择值改变时触发。单选模式中："
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "胶囊选项",
            "code": "<u-capsule>选项</u-capsule>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UCapsule>",
        "params": [],
        "description": "插入`<u-capsule>`或`<u-capsules-group>`子组件。"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCapsule",
        "kebabName": "u-capsule",
        "title": "子选项",
        "description": "子选项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "nasl.core.Any",
            "description": "此项的值",
            "docDescription": "此项的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "label",
            "title": "标签",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": ""
              },
              "playground": []
            },
            "description": "顶部自定义提示文本",
            "docDescription": "顶部自定义提示文本"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "flag",
            "title": "flag标志",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "是否右上角有flag标志",
            "docDescription": "是否右上角有flag标志"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "click",
            "title": "点击",
            "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
            "description": "点击此项时触发，与原生 click 事件不同的是，它只会在非只读和禁用的情况下触发。"
          },
          {
            "concept": "EventDeclaration",
            "name": "before-select",
            "title": "选择前",
            "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: nasl.core.String;\n  oldItem: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n  items: nasl.collection.List<nasl.core.String>;\n  oldItems: nasl.collection.List<nasl.core.String>;\n}) => any",
            "description": "选择此项前触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UCapsulesGroup",
        "kebabName": "u-capsules-group",
        "title": "子选项组",
        "description": "子选项组",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "子选项",
                "code": "<u-capsule>选项</u-capsule>"
              }
            ],
            "name": "default",
            "title": "undefined",
            "tsType": "() => Array<UCapsule>",
            "params": [],
            "description": "插入`<u-capsule>`或`<u-capsules-group>`子组件。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基础用法",
        "description": "",
        "code": "<template>\n<u-capsules>\n<u-capsule>Option-A</u-capsule>\n<u-capsule>Option-B</u-capsule>\n<u-capsule>Option-C</u-capsule>\n</u-capsules>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-capsules.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-capsules.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "胶囊组",
        "description": "",
        "code": "<template>\n<u-capsules>\n<u-capsules-group>\n<u-capsule>Option-A</u-capsule>\n<u-capsule>Option-B</u-capsule>\n</u-capsules-group>\n<u-capsules-group>\n<u-capsule>Option-A</u-capsule>\n<u-capsule>Option-B</u-capsule>\n</u-capsules-group>\n</u-capsules>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-capsules.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-capsules.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "标签",
        "description": "",
        "code": "<template>\n<u-capsules>\n<u-capsule value=\"1\">1</u-capsule>\n<u-capsule value=\"2\">2</u-capsule>\n<u-capsule value=\"3\">3</u-capsule>\n<u-capsule value=\"4\" label=\"88折\">4</u-capsule>\n<u-capsule value=\"5\" label=\"88折\">5</u-capsule>\n<u-capsule value=\"6\" label=\"88折\">6</u-capsule>\n</u-capsules>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-capsules.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-capsules.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "URate",
    "alias": "评分",
    "title": "评分",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-rate",
    "description": "评分组件。",
    "icon": "rate",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "max": 20
        },
        "name": "value",
        "title": "评分值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "max": 20
        },
        "name": "max",
        "title": "最大分数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "评分组件的最大分数"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showText",
        "title": "展示辅助文本",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "在评分后展示辅助文字",
        "docDescription": "在评分后展示辅助文字"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "texts",
        "title": "辅助文本",
        "tsType": "Array<nasl.core.String>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [
              {
                "concept": "StringLiteral",
                "value": "极差"
              },
              {
                "concept": "StringLiteral",
                "value": "失望"
              },
              {
                "concept": "StringLiteral",
                "value": "一般"
              },
              {
                "concept": "StringLiteral",
                "value": "满意"
              },
              {
                "concept": "StringLiteral",
                "value": "惊喜"
              }
            ],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "辅助说明的文本信息，在展示辅助文本开关打开的情况下才会生效",
        "docDescription": "辅助文字设置。在展示辅助文字开关打开的情况下才会生效"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showTooltip",
        "title": "展示提示信息",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "鼠标悬浮时展示Tooltip提示信息",
        "docDescription": "鼠标悬浮时展示提示文字"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "tooltips",
        "title": "提示信息",
        "tsType": "Array<nasl.core.String>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [
              {
                "concept": "StringLiteral",
                "value": "极差"
              },
              {
                "concept": "StringLiteral",
                "value": "失望"
              },
              {
                "concept": "StringLiteral",
                "value": "一般"
              },
              {
                "concept": "StringLiteral",
                "value": "满意"
              },
              {
                "concept": "StringLiteral",
                "value": "惊喜"
              }
            ],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "Tooltip提示信息设置。在展示提示信息开关打开的情况下才会生效",
        "docDescription": "Tooltip文字设置。在展示Tooltip开关打开的情况下才会生效"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "allowHalf",
        "title": "可半选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否允许半选",
        "docDescription": "是否允许半选"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "可选中后再次点击以清除选中",
        "docDescription": "是否允许选中后点击清除"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.Decimal;\n  oldValue: nasl.core.Decimal;\n}) => any",
        "description": "修改时触发"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-rate></u-rate>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-rate.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UComboSlider",
    "alias": "滑块",
    "title": "滑块",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-combo-slider",
    "description": "滑动选择",
    "icon": "slider",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "滑块值",
        "tsType": "nasl.core.Decimal | Array<nasl.core.Decimal>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "滑块的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "min",
        "title": "最小值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "可设置的最大值 。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "max",
        "title": "最大值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "100",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "可设置的最小值 。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "step",
        "title": "间隔",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "间隔，`0`表示连续",
        "docDescription": "表示点击按钮或按上下键所增加或减少的量，0表示连续"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "precision",
        "title": "精度",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "精度，表示数字要保留的最小单位，整数、小数均可",
        "docDescription": "限制数字要保留的最小单位，整数、小数均可，如需要保留两位小数，则填入`0.01`"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "range",
        "title": "范围",
        "tsType": "Array<nasl.core.Decimal>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "进一步对`value`限制，通常传入一个数组，第一个值表示范围开始值，第二个值表示范围的结束值",
        "docDescription": "进一步对`值`限制，通常传入一个数组，第一个值表示范围开始值，第二个值表示范围的结束值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multiple",
        "title": "双滑块",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否展示双滑块"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "unit",
        "title": "单位",
        "tsType": "nasl.core.String",
        "docDescription": "数值右侧展示的文字"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "输入时同步",
              "value": "input"
            },
            {
              "title": "失焦时同步",
              "value": "blur"
            }
          ]
        },
        "name": "syncOn",
        "title": "同步时机",
        "tsType": "'input' | 'blur'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "input"
          },
          "playground": []
        },
        "docDescription": "当使用输入框时数值同步的时机"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "hideButtons",
        "title": "隐藏按钮",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "是否隐藏上下调节按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showTooltip",
        "title": "展示提示信息",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "鼠标悬浮时展示Tooltip提示信息",
        "docDescription": "鼠标悬浮时展示提示文字"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "tooltip",
        "title": "提示信息",
        "tsType": "nasl.core.String",
        "description": "Tooltip提示信息设置。在展示提示信息开关打开的情况下才会生效",
        "docDescription": "tooltip文字设置，在展示Tooltip开关打开的情况下才会生效"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "值改变时",
        "tsType": "(event: nasl.core.Decimal) => any",
        "description": "滑块的值改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "slide",
        "title": "拖动滑块时",
        "tsType": "(event: {\n  value: nasl.core.Decimal;\n  oldValue: nasl.core.Decimal;\n  percent: nasl.core.Decimal;\n  index: nasl.core.Decimal;\n}) => any",
        "description": "拖动滑块时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "值改变后",
        "tsType": "(event: {\n  value: nasl.core.Decimal;\n  oldValue: nasl.core.Decimal;\n}) => any",
        "description": "滑块的值改变后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "number-input",
        "title": "改变数字输入框的值后",
        "tsType": "(event: nasl.core.Decimal) => any",
        "description": "改变数字输入框的值后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "slide-end",
        "title": "拖动滑块结束后",
        "tsType": "(event: nasl.core.Decimal) => any",
        "description": "拖动滑块结束后触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "tip",
        "title": "提示",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-combo-slider></u-combo-slider>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-combo-slider.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UUploader",
    "alias": "文件上传",
    "title": "文件上传",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-uploader",
    "description": "通过点击或者拖拽上传文件。",
    "icon": "uploader",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.collection.List<nasl.core.String>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": []
          },
          "playground": []
        },
        "description": "当前文件列表",
        "docDescription": "当前的文件列表"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "url",
        "title": "上传地址",
        "tsType": "nasl.core.String",
        "description": "上传的 URL 地址",
        "docDescription": "文件上传的URL地址，如/upload"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "name",
        "title": "上传的文件字段",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "file"
          },
          "playground": []
        },
        "description": "上传的文件字段名，后端需要这个字段获取",
        "docDescription": "默认file，支持自定义，后端通过该字段获取文件"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "InputSetter",
          "placeholder": "所有类型"
        },
        "name": "accept",
        "title": "支持上传的文件类型",
        "tsType": "nasl.core.String",
        "description": "若要限制上传文件类型，请输入类型名称，格式为“.后缀名”，多个文件类型时使用英文逗号隔开。例如“.jpeg,.png,.gif”",
        "tooltipLink": "http://help.lcap.163yun.com/1.%E5%BC%80%E5%8F%91%E5%BA%94%E7%94%A8/2.%E9%A1%B5%E9%9D%A2/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/06.%E8%A1%A8%E5%8D%95/150.%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html#%E7%BB%84%E4%BB%B6%E8%AF%B4%E6%98%8E",
        "docDescription": "支持对上传的文件类型进行限制，格式为“.后缀名”，如“.jpeg”表示仅支持上传jpeg格式的文件。多个文件类型时需使用英文逗号隔开，如“.jpeg,.png,.gif”表示仅支持上传jpeg、png、gif格式的文件。若为空值，则支持上传所有类型的文件"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "withCredentials",
        "title": "cookie值",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "通过设置 withCredentials 为 true 获得的第三方 cookies，将会依旧享受同源策略",
        "docDescription": "通过设置 withCredentials 为 true 获得的第三方 cookies，将会依旧享受同源策略"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "data",
        "title": "附加数据",
        "tsType": "object",
        "docDescription": "补充描述"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "limit",
        "title": "列表数量上限",
        "tsType": "nasl.core.Decimal",
        "docDescription": "列表数量上限，默认为999"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "maxSize",
        "title": "最大文件大小",
        "tsType": "nasl.core.String",
        "description": "可上传的最大文件大小。默认为50MB；如果为数字，则表示单位为字节；如果为字符串，可以添加以下单位：`KB`、`MB`、`GB`",
        "docDescription": "可上传的最大文件大小。默认50MB；如果为数字，则表示单位为字节；如果为字符串，可以添加以下单位kB、MB、GB"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "文本",
              "value": "text"
            },
            {
              "title": "图片",
              "value": "image"
            },
            {
              "title": "卡片",
              "value": "card"
            }
          ]
        },
        "name": "listType",
        "title": "列表类型",
        "tsType": "'text' | 'image' | 'card'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "docDescription": "列表的展示类型，支持使用文本、图片和卡片"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "urlField",
        "title": "URL 字段",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "url"
          },
          "playground": []
        },
        "description": "请求返回的 URL 字段名",
        "docDescription": "请求返回的URL字段名"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "fileIconSwitcher",
        "title": "文件图标",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否展示文件图标",
        "docDescription": "是否展示文件图标",
        "if": "_ => _.listType === 'text'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "文档",
              "value": "doc|docx"
            },
            {
              "title": "图片",
              "value": "jpg|jpeg|png|bmp|gif|tiff|tif|webp|svg|psd|raw"
            },
            {
              "title": "PDF",
              "value": "pdf"
            },
            {
              "title": "表格",
              "value": "xlsx"
            },
            {
              "title": "文本",
              "value": "txt"
            },
            {
              "title": "幻灯片",
              "value": "ppt|pptx"
            },
            {
              "title": "压缩包",
              "value": "zip"
            },
            {
              "title": "CSV",
              "value": "csv"
            }
          ]
        },
        "name": "fileType",
        "title": "文件类型",
        "tsType": "'doc|docx' | 'jpg|jpeg|png|bmp|gif|tiff|tif|webp|svg|psd|raw' | 'pdf' | 'xlsx' | 'txt' | 'ppt|pptx' | 'zip' | 'csv'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "doc|docx"
          },
          "playground": []
        },
        "docDescription": "列表的展示类型，支持使用文本、图片和卡片",
        "if": "_ => _.fileIconSwitcher === true && _.listType === 'text'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter",
          "title": "选择文件图标"
        },
        "name": "fileIcon",
        "title": "文件图标",
        "tsType": "nasl.core.String",
        "docDescription": "支持从图标库选择图标或上传自定义图标。",
        "if": "_ => _.fileIconSwitcher === true && _.listType === 'text'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "downloadIconSwitcher",
        "title": "下载图标",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否展示下载图标",
        "docDescription": "是否展示下载图标",
        "if": "_ => _.listType === 'text'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "downloadIcon",
        "title": "下载图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "download"
          },
          "playground": []
        },
        "if": "_ => _.downloadIconSwitcher === true && _.listType === 'text'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "fileSize",
        "title": "文件大小",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否展示文件大小，单位小于1MB则展示KB，大于1MB则展示MB。",
        "docDescription": "是否展示文件大小",
        "if": "_ => _.listType === 'text'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "headers",
        "title": "请求 headers",
        "tsType": "Object",
        "docDescription": "请求头"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multiple",
        "title": "多文件上传",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "开启后可上传多个文件，默认关闭，多文件可设置数量上限"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multipleOnce",
        "title": "一次性上传多文件",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "利用原生 multipart/form-data 传输多个文件的能力，一次性上传多个文件",
        "docDescription": "开启后支持一次性上传多个文件"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "openCropper",
        "title": "启用图片裁剪",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否启用图片裁剪功能，只对单文件上传有效",
        "docDescription": "开启后支持对选择的图片进行裁剪后上传",
        "if": "_ => !_.multiple"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "fixedCropper",
        "title": "固定图片裁剪框大小",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "if": "_ => _.openCropper === true && _.multiple !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "cropperBoxWidth",
        "title": "图片裁剪框宽度",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "200",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "if": "_ => _.openCropper === true && _.multiple !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "cropperBoxHeight",
        "title": "图片裁剪框高度",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "if": "_ => _.cropperPreviewShape === 'rect' && _.openCropper === true && _.multiple !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "矩形",
              "value": "rect"
            },
            {
              "title": "正方形",
              "value": "square"
            },
            {
              "title": "圆形",
              "value": "circle"
            }
          ]
        },
        "name": "cropperPreviewShape",
        "title": "图片裁剪框预览形状",
        "tsType": "'rect' | 'square' | 'circle'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "circle"
          },
          "playground": []
        },
        "onChange": [
          {
            "update": {
              "cropperBoxHeight": 200
            },
            "if": "_ => _ === 'rect'"
          },
          {
            "update": {
              "cropperBoxHeight": 0
            },
            "if": "_ => _ === 'circle'"
          },
          {
            "update": {
              "cropperBoxHeight": 0
            },
            "if": "_ => _ === 'square'"
          }
        ],
        "if": "_ => _.openCropper === true && _.multiple !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "cropperTitle",
        "title": "图片裁剪框标题",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "图片裁剪"
          },
          "playground": []
        },
        "if": "_ => _.openCropper === true && _.multiple !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFileList",
        "title": "显示文件列表",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "开启后上传多个文件时，会显示文件列表，默认开启",
        "if": "_ => _.listType !== 'card'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "JSON",
              "value": "json"
            },
            {
              "title": "URL字符串",
              "value": "simple"
            }
          ]
        },
        "name": "converter",
        "title": "转换器",
        "tsType": "'json' | 'simple'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "json"
          },
          "playground": []
        },
        "docDescription": "支持使用JSON或URL字符串"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内展示",
              "value": "inline"
            },
            {
              "title": "块级展示，宽度会充满父元素",
              "value": "block"
            }
          ]
        },
        "name": "display",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "block"
          },
          "playground": []
        },
        "description": "行内展示，或块级换行展示",
        "docDescription": "支持行内展示或块级换行展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "description",
        "title": "辅助文本",
        "tsType": "nasl.core.String",
        "description": "辅助说明的文本信息，如上传的数量、大小等，在上传组件下方展示。",
        "docDescription": "在上传组件下方展示一些提示信息，如上传的数量、大小等，默认为null"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showErrorMessage",
        "title": "报错信息",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置是否展示上传时的出错信息，如超出数量、大小",
        "docDescription": "是否展示上传时的出错信息，如超出数量、大小"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "dragDescription",
        "title": "辅助文本",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "点击/拖动/粘贴文件到这里"
          },
          "playground": []
        },
        "description": "辅助说明的文本信息",
        "docDescription": "拖拽位置的文字指引"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "checkFile",
        "title": "文件校验",
        "tsType": "Function",
        "description": "文件校验函数，可自定义校验规则，如文件名称包含特殊字符等，返回string类型的出错信息",
        "docDescription": "文件校验函数，可自定义校验规则，如文件名称包含特殊字符等，返回string类型的出错信息"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "任何人可访问",
              "value": "public"
            },
            {
              "title": "用户登录后可访问",
              "value": "private"
            }
          ]
        },
        "name": "access",
        "title": "文件访问策略",
        "tsType": "'public' | 'private'",
        "docDescription": "支持任何人可访问和用户登录后可访问两种方式"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "ttl",
        "title": "文件有效期",
        "tsType": "nasl.core.Boolean",
        "description": "是否开启文件有效期控制",
        "docDescription": "支持配置文件自动清理，开启后可自定义上传后有效天数"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "ttlValue",
        "title": "上传后有效天数",
        "tsType": "nasl.core.Decimal",
        "description": "文件上传后的有效期天数",
        "docDescription": "开启文件有效期开关后显示，可配置文件自动清理的时间",
        "if": "_ => _.ttl === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "viaOriginURL",
        "title": "源地址访问",
        "tsType": "nasl.core.Boolean",
        "description": "开启后支持通过文件存储源地址访问文件",
        "docDescription": "开启后支持通过文件存储源地址访问文件"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "lcapIsCompress",
        "title": "启用压缩",
        "tsType": "nasl.core.Boolean",
        "description": "启用压缩后上传的文件按压缩规则进行压缩后上传，压缩规则可在自定义配置参数管理",
        "docDescription": "启用压缩后上传的文件按压缩规则进行压缩后上传，压缩规则可在自定义配置参数管理"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "draggable",
        "title": "可拖拽",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "开启后支持拖拽上传文件，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-upload",
        "title": "上传前",
        "tsType": "(event: {\n  file: nasl.core.String;\n}) => any",
        "description": "上传前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "progress",
        "title": "进度改变时",
        "tsType": "(event: {\n  item: File;\n  file: nasl.core.String;\n}) => any",
        "description": "发送进度改变时触发，在上传进度条时使用"
      },
      {
        "concept": "EventDeclaration",
        "name": "count-exceed",
        "title": "文件数量超额",
        "tsType": "(event: {\n  files: nasl.collection.List<File>;\n  value: {\n    url: nasl.core.String;\n    name: nasl.core.String;\n  };\n  count: nasl.core.Integer;\n  limit: nasl.core.Integer;\n  message: nasl.core.String;\n}) => any",
        "description": "文件数量超额时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "size-exceed",
        "title": "文件大小超额",
        "tsType": "(event: {\n  maxSize: nasl.core.Decimal;\n  size: nasl.core.Decimal;\n  message: nasl.core.String;\n  name: nasl.core.String;\n  file: File;\n}) => any",
        "description": "文件大小超额时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "success",
        "title": "上传成功时",
        "tsType": "(event: {\n  item: File;\n  file: nasl.core.String;\n}) => any",
        "description": "上传成功时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "error",
        "title": "上传错误时",
        "tsType": "(event: {\n  item: File;\n  file: nasl.core.String;\n}) => any",
        "description": "上传报错时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "remove",
        "title": "删除时",
        "tsType": "(event: {\n  value: {\n    url: nasl.core.String;\n    name: nasl.core.String;\n  };\n  item: File;\n  index: nasl.core.Integer;\n}) => any",
        "description": "点击删除按钮时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "选择文件上传",
        "params": [],
        "returns": [],
        "name": "select",
        "title": "选择"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本 或 HTML。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "fileList",
        "title": "文件列表",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "文件列表。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "dragDescription",
        "title": "拖拽文字",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "拖拽文字自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "单个文件按钮",
        "description": "",
        "code": "<template>\n<u-uploader display=\"inline\"\nurl=\"/upload\" urlField=\"filePath\"\n:limit=\"999\"\n:file-icon-switcher=\"true\"\n:download-icon-switcher=\"true\"\n:file-size=\"true\"\nmaxSize=\"50MB\"\nconverter=\"json\">\n<u-button color=\"primary\" icon=\"upload\">上传</u-button>\n<template #file-list>\n<i-ico style=\"margin: 0px 8px 0px 0px;\" flag=\"file-icon\" name=\"file-default\" icotype=\"only\"></i-ico>\n<u-text style=\"margin: 0px 8px 0px 0px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: inherit;\" flag=\"file-name\" text=\"文件名称\"></u-text>\n<u-text style=\"margin: 0px 8px 0px 0px;\" flag=\"file-size\" text=\"文件大小\"></u-text>\n<i-ico style=\"margin: 0px 8px 0px 0px;\" flag=\"download-icon\" name=\"download\" icotype=\"only\"></i-ico>\n</template>\n</u-uploader>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-uploader.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-uploader.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "单文件卡片",
        "description": "",
        "code": "<template>\n<u-uploader list-type=\"card\"\naccept=\".png,.jpg,.jpeg,.gif,.bmp\"\nurl=\"/upload\" urlField=\"filePath\"\n:limit=\"999\"\nmaxSize=\"50MB\"\nconverter=\"json\">\n<template #file-list>\n<i-ico style=\"margin: 0px 8px 0px 0px;\" flag=\"file-icon\" name=\"file-default\" icotype=\"only\"></i-ico>\n<u-text style=\"margin: 0px 8px 0px 0px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: inherit;\" flag=\"file-name\" text=\"文件名称\"></u-text>\n<u-text style=\"margin: 0px 8px 0px 0px;\" flag=\"file-size\" text=\"文件大小\"></u-text>\n<i-ico style=\"margin: 0px 8px 0px 0px;\" flag=\"download-icon\" name=\"download\" icotype=\"only\"></i-ico>\n</template>\n</u-uploader>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-uploader.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-uploader.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "多图片按钮",
        "description": "",
        "code": "<template>\n<u-uploader multiple list-type=\"image\"\naccept=\".png,.jpg,.jpeg,.gif,.bmp\"\nurl=\"/upload\" urlField=\"filePath\"\n:limit=\"999\"\nmaxSize=\"50MB\"\nconverter=\"json\">\n<u-button color=\"primary\" icon=\"upload\">上传</u-button>\n<template #file-list>\n<i-ico style=\"margin: 0px 8px 0px 0px;\" flag=\"file-icon\" name=\"file-default\" icotype=\"only\"></i-ico>\n<u-text style=\"margin: 0px 8px 0px 0px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: inherit;\" flag=\"file-name\" text=\"文件名称\"></u-text>\n<u-text style=\"margin: 0px 8px 0px 0px;\" flag=\"file-size\" text=\"文件大小\"></u-text>\n<i-ico style=\"margin: 0px 8px 0px 0px;\" flag=\"download-icon\" name=\"download\" icotype=\"only\"></i-ico>\n</template>\n</u-uploader>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-uploader.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-uploader.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Form",
    "name": "UValidator",
    "alias": "验证器",
    "title": "验证器",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-validator",
    "description": "实现了基础的嵌套验证功能和原子化验证功能，包含提示样式。常用于嵌套验证时使用，或用于派生一些较复杂的组件。",
    "icon": "validator",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "validatingValue",
        "title": "验证值",
        "tsType": "nasl.core.Any",
        "description": "临时修改验证值",
        "docDescription": "临时修改验证值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "validatingProcess",
        "title": "值预处理",
        "tsType": "Function",
        "description": "验证前对值进行预处理",
        "docDescription": "验证前对值进行预处理"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "label",
        "title": "标签",
        "tsType": "nasl.core.String",
        "description": "在 UValidator 用于提示消息的合成，在 UFormItem 等其他组件用于显示标签",
        "docDescription": "用于提示消息的合成"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "name": "rules",
        "title": "规则",
        "tsType": "nasl.core.String | Array<nasl.core.Any>",
        "description": "简写格式为字符串类型，完整格式或混合格式为数组类型",
        "docDescription": "验证规则。简写格式为字符串类型，完整格式或混合格式为数组类型，详见[验证规则](#验证规则)"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "message",
        "title": "提示信息",
        "tsType": "nasl.core.String",
        "description": "鼠标悬浮时显示的提示信息",
        "docDescription": "默认提示消息"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "muted",
        "title": "静默",
        "tsType": "nasl.core.String",
        "description": "验证时是否静默。可选值：'message'表示只静默消息提示，'all'同时静默消息提示和红框提示",
        "docDescription": "验证时是否静默。可选值：'message'表示只静默消息提示，'all'同时静默消息提示和红框提示"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "ignoreValidation",
        "title": "忽略验证",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "忽略验证"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "validatingOptions",
        "title": "验证辅助对象",
        "tsType": "object",
        "description": "在 Rule 的 `validate` 方法中使用",
        "docDescription": "验证辅助对象"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "manual",
        "title": "手动验证",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否采取手动验证。如果为'true'，则 UValidator 将不会在监听到子组件的'input'、'change'和'blur'事件后进行相应的验证。",
        "docDescription": "是否采取手动验证。如果为'true'，则验证器。\n  将不会在监听到子组件的'input'、'change'和'blur'事件后进行相应的验证"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "报错位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "reference"
          },
          "playground": []
        },
        "description": "设置报错信息依据哪个元素定位位置。可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。当父级有overflow:hidden而又想展示出错信息，可以设置为body",
        "docDescription": "设置添加到哪个元素。可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。当父级有overflow:hidden而又想展示出错信息，可以设置为body"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "提示信息在右侧显示",
              "value": "right"
            },
            {
              "title": "提示信息在底部显示",
              "value": "bottom"
            }
          ]
        },
        "name": "placement",
        "title": "报错位置方向",
        "tsType": "'right' | 'bottom'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "right"
          },
          "playground": []
        },
        "description": "设置报错信息展示的位置方向",
        "docDescription": "提示信息显示位置",
        "if": "_ => _.appendTo !== 'body'"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "validate",
        "title": "验证后",
        "tsType": "(event: {\n  trigger: nasl.core.String;\n  valid: nasl.core.Boolean;\n  triggerValid: nasl.core.Boolean;\n  touched: nasl.core.Boolean;\n  dirty: nasl.core.Boolean;\n  firstError: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "对于第一个 Field 或者所有子 UValidator："
      },
      {
        "concept": "EventDeclaration",
        "name": "blur-valid",
        "title": "失焦验证通过后",
        "tsType": "(event: {\n  trigger: nasl.core.String;\n  valid: nasl.core.Boolean;\n  triggerValid: nasl.core.Boolean;\n  touched: nasl.core.Boolean;\n  dirty: nasl.core.Boolean;\n  firstError: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "对于第一个 Field 或者所有子 UValidator："
      },
      {
        "concept": "EventDeclaration",
        "name": "blur-invalid",
        "title": "失焦验证不通过后",
        "tsType": "(event: {\n  trigger: nasl.core.String;\n  valid: nasl.core.Boolean;\n  triggerValid: nasl.core.Boolean;\n  touched: nasl.core.Boolean;\n  dirty: nasl.core.Boolean;\n  firstError: nasl.core.String;\n  value: nasl.core.String;\n  oldValue: nasl.core.String;\n}) => any",
        "description": "对于第一个 Field 或者所有子 UValidator："
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "手动验证。",
        "params": [
          {
            "concept": "Param",
            "name": "trigger",
            "description": "'触发方式，可选值：`submit`、`blur`和`input`之一，或者它们的任意组合。'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "submit"
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "muted",
            "description": "'是否验证后无提示'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            }
          }
        ],
        "returns": [],
        "name": "validate",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入继承了 MField 的组件，或子 UValidator，或其他 HTML 和文本。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "",
        "description": "",
        "code": "<template>\n<u-validator label=\"用户名\"></u-validator>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-validator.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UTabs",
    "alias": "选项卡",
    "title": "选项卡",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-tabs",
    "description": "选项卡切换组件，常用于平级区域大块内容的收纳和展现。",
    "icon": "tabs",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "集合类型变量或者输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "集合类型每一元素的数据类型"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "titleField",
        "title": "标签项标题",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "title"
          },
          "playground": []
        },
        "description": "数据源集合的元素，用于显示标签标题的属性",
        "docDescription": "数据源集合的元素，用于显示标签标题的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "标签项标题值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "数据源集合的元素，用于标识标签值的属性",
        "docDescription": "数据源集合的元素，用于标识标签值的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "urlField",
        "title": "标签项内容值字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "url"
          },
          "playground": []
        },
        "description": "数据源集合的元素，用于标识当前打开的标签项",
        "docDescription": "数据源集合的元素，用于标识当前打开的标签项"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "V",
        "description": "指当前打开标签的标签项",
        "docDescription": "指当前打开标签的标签项"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "router",
        "title": "使用路由",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "开启后，选项卡可设置跳转页面",
        "docDescription": "开启后，选项卡可设置跳转页面"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "closableField",
        "title": "标签项可关闭",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "closable"
          },
          "playground": []
        },
        "description": "设置标签项是否可关闭",
        "docDescription": "数据源集合的元素，用于标识标签是否可关闭的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "loadOnActive",
        "title": "仅在显示时加载内容",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "仅在显示时加载内容（优化渲染性能）",
        "docDescription": "仅在显示时加载内容（优化渲染性能）"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "closable",
        "title": "可关闭",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置标签是否可关闭",
        "docDescription": "是否可以关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "方形卡片",
              "value": "square"
            },
            {
              "title": "圆角卡片",
              "value": "round"
            },
            {
              "title": "线条",
              "value": "line"
            },
            {
              "title": "文本",
              "value": "text"
            },
            {
              "title": "胶囊",
              "value": "capsule"
            },
            {
              "title": "竖线分隔",
              "value": "split"
            }
          ]
        },
        "name": "appear",
        "title": "展示外观",
        "tsType": "'square' | 'round' | 'line' | 'text' | 'capsule' | 'split'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "square"
          },
          "playground": []
        },
        "docDescription": "标签展示的外观"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "size",
        "title": "标签尺寸",
        "tsType": "'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "docDescription": "标签展示的尺寸"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击后",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击某一项后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一页前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-close",
        "title": "关闭前",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
        "description": "关闭某一页前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "关闭后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n}) => any",
        "description": "关闭某一页后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "重新加载数据",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "子选项",
            "code": "<u-tab><template #title><u-text text=\"标签页\"></u-text></template>内容</u-tab>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<UTab<V>>",
        "params": [],
        "description": "插入`<u-tab>`子组件。",
        "emptyBackground": "add-sub"
      },
      {
        "concept": "SlotDeclaration",
        "name": "extra",
        "title": "右侧附加",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "在标签右侧可以附加的组件。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "头部标题",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ]
      },
      {
        "concept": "SlotDeclaration",
        "name": "content",
        "title": "内容区",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ]
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTab",
        "kebabName": "u-tab",
        "title": "标签页",
        "description": "标签页",
        "icon": "",
        "tsTypeParams": "V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "V",
            "docDescription": "标签页的值。"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "bindHide": true,
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "页面跳转",
                  "value": "destination"
                }
              ]
            },
            "name": "linkType",
            "title": "链接类型",
            "tsType": "'destination'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "destination"
              },
              "playground": []
            }
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "name": "hrefAndTo",
            "title": "链接地址",
            "tsType": "nasl.core.String"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "closable",
            "title": "可关闭",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "设置标签是否可关闭",
            "docDescription": "控制标签页是否可关闭，开启效果如下"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "showTabItem",
            "title": "显示状态",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "true"
              },
              "playground": []
            },
            "description": "显示状态分为“True(显示)/False(隐藏)”，默认为“显示”",
            "docDescription": "控制标签页是否默认显示"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "该 tab 下的内容"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-tabs value=\"B\">\n<u-tab value=\"A\"><template #title><u-text text=\"选项卡A\"></u-text></template>选项卡 A 的内容</u-tab>\n<u-tab value=\"B\"><template #title><u-text text=\"选项卡B\"></u-text></template>选项卡 B 的内容</u-tab>\n<u-tab value=\"C\"><template #title><u-text text=\"选项卡C\"></u-text></template>选项卡 C 的内容</u-tab>\n</u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/0.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "动态数据源",
        "description": "",
        "code": "<template>\n<u-tabs router :dataSource=\"[{}]\"></u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/1.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "外观-方形卡片（默认）",
        "description": "",
        "code": "<template>\n<u-tabs appear=\"square\">\n<u-tab><template #title><u-text text=\"选项卡A\"></u-text></template>选项卡 A 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡B\"></u-text></template>选项卡 B 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡C\"></u-text></template>选项卡 C 的内容</u-tab>\n</u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/2.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "外观-圆形卡片（默认）",
        "description": "",
        "code": "<template>\n<u-tabs appear=\"round\" size=\"small\">\n<u-tab><template #title><u-text text=\"选项卡A\"></u-text></template>选项卡 A 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡B\"></u-text></template>选项卡 B 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡C\"></u-text></template>选项卡 C 的内容</u-tab>\n</u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/3.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "外观-线条导航",
        "description": "",
        "code": "<template>\n<u-tabs appear=\"line\">\n<u-tab><template #title><u-text text=\"选项卡A\"></u-text></template>选项卡 A 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡B\"></u-text></template>选项卡 B 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡C\"></u-text></template>选项卡 C 的内容</u-tab>\n</u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/4.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "外观-胶囊导航",
        "description": "",
        "code": "<template>\n<u-tabs appear=\"capsule\">\n<u-tab><template #title><u-text text=\"选项卡A\"></u-text></template>选项卡 A 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡B\"></u-text></template>选项卡 B 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡C\"></u-text></template>选项卡 C 的内容</u-tab>\n</u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/5.png",
        "drawing": ""
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "外观-文本形态",
        "description": "",
        "code": "<template>\n<u-tabs appear=\"text\" size=\"mini\">\n<u-tab><template #title><u-text text=\"选项卡A\"></u-text></template>选项卡 A 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡B\"></u-text></template>选项卡 B 的内容</u-tab>\n<u-tab><template #title><u-text text=\"选项卡C\"></u-text></template>选项卡 C 的内容</u-tab>\n</u-tabs>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tabs.vue/screenshots/6.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "USelectableSteps",
    "alias": "步骤条",
    "title": "步骤条",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-selectable-steps",
    "description": "当操作需要分步骤时使用",
    "icon": "steps",
    "tsTypeParams": "T",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T>",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "集合类型每一元素的数据类型"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "value",
        "title": "当前步骤",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "设置当前处于选中状态的步骤",
        "docDescription": "当前步骤数"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "横向",
              "value": "horizontal"
            },
            {
              "title": "竖向",
              "value": "vertical"
            }
          ]
        },
        "name": "direction",
        "title": "步骤条方向",
        "tsType": "'horizontal' | 'vertical'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "horizontal"
          },
          "playground": []
        },
        "docDescription": "步骤条的方向，支持水平或垂直"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "是否只读，非只读的情况下可以选择"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "自适应",
              "value": "auto"
            },
            {
              "title": "正常",
              "value": "normal"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'auto' | 'normal'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "docDescription": "设置尺寸"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  value: nasl.core.Integer;\n  oldValue: nasl.core.Integer;\n  item: T;\n}) => any",
        "description": "选择某一步骤前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: nasl.core.Integer;\n  oldValue: nasl.core.Integer;\n  item: T;\n}) => any",
        "description": "选择某一步骤时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: nasl.core.Integer;\n  oldValue: nasl.core.Integer;\n  item: T;\n  oldItem: T;\n}) => any",
        "description": "步骤数改变后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "重新加载数据",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "步骤条子组件",
            "code": "<u-selectable-step><template #title><u-text text=\"步骤 N\"></u-text></template></u-selectable-step>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<USelectableStep>",
        "params": [],
        "description": "插入`<u-selectable-step>`子组件。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "头部标题",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ]
      },
      {
        "concept": "SlotDeclaration",
        "name": "desc",
        "title": "描述",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ]
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USelectableStep",
        "kebabName": "u-selectable-step",
        "title": "步骤条项",
        "description": "步骤条项",
        "icon": "",
        "tsTypeParams": "",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "setter": {
              "concept": "EnumSelectSetter",
              "options": [
                {
                  "title": "等待",
                  "value": "pending"
                },
                {
                  "title": "进行中",
                  "value": "selected"
                },
                {
                  "title": "完成",
                  "value": "passed"
                },
                {
                  "title": "错误",
                  "value": "failed"
                }
              ]
            },
            "name": "status",
            "title": "状态值",
            "tsType": "'pending' | 'selected' | 'passed' | 'failed'",
            "description": "若不配置该属性时，会使用步骤条的当前步骤来自动指定状态；如果该属性与当前步骤指定的状态不匹配会覆盖自动匹配的状态"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "setter": {
              "concept": "IconSetter"
            },
            "name": "icon",
            "title": "图标",
            "tsType": "nasl.core.String",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": ""
              },
              "playground": []
            },
            "docDescription": "在该步骤展示的图标"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "readonly",
            "title": "只读",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "正常显示，但禁止选择/输入",
            "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/07.%E9%80%89%E6%8B%A9%E5%99%A8/170.%E6%AD%A5%E9%AA%A4%E6%9D%A1.html",
            "docDescription": "是否只读，非只读的情况下可以选择"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "禁用该项"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "插入文本或 HTML"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题文本"
          },
          {
            "concept": "SlotDeclaration",
            "name": "desc",
            "title": "描述",
            "tsType": "() => Array<ViewComponent>",
            "params": []
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-selectable-steps :value=\"1\">\n<u-selectable-step><template #title><u-text text=\"步骤1\"></u-text></template></u-selectable-step>\n<u-selectable-step><template #title><u-text text=\"步骤2\"></u-text></template></u-selectable-step>\n<u-selectable-step><template #title><u-text text=\"步骤3\"></u-text></template></u-selectable-step>\n</u-selectable-steps>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-selectable-steps.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-selectable-steps.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "禁用",
        "description": "",
        "code": "<template>\n<u-selectable-steps :value=\"0\" :readonly=\"false\">\n<u-selectable-step><template #title><u-text text=\"步骤1\"></u-text></template></u-selectable-step>\n<u-selectable-step disabled><template #title><u-text text=\"步骤2\"></u-text></template></u-selectable-step>\n<u-selectable-step><template #title><u-text text=\"步骤3\"></u-text></template></u-selectable-step>\n</u-selectable-steps>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-selectable-steps.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-selectable-steps.vue/drawings/1.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UPagination",
    "alias": "翻页器",
    "title": "翻页器",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-pagination",
    "description": "展示多页列表时使用",
    "icon": "pagination",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "page",
        "title": "当前页数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当前默认展示在第几页",
        "docDescription": "翻页器的当前页"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "total",
        "title": "总页数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "11",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "翻页器的总页数"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "side",
        "title": "两端页码数量",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "2",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当页数多时，两端恒定显示的页码数量",
        "docDescription": "当页数多时，两边恒定显示的数量"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "around",
        "title": "中间页码数量",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当页数多时，中间恒定显示的页码数量",
        "docDescription": "当页数多时，左侧恒定显示的数量，若和两边的显示数量不一致，则取两者之间的最大值"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "totalItems",
        "title": "总条数",
        "tsType": "nasl.core.Integer",
        "docDescription": "数据的总条数目"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "pageSize",
        "title": "默认每页条数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "20",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "docDescription": "每页展示数据的条目数，默认为[10,20,50]"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "pageSizeOptions",
        "title": "每页条数选项",
        "tsType": "Array<nasl.core.Integer>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NewList",
            "items": [
              {
                "concept": "NumericLiteral",
                "value": "10",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "20",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              },
              {
                "concept": "NumericLiteral",
                "value": "50",
                "typeAnnotation": {
                  "concept": "TypeAnnotation",
                  "typeKind": "primitive",
                  "typeName": "Integer",
                  "typeNamespace": "nasl.core",
                  "inferred": false,
                  "ruleMap": {}
                }
              }
            ],
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          },
          "playground": []
        },
        "description": "每页条数切换器的选项",
        "docDescription": "每页条数选项列表"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showTotal",
        "title": "显示总条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showSizer",
        "title": "显示每页条数",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示每页条数切换器",
        "docDescription": "是否显示切换每页条数选项"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showJumper",
        "title": "显示跳转输入",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示页面跳转输入框",
        "docDescription": "是否显示页面跳转输入框"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  page: nasl.core.Integer;\n  oldPage: nasl.core.Integer;\n}) => any",
        "description": "选择分页前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  page: nasl.core.Integer;\n  oldPage: nasl.core.Integer;\n}) => any",
        "description": "选择分页时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  page: nasl.core.Integer;\n  oldPage: nasl.core.Integer;\n}) => any",
        "description": "页码改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change-page-size",
        "title": "条数改变后",
        "tsType": "(event: {\n  page: nasl.core.Integer;\n  oldPage: nasl.core.Integer;\n  pageSizeOptions: Array<nasl.core.Integer>;\n}) => any",
        "description": "每页条数改变时触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "total",
        "title": "总数",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "总数自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "prev",
        "title": "上一页",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "上一页自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "next",
        "title": "下一页",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "下一页自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-pagination :total=\"11\" :page=\"6\"></u-pagination>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-pagination.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-pagination.vue/drawings/0.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "全部配置",
        "description": "",
        "code": "<template>\n<u-linear-layout direction=\"vertical\">\n<u-pagination\n:totalItems=\"75\"\nshowTotal\nshowSizer\nshowJumper\n:pageSize=\"10\"\n:pageSizeOptions=\"[40,50,100]\">\n</u-pagination>\n</u-linear-layout>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-pagination.vue/screenshots/1.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-pagination.vue/drawings/1.svg"
      },
      {
        "concept": "ViewBlockWithImage",
        "title": "简洁版",
        "description": "",
        "code": "<template>\n<u-pagination :total=\"11\" :simple=\"true\"></u-pagination>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-pagination.vue/screenshots/2.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-pagination.vue/drawings/2.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "USelect",
    "alias": "选择器",
    "title": "选择器",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-select",
    "description": "下拉选择器，支持单选、多选、搜索等功能",
    "icon": "select",
    "tsTypeParams": "T, V, P extends nasl.core.Boolean, M extends nasl.core.Boolean, C extends string",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "{\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n} | nasl.collection.List<T>",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "M extends true ? (C extends '' ? nasl.collection.List<V> : nasl.core.String) : V",
        "description": "当前选中的值",
        "docDescription": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于显示文本的属性名称",
        "docDescription": "集合的元素类型中，用于显示文本的属性名称，支持自定义变更。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "pagination",
        "title": "分页",
        "tsType": "nasl.core.Boolean",
        "description": "设置是否分页展示数据"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter",
          "min": 1
        },
        "name": "pageSize",
        "title": "默认每页条数",
        "tsType": "nasl.core.Integer",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "50",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "if": "_ => _.pagination === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "sorting",
        "title": "初始化排序规则",
        "tsType": "{\n  field: nasl.core.String;\n  order: 'asc' | 'desc';\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        },
        "description": "设置数据初始化时的排序字段和顺序规则"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "description",
        "title": "选项辅助文本",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "选项的辅助说明信息，展示在选项文本下方"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "descriptionField",
        "title": "辅助文本字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于显示文本下方辅助描述的字段",
        "docDescription": "集合的元素类型中，用于显示文本下方辅助描述的属性名称",
        "if": "_ => _.description === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "iconField",
        "title": "图标展示字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于显示文本前面图标的属性名称。与文本字段、值字段类似的写法"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "filterable",
        "title": "筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以筛选，开启将会支持搜索。",
        "docDescription": "开启后选择框可输入文本进行筛选"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "包括",
              "value": "includes"
            },
            {
              "title": "匹配开头",
              "value": "startsWith"
            },
            {
              "title": "匹配结尾",
              "value": "endsWith"
            }
          ]
        },
        "name": "matchMethod",
        "title": "匹配方法",
        "tsType": "'includes' | 'startsWith' | 'endsWith'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "includes"
          },
          "playground": []
        },
        "description": "过滤时的匹配方法",
        "docDescription": "支持配置过滤时的匹配模式，共有包括、匹配开头或匹配结尾3种模式",
        "if": "_ => _.filterable === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showRenderFooter",
        "title": "可扩展下拉项",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可扩展下拉项,开启后可自定义下拉框选项"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "hasAllCheckItem",
        "title": "全选控制",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否存在可以控制选项的全选/反选",
        "docDescription": "是否存在可以控制选项的全选/反选"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "allCheckItemText",
        "title": "全选展示内容",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "全选"
          },
          "playground": []
        },
        "description": "是否存在可以控制选项的全选/反选",
        "docDescription": "是否存在可以控制选项的全选/反选",
        "if": "_ => _.hasAllCheckItem === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "无",
              "value": ""
            },
            {
              "title": "以', '连接",
              "value": "join"
            },
            {
              "title": "以'|'连接",
              "value": "join:|"
            },
            {
              "title": "以';'连接",
              "value": "join:;"
            },
            {
              "title": "json",
              "value": "json"
            }
          ]
        },
        "name": "converter",
        "title": "转换器",
        "tsType": "'' | 'join' | 'join:|' | 'join:;' | 'json'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "将选中的值以选择的符号作为连接符，转为字符串格式；选择“json”则转为JSON字符串格式。",
        "docDescription": "将选中的值以选择的符号作为连接符，转为字符串格式；选择“json”则转为JSON字符串格式"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "选择框无内容时的提示信息，支持自定义编辑，默认为请选择"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "控制是否在进入页面时聚焦到该组件",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "搜索",
              "value": "search"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "prefix",
        "title": "前缀图标",
        "tsType": "'search' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持添加前缀图标，如搜索图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "搜索",
              "value": "search"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "suffix",
        "title": "后缀图标",
        "tsType": "'search' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持添加后缀图标，如搜索图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "弹出层位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "reference"
          },
          "playground": []
        },
        "description": "设置弹出层依据哪个元素定位位置，可选值：`body`表示添加到 document.body，`reference`表示添加到参考元素中。",
        "docDescription": "设置添加到哪个元素"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "可点击清除按钮一键清除所选内容",
        "docDescription": "控制是否显示清除按钮，支持一键清除所选内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "过多时省略",
              "value": "hidden"
            },
            {
              "title": "过多时收缩",
              "value": "collapse"
            },
            {
              "title": "过多时显示",
              "value": "visible"
            }
          ]
        },
        "name": "tagsOverflow",
        "title": "多选项展示形式",
        "tsType": "'hidden' | 'collapse' | 'visible'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "collapse"
          },
          "playground": []
        },
        "description": "多选项过多时的展示形式",
        "if": "_ => _.multiple === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "multiple",
        "title": "可多选",
        "tsType": "M",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以多选行",
        "docDescription": "是否可以多选"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "initialLoad",
        "title": "初始即加载",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置初始时是否立即加载",
        "docDescription": "是否在初始时立即加载"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showEmptyText",
        "title": "展示暂无数据文案",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "是否在数据为空时展示暂无数据的文字提示",
        "docDescription": "是否在数据为空时展示暂无数据的文字提示"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "name": "emptyText",
        "title": "暂无数据文案",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "暂无数据"
          },
          "playground": []
        },
        "description": "暂无数据状态显示的提示文案",
        "docDescription": "暂无数据时的文字"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "emptyDisabled",
        "title": "为空自动禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "为空时置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "弹出状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "弹出状态分为“True(弹出)/False(关闭)”，默认为“弹出”",
        "docDescription": "开启时加载下拉框时，下拉框自动弹出，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置选择框宽度大小",
        "docDescription": "设置选择框宽度大小，支持占满、巨大、大、中型、正常、小共6种模式"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "name": "popperWidth",
        "title": "下拉列表宽度",
        "tsType": "nasl.core.String",
        "description": "设置下拉列表宽度",
        "docDescription": "设置下拉列表宽度"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "isItemDisplay",
        "title": "回显选项",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "设置回显选项",
        "docDescription": "设置回显选项"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置选择框高度大小",
        "docDescription": "设置选择框高度大小，支持占满、巨大、大、中型、正常、小共6种模式"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "USelectOptions<T, V, P, M, C>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "USelectOptions<T, V, P, M, C>['value']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "size",
        "title": "分页大小",
        "tsType": "USelectOptions<T, V, P, M, C>['pageSize']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "page",
        "title": "当前页数",
        "tsType": "USelectOptions<T, V, P, M, C>['pageNumber']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "opened",
        "title": "弹出状态",
        "tsType": "USelectOptions<T, V, P, M, C>['opened']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "filterText",
        "title": "过滤文本",
        "tsType": "nasl.core.String"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "选择时",
        "tsType": "(event: V) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项后触发。单选模式中："
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  values: nasl.collection.List<V>;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
        "description": "选择值改变时触发。单选模式中："
      },
      {
        "concept": "EventDeclaration",
        "name": "before-open",
        "title": "弹出前",
        "tsType": "(event: any) => any",
        "description": "弹出前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "open",
        "title": "弹出后",
        "tsType": "(event: any) => any",
        "description": "弹出后触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-close",
        "title": "关闭前",
        "tsType": "(event: any) => any",
        "description": "关闭前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "关闭后",
        "tsType": "(event: any) => any",
        "description": "关闭时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "click-prefix",
        "title": "点击前缀图标",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击前缀图标后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "click-suffix",
        "title": "点击后缀图标",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "点击后缀图标后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-filter",
        "title": "搜索前",
        "tsType": "(event: {\n  filterText: nasl.core.String;\n}) => any",
        "description": "可搜索输入框，在输入搜索文字时"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "弹出选择框。",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭选择框。",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "切换弹出/关闭状态。",
        "params": [
          {
            "concept": "Param",
            "name": "opened",
            "description": "'可选。弹出/关闭状态'"
          }
        ],
        "returns": [],
        "name": "toggle",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "添加项",
        "params": [
          {
            "concept": "Param",
            "name": "item",
            "description": "'当前添加的项'"
          },
          {
            "concept": "Param",
            "name": "inFirst",
            "description": "'是否添加到列表的第一项'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            }
          }
        ],
        "returns": [],
        "name": "addItem",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "选项",
            "code": "<u-select-item><u-text text=\"选项\"></u-text></u-select-item>"
          },
          {
            "title": "分组",
            "code": "<u-select-group><template #title><u-text text=\"分组\"></u-text></template><u-select-item><u-text text=\"选项\"></u-text></u-select-item></u-select-group>"
          },
          {
            "title": "分隔线",
            "code": "<u-select-divider></u-select-divider>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<USelectItem<T, V> | USelectGroup<T, V> | USelectDivider>",
        "params": [],
        "description": "插入`<u-select-item>`、`<u-select-divider>`或`<u-select-group>`子组件。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "renderFooter",
        "title": "底部",
        "tsType": "() => Array<ViewComponent>",
        "params": []
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USelectItem",
        "kebabName": "u-select-item",
        "title": "选择项",
        "description": "选择项",
        "icon": "",
        "tsTypeParams": "T, V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "text",
            "title": "选项文本",
            "tsType": "nasl.core.String",
            "description": "此项的显示值"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "V",
            "description": "此项的值。",
            "docDescription": "此项的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "description",
            "title": "选项辅助文本",
            "tsType": "nasl.core.String",
            "description": "选项的辅助说明信息，展示在选项文本下方",
            "docDescription": "选项文本的辅助描述，展示在选项文本下方"
          },
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "item",
            "title": "相关对象",
            "tsType": "T",
            "description": "相关对象。当选择此项时，抛出的事件会传递该对象，便于开发。",
            "docDescription": "相关对象。当选择此项时，抛出的事件会传递该对象，便于开发"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
            "docDescription": "该项不可选，默认关闭"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "before-select",
            "title": "选择前",
            "tsType": "(event: {\n  selected: nasl.core.Boolean;\n  item: T;\n  oldItem: T;\n  value: V;\n  oldValue: V;\n  items: nasl.collection.List<T>;\n  oldItems: nasl.collection.List<T>;\n}) => any",
            "description": "选择此项前触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "name": "default",
            "title": "默认",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "插入文本或 HTML。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USelectGroup",
        "kebabName": "u-select-group",
        "title": "选择分组",
        "description": "选择分组",
        "icon": "",
        "tsTypeParams": "T, V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "title",
            "title": "标题",
            "tsType": "nasl.core.String",
            "docDescription": "选择分组的标题，标题只有在没有文本插槽的时候生效"
          }
        ],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "选项",
                "code": "<u-select-item><u-text text=\"选项\"></u-text></u-select-item>"
              }
            ],
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<USelectItem<T, V>>",
            "params": [],
            "description": "插入`<u-select-item>`或`<u-select-divider>`子组件。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "title",
            "title": "标题",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "自定义标题文本。"
          },
          {
            "concept": "SlotDeclaration",
            "name": "extra",
            "title": "附加内容",
            "tsType": "() => Array<ViewComponent>",
            "params": [],
            "description": "在右侧可以附加内容。"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      },
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "USelectDivider",
        "kebabName": "u-select-divider",
        "title": "分隔线",
        "description": "分隔线",
        "icon": "",
        "tsTypeParams": "",
        "props": [],
        "readableProps": [],
        "events": [],
        "methods": [],
        "slots": [],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "数据选择框",
        "description": "",
        "code": "<template>\n<u-select placeholder=\"请选择\" :pagination=\"true\" :pageSize=\"50\"></u-select>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-select.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UCascader",
    "alias": "级联选择",
    "title": "级联选择",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-cascader",
    "description": "一次选择多个相关联的项",
    "icon": "cascade-select",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为数据集对象或者返回数据集的逻辑",
        "docDescription": "数据列表，支持直接放置多层的数据源也支持通过单层的数据和`父节点字段名`或`子节点字段名`构建树形"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "集合类型每一元素的数据类型"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "field",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于显示文本的属性名称",
        "docDescription": "集合的元素类型中，用于显示文本的属性名称"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "childrenField",
        "title": "子级值字段",
        "tsType": "(item: T) => nasl.collection.List<any>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "children"
          },
          "playground": []
        },
        "description": "树形数据子节点字段名，默认为children",
        "docDescription": "树形数据子节点字段名，默认为children"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => any",
        "description": "当数据源为平铺数据时自动生成级联数据的节点字段名，重要：值字段名需要一起配置",
        "docDescription": "当数据源为平铺数据时自动生成级联数据的节点字段名，重要：值字段名需要一起配置"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "V",
        "docDescription": "选择器的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "useArrayLikeValue",
        "title": "绑定值使用值字段",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "是否使用数组类型的value"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "filterable",
        "title": "筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以筛选，开启将会显示搜索框。",
        "docDescription": "是否可以过滤（搜索），开启将会显示搜索框"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "filterHightlighterColor",
        "title": "筛选文字高亮颜色",
        "tsType": "nasl.core.String",
        "description": "设置筛选文字高亮颜色",
        "docDescription": "设置筛选文字高亮颜色",
        "if": "_ => _.filterable === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "搜索框为空时提示文本"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFinalValue",
        "title": "只显示最后一项",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "定义是否显示完整的路径，ture时只显示最后一项",
        "docDescription": "定义是否显示完整的路径，ture时只显示最后一项"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "是否自动获取焦点",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "点击",
              "value": "click"
            },
            {
              "title": "悬浮",
              "value": "hover"
            }
          ]
        },
        "name": "trigger",
        "title": "触发方式",
        "tsType": "'click' | 'hover'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "docDescription": "触发方式"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清空",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以清空搜索框，开启后将在有内容时显示清除按钮。",
        "docDescription": "开启并在输入框有内容时会显示清除按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "禁用选择器"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "弹出状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "弹出状态分为“True(弹出)/False(关闭)”，默认为“弹出”",
        "docDescription": "切换弹出/关闭状态"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置级联框宽度大小",
        "docDescription": "设置级联框宽度大小"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置级联框高度大小",
        "docDescription": "设置级联框高度大小"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UCascaderOptions<T, V>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "UCascaderOptions<T, V>['value']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "filterText",
        "title": "过滤文本",
        "tsType": "nasl.core.String"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: V) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: V;\n  values: nasl.collection.List<V>;\n  items: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "clear",
        "title": "清空后",
        "tsType": "(event: any) => any",
        "description": "清空后触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "弹出实例。",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭实例。",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "清空输入框。",
        "params": [],
        "returns": [],
        "name": "clear",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "重新加载数据",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-cascader :dataSource=\"[\n{ text: '理学', value: '理学', children: [\n{ text: '物理学', value: '物理学', children: [\n{ text: '理论物理', value: '理论物理' },\n{ text: '凝聚态物理', value: '凝聚态物理' },\n{ text: '材料物理', value: '材料物理' },\n]},\n{ text: '数学', value: '数学', children: [\n{ text: '基础数学', value: '基础数学' },\n{ text: '计算数学', value: '计算数学' },\n{ text: '应用数学', value: '应用数学' },\n]},\n{ text: '化学', value: '化学' },\n]},\n{ text: '工学', value: '工学', children: [\n{ text: '计算机科学与技术', value: '计算机科学与技术', children: [\n{ text: '计算机系统结构', value: '计算机系统结构' },\n{ text: '计算机软件与理论', value: '计算机软件与理论', disabled: true },\n{ text: '计算机应用技术', value: '计算机应用技术' },\n] },\n{ text: '软件工程', value: '软件工程', disabled: true },\n{ text: '机械工程', value: '机械工程', children: [\n{ text: '机械制造及其自动化', value: '机械制造及其自动化' },\n{ text: '机械电子工程', value: '机械电子工程' },\n{ text: '机械设计及理论', value: '机械设计及理论', disabled: true },\n{ text: '车辆工程', value: '车辆工程', disabled: true },\n] },\n] },\n]\">\n</u-cascader>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-cascader.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "URegionSelect",
    "alias": "地区选择",
    "title": "地区选择",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-region-select",
    "description": "该组件从 UCascader 继承，仅填充了中国的行政区数据，其他功能与 UCascader 相同。",
    "icon": "region-select",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "地区名称",
              "value": "name"
            },
            {
              "title": "地区码",
              "value": "code"
            }
          ]
        },
        "name": "converter",
        "title": "转换器",
        "tsType": "'name' | 'code'",
        "description": "选择地区名称，返回：浙江省/杭州市/滨江区（不加空格）；选择地区码，返回：330108"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "- 支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.Any",
        "docDescription": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "field",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "docDescription": "集合的元素类型中，用于显示文本的属性名称，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "filterable",
        "title": "筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以筛选，开启将会显示搜索框。",
        "docDescription": "开启后选择框可输入文本进行筛选"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "选择框无内容时的提示信息，支持自定义编辑，默认为请选择"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFinalValue",
        "title": "只显示最后一项",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "定义是否显示完整的路径，ture时只显示最后一项",
        "docDescription": "控制选择地区项后输入框里展示的形式，开启时只展示最后一项目，未开启时展示所有项路径。默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "控制是否在进入页面时聚焦到该组件",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "点击",
              "value": "click"
            },
            {
              "title": "悬浮",
              "value": "hover"
            }
          ]
        },
        "name": "trigger",
        "title": "触发方式",
        "tsType": "'click' | 'hover'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "docDescription": "地区选择时下一层级的展开方式，可以点击展开或者鼠标悬浮时展开"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清空",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否可以清空搜索框，开启后将在有内容时显示清除按钮。",
        "docDescription": "控制是否显示清除按钮，支持一键清除所选内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "弹出状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "弹出状态分为“True(弹出)/False(关闭)”，默认为“弹出”",
        "docDescription": "开启时加载下拉框时，下拉框自动弹出，默认关闭"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: nasl.core.String) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: V;\n  values: nasl.collection.List<V>;\n  items: nasl.collection.List<T>;\n}) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "clear",
        "title": "清空后",
        "tsType": "(event: any) => any",
        "description": "清空后触发。"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "弹出实例。",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭实例。",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "清空输入框。",
        "params": [],
        "returns": [],
        "name": "clear",
        "title": "undefined"
      }
    ],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-region-select converter=\"name\"></u-region-select>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-region-select.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-region-select.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UTreeViewNew",
    "alias": "树形视图",
    "title": "树形视图",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-tree-view-new",
    "description": "树形视图",
    "icon": "tree-view-new",
    "tsTypeParams": "T, V, M extends nasl.core.Boolean",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "选项文本",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于显示文本的属性名称"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "childrenField",
        "title": "子级值字段",
        "tsType": "(item: T) => nasl.collection.List<any>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "children"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识子节点的属性，默认为children",
        "docDescription": "集合的元素类型中，用于标识子级字段的的属性，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于标识父节点的属性",
        "docDescription": "集合的元素类型中，用于标识父级字段的属性，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "V",
        "description": "选择后，所选中的值",
        "docDescription": "当前选择的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "checkControlled",
        "title": "父子节点独立选择",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "开启后父节点选择不会全选子节点，子节点选择不会联动父节点",
        "docDescription": "开启后父节点选择不会全选子节点，子节点选择不会联动父节点"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "checkable",
        "title": "可多选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否开启多选模式，显示多选框",
        "docDescription": "开启后支持选中多项。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "accordion",
        "title": "手风琴模式",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否每次只展开一个",
        "docDescription": "开启后每次只能展开一个分组，其他已经展开的分组会关闭。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "整行点击均可触发",
              "value": "click"
            },
            {
              "title": "点击小箭头时触发",
              "value": "click-expander"
            }
          ]
        },
        "name": "expandTrigger",
        "title": "触发方式",
        "tsType": "'click' | 'click-expander'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "description": "展开/折叠的触发方式",
        "docDescription": "树展开/折叠的方式。可选择整行点击均可触发、点击小箭头时触发。默认整行点击均可触发"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-select",
        "title": "选择前",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  node: T;\n  oldNode: T;\n}) => any",
        "description": "选择某一项前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "输入时",
        "tsType": "(event: V | nasl.collection.List<V>) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  node: T;\n  oldNode: T;\n}) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  node: T;\n  oldNode: T;\n}) => any",
        "description": "选择值改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "toggle",
        "title": "展开折叠后",
        "tsType": "(event: {\n  expanded: nasl.core.Boolean;\n  node: T;\n}) => any",
        "description": "展开/折叠某节点时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "check",
        "title": "选中取消后",
        "tsType": "(event: {\n  checked: nasl.core.Boolean;\n  oldChecked: nasl.core.Boolean;\n  node: T;\n  values: nasl.collection.List<V>;\n}) => any",
        "description": "选中/取消节点时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "广度优先遍历树。当`func`函数有返回值时，停止遍历。",
        "params": [
          {
            "concept": "Param",
            "name": "func",
            "description": "'遍历的处理函数'"
          }
        ],
        "returns": [],
        "name": "walk",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "查找节点实例。",
        "params": [
          {
            "concept": "Param",
            "name": "func",
            "description": "'查找函数。找到第一个返回值为`true`的实例。'"
          }
        ],
        "returns": [],
        "name": "find",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "展开/折叠所有节点",
        "params": [
          {
            "concept": "Param",
            "name": "expanded",
            "description": "'展开/折叠'"
          }
        ],
        "returns": [],
        "name": "toggleAll",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "选中/取消所有节点",
        "params": [
          {
            "concept": "Param",
            "name": "expanded",
            "description": "'选中/取消'"
          }
        ],
        "returns": [],
        "name": "checkAll",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "子节点",
            "code": "<u-tree-view-node-new><template slot=\"item\">节点</template></u-tree-view-node-new>"
          }
        ],
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<UTreeViewNodeNew<T, V>>",
        "params": [],
        "description": "插入`<u-tree-view-node-new>`子组件"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "项",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [
      {
        "concept": "ViewComponentDeclaration",
        "group": "",
        "name": "UTreeViewNodeNew",
        "kebabName": "u-tree-view-node-new",
        "title": "树形视图节点",
        "description": "树形视图节点",
        "icon": "",
        "tsTypeParams": "T, V",
        "props": [
          {
            "concept": "PropDeclaration",
            "group": "主要属性",
            "tabKind": "property",
            "name": "text",
            "title": "文本",
            "tsType": "nasl.core.String",
            "description": "节点的文本"
          },
          {
            "concept": "PropDeclaration",
            "group": "数据属性",
            "tabKind": "property",
            "name": "value",
            "title": "值",
            "tsType": "V",
            "description": "节点的值"
          },
          {
            "concept": "PropDeclaration",
            "group": "交互属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "checked",
            "title": "默认选中",
            "tsType": "nasl.core.Boolean"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "sync": true,
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "expanded",
            "title": "展开状态",
            "tsType": "nasl.core.Boolean",
            "description": "展开状态分为“True(展开)/False(折叠)”，默认为“展开”"
          },
          {
            "concept": "PropDeclaration",
            "group": "状态属性",
            "tabKind": "property",
            "setter": {
              "concept": "SwitchSetter"
            },
            "name": "disabled",
            "title": "禁用",
            "tsType": "nasl.core.Boolean",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "BooleanLiteral",
                "value": "false"
              },
              "playground": []
            },
            "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
          }
        ],
        "readableProps": [],
        "events": [
          {
            "concept": "EventDeclaration",
            "name": "before-select",
            "title": "选择前",
            "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  node: T;\n  oldNode: T;\n}) => any",
            "description": "选择此项前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "before-toggle",
            "title": "展开折叠前",
            "tsType": "(event: {\n  expanded: nasl.core.Boolean;\n  node: T;\n}) => any",
            "description": "展开/折叠此节点前触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "toggle",
            "title": "展开折叠后",
            "tsType": "(event: {\n  expanded: nasl.core.Boolean;\n  node: T;\n}) => any",
            "description": "展开/折叠某节点时触发"
          },
          {
            "concept": "EventDeclaration",
            "name": "check",
            "title": "选中后",
            "tsType": "(event: {\n  checked: nasl.core.Boolean;\n  oldChecked: nasl.core.Boolean;\n  node: T;\n}) => any",
            "description": "选中节点时触发"
          }
        ],
        "methods": [],
        "slots": [
          {
            "concept": "SlotDeclaration",
            "snippets": [
              {
                "title": "子节点",
                "code": "<u-tree-view-node-new><template slot=\"item\">节点</template></u-tree-view-node-new>"
              }
            ],
            "name": "default",
            "title": "默认",
            "tsType": "() => Array<UTreeViewNodeNew<T, V>>",
            "params": [],
            "description": "插入子节点"
          },
          {
            "concept": "SlotDeclaration",
            "name": "item",
            "title": "项",
            "tsType": "(current: Current<T>) => Array<ViewComponent>",
            "params": [
              {
                "concept": "Param",
                "name": "current",
                "description": "",
                "typeAnnotation": {
                  "typeKind": "generic",
                  "typeName": "Current",
                  "typeNamespace": "nasl.ui",
                  "concept": "TypeAnnotation",
                  "inferred": false,
                  "ruleMap": {},
                  "typeArguments": [
                    {
                      "concept": "TypeAnnotation",
                      "typeKind": "typeParam",
                      "inferred": false,
                      "ruleMap": {}
                    }
                  ]
                }
              }
            ],
            "description": "自定义选项的结构和样式"
          }
        ],
        "children": [],
        "blocks": [],
        "themeVariables": []
      }
    ],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-tree-view-new>\n<template #item=\"current\">\n</template>\n</u-tree-view-new>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tree-view-new.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UTransfer",
    "alias": "穿梭框",
    "title": "穿梭框",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-transfer",
    "description": "双栏穿梭选择框，常用于将多个项目从一边移动到另一边。",
    "icon": "transfer",
    "tsTypeParams": "T, V",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "source",
        "title": "原始数据",
        "tsType": "nasl.collection.List<T>",
        "description": "原数据列表",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "target",
        "title": "目标数据",
        "tsType": "nasl.collection.List<T>",
        "description": "目标数据列表",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的逻辑。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "选项文本的字段名",
        "docDescription": "集合的元素类型中，用于显示文本的属性名称，支持自定义变更。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "选项值的字段名",
        "docDescription": "集合的元素类型中，用于指定数据唯一值的字段，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "filterable",
        "title": "筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示筛选（搜索框）",
        "docDescription": "是否开启过滤输入框和过滤功能。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "caseSensitive",
        "title": "大小写敏感",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否区分大小写",
        "docDescription": "搜索是否大小写敏感。默认关闭。在过滤属性开启后有效。",
        "if": "_ => _.filterable === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除筛选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "可点击清除按钮一键清除搜索框内容",
        "docDescription": "过滤输入框是否开启清除按钮。默认开启。在过滤属性开启后有效",
        "if": "_ => _.filterable === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示头部",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "开启后会显示头部全选栏。默认开启"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "sourceTitle",
        "title": "左侧列表标题",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "列表"
          },
          "playground": []
        },
        "docDescription": "- 左侧头部全选框右侧展示的文字。默认为“左列表”。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "targetTitle",
        "title": "右侧列表标题",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "列表"
          },
          "playground": []
        },
        "docDescription": "右侧头部全选框右侧展示的文字。默认为“右列表”"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请输入"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "过滤输入框无内容时的提示信息，支持自定义编辑，默认为请选择。在过滤属性开启后有效",
        "if": "_ => _.filterable === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "transfer",
        "title": "数据转移时",
        "tsType": "(event: {\n  source: nasl.collection.List<T>;\n  target: nasl.collection.List<T>;\n  transfer: nasl.collection.List<T>;\n  transferValues: nasl.collection.List<V>;\n}) => any",
        "description": "数据转移时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  source: nasl.collection.List<T>;\n  target: nasl.collection.List<T>;\n  transfer: nasl.collection.List<T>;\n  transferValues: nasl.collection.List<V>;\n}) => any",
        "description": "数据改变时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "从左向右转移数据。",
        "params": [
          {
            "concept": "Param",
            "name": "values",
            "description": "'指定转移选项值的列表。如果不填，则为按左列表框选中项值的列表。'",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "returns": [],
        "name": "forward",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "从右向左转移数据。",
        "params": [
          {
            "concept": "Param",
            "name": "values",
            "description": "'指定转移选项值的列表。如果不填，则为按右列表框选中项值的列表。'",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "returns": [],
        "name": "reverse",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "转移指定项的数据。",
        "params": [
          {
            "concept": "Param",
            "name": "direction",
            "description": "'方向'",
            "defaultValue": {
              "concept": "DefaultValue",
              "expression": {
                "concept": "StringLiteral",
                "value": "forward"
              },
              "playground": []
            }
          },
          {
            "concept": "Param",
            "name": "values",
            "description": "'指定转移选项值的列表。'",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Array",
              "typeNamespace": "",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "returns": [],
        "name": "transfer",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "项",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-transfer showHead sourceTitle=\"左列表\" targetTitle=\"右列表\"\n:source=\"[{ text: 'SQL', value: 'sql' },{ text: 'JSON', value: 'json' },]\" :target=\"[{ text: 'CSS', value: 'css' },{ text: 'HTML', value: 'html' },{ text: 'JavaScript', value: 'javascript' },{ text: 'Vue', value: 'vue' },]\"></u-transfer>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-transfer.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-transfer.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UDatePicker",
    "alias": "日期选择",
    "title": "日期选择",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-date-picker",
    "description": "日期选择",
    "icon": "date-picker",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "日期",
              "value": "date"
            },
            {
              "title": "周",
              "value": "week"
            },
            {
              "title": "月份",
              "value": "month"
            },
            {
              "title": "季度",
              "value": "quarter"
            },
            {
              "title": "年份",
              "value": "year"
            }
          ]
        },
        "name": "picker",
        "title": "日期类型",
        "tsType": "'date' | 'week' | 'month' | 'quarter' | 'year'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "date"
          },
          "playground": []
        },
        "description": "日期格式设置",
        "docDescription": "日期选择弹出层里的日期展示格式，支持日期、月份、季度、年份4种模式。默认日期格式"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "range",
        "title": "区间选择",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否支持进行日期区间选择，关闭则为日期点选择",
        "onChange": [
          {
            "clear": [
              "placeholderRight"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "默认显示的日期值，格式如2018-08-08",
        "docDescription": "当前选择的值",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "startDate",
        "title": "起始值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "默认显示的起始日期值，格式如2018-08-08",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "endDate",
        "title": "结束值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "默认显示的结束日期值，格式如2018-08-08",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "minDate",
        "title": "最小日期值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "最小可选的日期值，默认为10年前，日期填写格式为“yyyy-mm-dd”",
        "docDescription": "设置日期范围，支持输入的最小日期"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "maxDate",
        "title": "最大日期值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "最大可选的日期值，默认为9年后，日期填写格式为“yyyy-mm-dd”",
        "docDescription": "设置日期范围，支持输入的最大日期"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "yearDiff",
        "title": "最小年份差值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "20",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "最小可选年份值与当前年份值的差值",
        "docDescription": "设置日期范围，最小可选择的年份",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "yearAdd",
        "title": "最大年份差值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "20",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "最大可选年份值与当前年份值的差值",
        "docDescription": "设置日期范围，最大可选择的年份",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "name": "advancedFormat",
        "title": "高级格式化",
        "tsType": "{\n  enable: nasl.core.Boolean;\n  value: nasl.core.String;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "中国（2023年7月26日）",
              "if": "_ => _.picker === 'date'",
              "value": "YYYY年M月D日"
            },
            {
              "title": "ISO（2023-07-26）",
              "if": "_ => _.picker === 'date'",
              "value": "YYYY-MM-DD"
            },
            {
              "title": "US（7/26/2023）",
              "if": "_ => _.picker === 'date'",
              "value": "M/D/YYYY"
            },
            {
              "title": "EU（26/7/2023）",
              "if": "_ => _.picker === 'date'",
              "value": "D/M/YYYY"
            },
            {
              "title": "2023-28周",
              "if": "_ => _.picker === 'week'",
              "value": "GGGG-W周"
            },
            {
              "title": "2023年第28周",
              "if": "_ => _.picker === 'week'",
              "value": "GGGG年第W周"
            },
            {
              "title": "2023-W28",
              "if": "_ => _.picker === 'week'",
              "value": "GGGG-WWWW"
            },
            {
              "title": "中国（2023年7月）",
              "if": "_ => _.picker === 'month'",
              "value": "YYYY年M月"
            },
            {
              "title": "ISO（2023-07）",
              "if": "_ => _.picker === 'month'",
              "value": "YYYY-MM"
            },
            {
              "title": "US/EU（7/2023）",
              "if": "_ => _.picker === 'month'",
              "value": "M/YYYY"
            },
            {
              "title": "2023年第3季度",
              "if": "_ => _.picker === 'quarter'",
              "value": "YYYY年第Q季度"
            },
            {
              "title": "2023年Q3",
              "if": "_ => _.picker === 'quarter'",
              "value": "YYYY年QQ"
            },
            {
              "title": "2023-Q3",
              "if": "_ => _.picker === 'quarter'",
              "value": "YYYY-QQ"
            },
            {
              "title": "中国（2023年）",
              "if": "_ => _.picker === 'year'",
              "value": "YYYY年"
            },
            {
              "title": "ISO（2023）",
              "if": "_ => _.picker === 'year'",
              "value": "YYYY"
            }
          ]
        },
        "name": "showFormatter",
        "title": "日期展示格式",
        "tsType": "'YYYY年M月D日' | 'YYYY-MM-DD' | 'M/D/YYYY' | 'D/M/YYYY' | 'GGGG-W周' | 'GGGG年第W周' | 'GGGG-WWWW' | 'YYYY年M月' | 'YYYY-MM' | 'M/YYYY' | 'YYYY年第Q季度' | 'YYYY年QQ' | 'YYYY-QQ' | 'YYYY年' | 'YYYY'",
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "控制是否在进入页面时聚焦到该组件",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择日期"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "日期选择框无内容时的提示信息，支持自定义编辑，默认为请输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholderRight",
        "title": "右侧占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择日期"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本（右侧）",
        "docDescription": "日期选择框无内容时的提示信息，支持自定义编辑, 在没有设置的时候使用placeholder作为右侧占位符内容",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "左对齐",
              "value": "left"
            },
            {
              "title": "右对齐",
              "value": "right"
            }
          ]
        },
        "name": "alignment",
        "title": "日历弹窗对齐方式",
        "tsType": "'left' | 'right'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "left"
          },
          "playground": []
        },
        "description": "日历弹窗对齐方式",
        "docDescription": "日期选择弹出层与输入框的对齐方式，支持左对齐、右对齐2种模式。默认为左对齐"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "JSON",
              "value": "json"
            },
            {
              "title": "Unix 时间戳",
              "value": "timestamp"
            },
            {
              "title": "Date 对象",
              "value": "date"
            },
            {
              "title": "YYYY-MM-DD",
              "value": "format"
            }
          ]
        },
        "name": "converter",
        "title": "转换器",
        "tsType": "'json' | 'timestamp' | 'date' | 'format'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "format"
          },
          "playground": []
        },
        "description": "转换器，用于转换时间结果",
        "docDescription": "用于转换选中的日期格式，支持JSON、Unix 时间戳、Date对象、YYYY-MM-DD共4种模式。默认YYYY-MM-DD"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "日历",
              "value": "calendar"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "preIcon",
        "title": "前缀图标",
        "tsType": "'calendar' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "calendar"
          },
          "playground": []
        },
        "docDescription": "支持添加前缀图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "日历",
              "value": "calendar"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "suffixIcon",
        "title": "后缀图标",
        "tsType": "'calendar' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持添加后缀图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "弹出层位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "body"
          },
          "playground": []
        },
        "description": "设置弹出层依据哪个元素定位位置，可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。",
        "docDescription": "设置弹出层添加到哪个元素"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "description": "可点击清除按钮一键清除内容",
        "docDescription": "控制是否显示清除按钮，支持一键清除所选内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入",
        "docDescription": "正常显示，但禁止选择或输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "弹出状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "弹出状态分为“True(弹出)/False(关闭)”，默认为“关闭”",
        "docDescription": "开启时加载日期组件时，下拉框自动弹出，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置日期选择输入框宽度大小",
        "docDescription": "设置日期选择框宽度大小，支持占满、巨大、大、中型、正常、小共6种模式"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置日期选择输入框高度大小",
        "docDescription": "设置日期选择框高度大小，支持占满、巨大、大、中型、正常、小共6种模式"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "input",
        "title": "值输入时",
        "tsType": "(event: nasl.core.Date) => any",
        "description": "值变化时触发 (表单验证可以检测到其值得变化)"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "值变化时",
        "tsType": "(event: {\n  date: nasl.core.String;\n  time: nasl.core.String;\n}) => any",
        "description": "值变化时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择时",
        "tsType": "(event: {\n  date: nasl.core.String;\n  time: nasl.core.String;\n}) => any",
        "description": "选择日期时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "toggle",
        "title": "弹出/隐藏时",
        "tsType": "(event: {\n  opened: nasl.core.Boolean;\n}) => any",
        "description": "弹出/隐藏时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-date-picker value=\"2018-08-08\"></u-date-picker>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-date-picker.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UTimePicker",
    "alias": "时间选择",
    "title": "时间选择",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-time-picker",
    "description": "时间选择",
    "icon": "time-picker",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "秒",
              "value": "second"
            },
            {
              "title": "分",
              "value": "minute"
            }
          ]
        },
        "name": "minUnit",
        "title": "最小单位",
        "tsType": "'second' | 'minute'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "second"
          },
          "playground": []
        },
        "description": "最小时间单位",
        "docDescription": "最小时间单位，支持秒或分"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "range",
        "title": "区间选择",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否支持进行时间区间选择，关闭则为时间点选择",
        "onChange": [
          {
            "clear": [
              "placeholderRight"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择时间"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "时间选择框无内容时的提示信息，支持自定义编辑，默认为请输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholderRight",
        "title": "右侧占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择时间"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本（右侧）",
        "docDescription": "时间选择框无内容时的提示信息，支持自定义编辑, 在没有设置的时候使用placeholder作为右侧占位符内容",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "默认显示的时间值，格式如08:08:08",
        "docDescription": "默认显示的日期值。",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "startTime",
        "title": "起始值",
        "tsType": "nasl.core.String",
        "description": "默认显示的起始时间值，格式如08:08:08",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "endTime",
        "title": "结束值",
        "tsType": "nasl.core.String",
        "description": "默认显示的结束时间值，格式如08:08:08",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "minTime",
        "title": "最小时间值",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "00:00:00"
          },
          "playground": []
        },
        "description": "最小可选的时间值，填写null则不限制，日期填写格式为“00:00:00”",
        "docDescription": "支持输入的最小时间。"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "maxTime",
        "title": "最大时间值",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "23:59:59"
          },
          "playground": []
        },
        "description": "最大可选的时间值，填写null则不限制，日期填写格式为“00:00:00”",
        "docDescription": "支持输入的最大时间"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "12: 09: 09",
              "if": "_ => _.minUnit === 'second'",
              "value": "HH:mm:ss"
            },
            {
              "title": "12时09分09秒",
              "if": "_ => _.minUnit === 'second'",
              "value": "HH时mm分ss秒"
            },
            {
              "title": "12: 09",
              "if": "_ => _.minUnit === 'minute'",
              "value": "HH:mm"
            },
            {
              "title": "12时09分",
              "if": "_ => _.minUnit === 'minute'",
              "value": "HH时mm分"
            }
          ]
        },
        "name": "showFormatter",
        "title": "时间展示格式",
        "tsType": "'HH:mm:ss' | 'HH时mm分ss秒' | 'HH:mm' | 'HH时mm分'",
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "name": "advancedFormat",
        "title": "高级格式化",
        "tsType": "{\n  enable: nasl.core.Boolean;\n  value: nasl.core.String;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "是否自动获得焦点",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showRightNowButton",
        "title": "此刻按钮",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "点击可快捷选择当前时间",
        "docDescription": "是否展示此刻按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "rightNowTitle",
        "title": "此刻按钮名称",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持自定义修改原此刻按钮名称",
        "if": "_ => _.showRightNowButton === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFooterButton",
        "title": "取消/确定按钮",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "控制弹出层的关闭和设置的生效与否",
        "docDescription": "是否展示取消/确定按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "cancelTitle",
        "title": "取消按钮名称",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持自定义修改原取消按钮名称",
        "if": "_ => _.showFooterButton === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "okTitle",
        "title": "确定按钮名称",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "确定按钮的显示名称，如果为空则不显示",
        "docDescription": "支持自定义修改原确定按钮名称",
        "if": "_ => _.showFooterButton === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "时间",
              "value": "time"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "preIcon",
        "title": "前缀图标",
        "tsType": "'time' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "time"
          },
          "playground": []
        },
        "docDescription": "支持配置选择框前缀图标，仅支持时间图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "时间",
              "value": "time"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "suffixIcon",
        "title": "后缀图标",
        "tsType": "'time' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持配置选择框后缀图标，仅支持时间图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "弹出层位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "body"
          },
          "playground": []
        },
        "description": "设置弹出层依据哪个元素定位位置，可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。",
        "docDescription": "设置添加到哪个元素：引用元素下、全局body"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "可点击清除按钮一键清除内容",
        "docDescription": "是否展示清除按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置时间选择输入框宽度大小",
        "docDescription": "支持占满、巨大、大、中型、正常、小、迷你"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置时间选择输入框高度大小",
        "docDescription": "支持占满、巨大、大、中型、正常、小、迷你"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  date: nasl.core.String;\n  time: nasl.core.String;\n}) => any",
        "description": "时间改变时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-time-picker value=\"15:46:33\"></u-time-picker>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-time-picker.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-time-picker.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UDateTimePicker",
    "alias": "日期时间选择",
    "title": "日期时间选择",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-date-time-picker",
    "description": "日期时间选择器",
    "icon": "date-time-picker",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "秒",
              "value": "second"
            },
            {
              "title": "分",
              "value": "minute"
            }
          ]
        },
        "name": "minUnit",
        "title": "最小单位",
        "tsType": "'second' | 'minute'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "second"
          },
          "playground": []
        },
        "description": "最小时间单位",
        "docDescription": "最小时间单位，支持秒或分",
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "range",
        "title": "区间选择",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "是否支持进行日期时间区间选择，关闭则为日期时间点选择",
        "onChange": [
          {
            "clear": [
              "placeholderRight"
            ]
          }
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "默认显示的日期时间值，格式如2018-08-08 08:08:08",
        "docDescription": "默认显示的日期时间值",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "startDate",
        "title": "起始值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "默认显示的起始日期时间值，格式如2018-08-08 08:08:08",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "endDate",
        "title": "结束值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "默认显示的结束日期时间值，格式如2018-08-08 08:08:08",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "minDate",
        "title": "最小日期时间值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "最小可选的日期时间值，填写null则不限制，日期填写格式为“yyyy-mm-dd  00:00:00”",
        "docDescription": "支持输入的最小日期时间"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "maxDate",
        "title": "最大日期时间值",
        "tsType": "nasl.core.String | nasl.core.Decimal | nasl.core.Date",
        "description": "最大可选的日期时间值，填写null则不限制，日期填写格式为“yyyy-mm-dd  00:00:00”",
        "docDescription": "支持输入的最大日期时间"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "yearDiff",
        "title": "最小年份差值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "20",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "最小可选年份值与当前年份值的差值",
        "docDescription": "最小可选年份值为当前年减去此值",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "yearAdd",
        "title": "最大年份差值",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "20",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "最大可选年份值与当前年份值的差值",
        "docDescription": "最大可选年份值为当前年加上此值",
        "if": "_ => _.range !== true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "中国（2023年7月26日）",
              "value": "YYYY年M月D日"
            },
            {
              "title": "ISO（2023-07-26）",
              "value": "YYYY-MM-DD"
            },
            {
              "title": "US（7/26/2023）",
              "value": "M/D/YYYY"
            },
            {
              "title": "EU（26/7/2023）",
              "value": "D/M/YYYY"
            }
          ]
        },
        "name": "showDateFormatter",
        "title": "日期展示格式",
        "tsType": "'YYYY年M月D日' | 'YYYY-MM-DD' | 'M/D/YYYY' | 'D/M/YYYY'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "YYYY-MM-DD"
          },
          "playground": []
        },
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "12: 09: 09",
              "if": "_ => _.minUnit === 'second'",
              "value": "HH:mm:ss"
            },
            {
              "title": "12时09分09秒",
              "if": "_ => _.minUnit === 'second'",
              "value": "HH时mm分ss秒"
            },
            {
              "title": "12: 09",
              "if": "_ => _.minUnit === 'minute'",
              "value": "HH:mm"
            },
            {
              "title": "12时09分",
              "if": "_ => _.minUnit === 'minute'",
              "value": "HH时mm分"
            }
          ]
        },
        "name": "showTimeFormatter",
        "title": "时间展示格式",
        "tsType": "'HH:mm:ss' | 'HH时mm分ss秒' | 'HH:mm' | 'HH时mm分'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "HH:mm:ss"
          },
          "playground": []
        },
        "if": "_ => _.advancedFormat.enable === false"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "bindHide": true,
        "tabKind": "property",
        "name": "advancedFormat",
        "title": "高级格式化",
        "tsType": "{\n  enable: nasl.core.Boolean;\n  value: nasl.core.String;\n}",
        "defaultValue": {
          "concept": "DefaultValue",
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择时间"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本",
        "docDescription": "未选择状态下的提示文案"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholderRight",
        "title": "右侧占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择时间"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本（右侧）",
        "docDescription": "日期选择框无内容时的提示信息，支持自定义编辑, 在没有设置的时候使用placeholder作为右侧占位符内容",
        "if": "_ => _.range === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "autofocus",
        "title": "自动获取焦点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否自动获取焦点",
        "docDescription": "是否自动聚焦",
        "designerValue": false
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showRightNowButton",
        "title": "此刻按钮",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "点击可快捷选择当前时间",
        "docDescription": "快捷选择当前时间"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "rightNowTitle",
        "title": "此刻按钮名称",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "支持自定义修改原此刻按钮名称。",
        "if": "_ => _.showRightNowButton === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFooterButton",
        "title": "取消/确定按钮",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "控制弹出层的关闭和设置的生效与否",
        "docDescription": "是否显示取消/确定按钮。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "cancelTitle",
        "title": "取消按钮名称",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "取消按钮的显示名称，如果为空则不显示",
        "docDescription": "支持自定义修改原取消按钮名称",
        "if": "_ => _.showFooterButton === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "okTitle",
        "title": "确定按钮名称",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "description": "确定按钮的显示名称，如果为空则不显示",
        "docDescription": "支持自定义修改原确定按钮名称",
        "if": "_ => _.showFooterButton === true"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "JSON",
              "value": "json"
            },
            {
              "title": "Unix 时间戳",
              "value": "timestamp"
            },
            {
              "title": "Date 对象",
              "value": "date"
            },
            {
              "title": "YYYY-MM-DD HH: mm: ss",
              "value": "format"
            }
          ]
        },
        "name": "converter",
        "title": "转换器",
        "tsType": "'json' | 'timestamp' | 'date' | 'format'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "json"
          },
          "playground": []
        },
        "docDescription": "- SON、Unix 时间戳、 Date 对象、 YYYY-MM-DD HH:mm:ss"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "日历",
              "value": "calendar"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "preIcon",
        "title": "前缀图标",
        "tsType": "'calendar' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "calendar"
          },
          "playground": []
        },
        "docDescription": "选择并展示前缀图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "日历",
              "value": "calendar"
            },
            {
              "title": "暂无",
              "value": ""
            }
          ]
        },
        "name": "suffixIcon",
        "title": "后缀图标",
        "tsType": "'calendar' | ''",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "选择并展示后缀图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "弹出层位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "body"
          },
          "playground": []
        },
        "description": "设置弹出层依据哪个元素定位位置，可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。",
        "docDescription": "设置添加到哪个元素，引用元素下、全局body"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "description": "可点击清除按钮一键清除内容",
        "docDescription": "是否展示清除按钮"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "弹出状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "弹出状态分为“True(弹出)/False(关闭)”，默认为“关闭”"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "readonly",
        "title": "只读",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "正常显示，但禁止选择/输入"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "preview",
        "title": "预览",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示预览态",
        "docDescription": ""
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置日期时间选择输入框宽度大小",
        "docDescription": "支持占满、巨大、大、中型、正常、小、迷你。"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置日期时间选择输入框高度大小",
        "docDescription": "支持占满、巨大、大、中型、正常、小、迷你。"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "值选择时",
        "tsType": "(event: {\n  date: nasl.core.String;\n  time: nasl.core.String;\n}) => any",
        "description": "日期值发生变化触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "值变化时",
        "tsType": "(event: {\n  date: nasl.core.String;\n  time: nasl.core.String;\n}) => any",
        "description": "选择新时间触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-date-time-picker value=\"2018-08-08\" converter=\"json\"></u-date-time-picker>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-date-time-picker.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Selector",
    "name": "UTreeSelectNew",
    "alias": "树选择",
    "title": "树选择",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-tree-select-new",
    "description": "树选择",
    "icon": "tree-view",
    "tsTypeParams": "T, V, M extends nasl.core.Boolean",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSource",
        "title": "数据源",
        "tsType": "nasl.collection.List<T> | {\n  list: nasl.collection.List<T>;\n  total: nasl.core.Integer;\n}",
        "description": "展示数据的输入源，可设置为集合类型变量（List<T>）或输出参数为集合类型的逻辑。",
        "docDescription": "支持动态绑定集合类型变量（List<T>）或输出参数为集合类型的",
        "designerValue": [
          {},
          {},
          {}
        ]
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "dataSchema",
        "title": "数据类型",
        "tsType": "T",
        "description": "数据源返回的数据结构的类型，自动识别类型进行展示说明",
        "docDescription": "该属性为只读状态，当数据源动态绑定集合List<T>后，会自动识别T的类型并进行展示"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "textField",
        "title": "文本字段",
        "tsType": "(item: T) => any",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "text"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于显示文本的属性名称"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "valueField",
        "title": "值字段",
        "tsType": "(item: T) => V",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "value"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识选中值的属性",
        "docDescription": "集合的元素类型中，用于标识选中值的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "parentField",
        "title": "父级值字段",
        "tsType": "(item: T) => any",
        "description": "集合的元素类型中，用于标识父节点的属性",
        "docDescription": "集合的元素类型中，用于标识父节点的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "childrenField",
        "title": "子级值字段",
        "tsType": "(item: T) => nasl.collection.List<any>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "children"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识子节点的属性，默认为children",
        "docDescription": "集合的元素类型中，用于标识子节点的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "expandedField",
        "title": "节点是否展开字段",
        "tsType": "(item: T) => nasl.collection.List<any>",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "expanded"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识节点是否展开的属性，默认为expanded",
        "docDescription": "集合的元素类型中，用于标识子节点的属性"
      },
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "sync": true,
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "V",
        "description": "选择后，所选中的值",
        "docDescription": "通过组件进行选择后，最终选中的值，支持双向绑定到变量"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "checkable",
        "title": "可多选",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否开启多选模式，显示多选框",
        "docDescription": "开启后支持选中多项。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "placeholder",
        "title": "占位符",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "请选择"
          },
          "playground": []
        },
        "description": "为空时显示的占位符文本"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "checkControlled",
        "title": "父子节点独立选择",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "开启后父节点选择不会全选子节点，子节点选择不会联动父节点",
        "docDescription": "开启后父节点选择不会全选子节点，子节点选择不会联动父节点"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "PropertySelectSetter"
        },
        "name": "disabledField",
        "title": "不可选择字段",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "disabled"
          },
          "playground": []
        },
        "description": "集合的元素类型中，用于标识节点的disabled属性",
        "docDescription": "集合的元素类型中，用于标识父级字段的属性，支持自定义变更"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "clearable",
        "title": "可清除",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置是否开启可清除模式",
        "docDescription": "开启后支持清除按钮。默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "renderOptimize",
        "title": "只渲染激活节点",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "设置只渲染tree激活子节点，用于渲染性能提升。",
        "docDescription": "开启后只渲染激活节点，默认关闭。"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "引用元素下",
              "value": "reference"
            },
            {
              "title": "全局body",
              "value": "body"
            }
          ]
        },
        "name": "appendTo",
        "title": "弹出层位置依据",
        "tsType": "'reference' | 'body'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "reference"
          },
          "playground": []
        },
        "description": "设置弹出层依据哪个元素定位位置，可选值：'body'表示添加到 document.body，'reference'表示添加到参考元素中。",
        "docDescription": "设置弹出层在html里的位置，支持引用元素下、全局body设置。当把当前组件放入某个组件，而组件overflow是hidden的时候，需要设置为全局body"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "width",
        "title": "宽度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置选择框宽度大小",
        "docDescription": "设置选择框宽度大小，可选占满、巨大、大、中型、正常、小、迷你"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "占满",
              "value": "full"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "中型",
              "value": "medium"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "迷你",
              "value": "mini"
            }
          ]
        },
        "name": "height",
        "title": "高度",
        "tsType": "'full' | 'huge' | 'large' | 'medium' | 'normal' | 'small' | 'mini'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "设置选择框高度大小",
        "docDescription": "设置选择框高度大小，可选占满、巨大、大、中型、正常、小、迷你。"
      }
    ],
    "readableProps": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "data",
        "title": "数据",
        "tsType": "UTreeSelectNewOptions<T, V, M>['dataSource']"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "value",
        "title": "选中值",
        "tsType": "UTreeSelectNewOptions<T, V, M>['value']"
      }
    ],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "change",
        "title": "改变后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  node: T;\n  oldNode: T;\n}) => any",
        "description": "修改时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "select",
        "title": "选择后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  node: T;\n  oldNode: T;\n}) => any",
        "description": "选择某一项时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "check",
        "title": "选中或取消后",
        "tsType": "(event: {\n  checked: nasl.core.Boolean;\n  oldChecked: nasl.core.Boolean;\n  node: T;\n  values: nasl.collection.List<V>;\n}) => any",
        "description": "选中/取消节点时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-load",
        "title": "加载前",
        "tsType": "(event: any) => any",
        "description": "加载前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "load",
        "title": "加载后",
        "tsType": "(event: any) => any",
        "description": "加载后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-clear",
        "title": "清空前",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  values: nasl.collection.List<V>;\n  oldValues: nasl.collection.List<V>;\n}) => any",
        "description": "清空前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "clear",
        "title": "清空后",
        "tsType": "(event: {\n  value: V;\n  oldValue: V;\n  values: nasl.collection.List<V>;\n  oldValues: nasl.collection.List<V>;\n}) => any",
        "description": "清空时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "重新加载"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "snippets": [
          {
            "title": "子节点",
            "code": "<u-tree-view-node-new><template #item>选项</template></u-tree-view-node-new>"
          }
        ],
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<UTreeViewNodeNew<T, V>>",
        "params": [],
        "description": "插入`<u-tree-view-node-new>`子组件"
      },
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "项",
        "tsType": "(current: Current<T>) => Array<ViewComponent>",
        "params": [
          {
            "concept": "Param",
            "name": "current",
            "description": "",
            "typeAnnotation": {
              "typeKind": "generic",
              "typeName": "Current",
              "typeNamespace": "nasl.ui",
              "concept": "TypeAnnotation",
              "inferred": false,
              "ruleMap": {},
              "typeArguments": [
                {
                  "concept": "TypeAnnotation",
                  "typeKind": "typeParam",
                  "inferred": false,
                  "ruleMap": {}
                }
              ]
            }
          }
        ],
        "description": "自定义选项的结构和样式"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-tree-select-new placeholder=\"请选择\">\n<template #item=\"current\">\n</template>\n</u-tree-select-new>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-tree-select-new.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Chart",
    "name": "ULinearProgress",
    "alias": "线形进度条",
    "title": "线形进度条",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-linear-progress",
    "description": "以线条的形式描述当前进度",
    "icon": "linear-progress",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "percent",
        "title": "当前进度(%)",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "进度条显示的进度百分比，1-100之间的数字",
        "docDescription": "进度条显示的进度百分比，1-100之间的数字"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "横向",
              "value": "horizontal"
            },
            {
              "title": "竖向",
              "value": "vertical"
            }
          ]
        },
        "name": "direction",
        "title": "进度条方向",
        "tsType": "'horizontal' | 'vertical'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "horizontal"
          },
          "playground": []
        },
        "docDescription": "横向、竖向"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "巨大",
              "value": "huge"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'small' | 'normal' | 'large' | 'huge'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "进度条高度大小",
        "docDescription": "支持小、正常、大、巨大"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或HTML。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-linear-progress :percent=\"36\"></u-linear-progress>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-linear-progress.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Chart",
    "name": "UCircularProgress",
    "alias": "圆型进度条",
    "title": "圆形进度条",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-circular-progress",
    "description": "以圆形的形式描述当前进度",
    "icon": "circular-progress",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "percent",
        "title": "当前进度(%)",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "进度条显示的进度百分比，1-100之间的数字",
        "docDescription": "进度条显示的进度百分比，1-100之间的数字"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "巨大",
              "value": "huge"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'small' | 'normal' | 'large' | 'huge'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "进度条大小",
        "docDescription": "支持小、正常、大、巨大"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "percent",
        "title": "分数展示",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "分数展示自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-circular-progress :percent=\"45\" :showPercentSlot=\"true\">\n<template #percent>\n<u-text text=\"45%\"></u-text>\n</template>\n</u-circular-progress>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-circular-progress.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Feedback",
    "name": "UPopupCombination",
    "alias": "弹出框",
    "title": "弹出框",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-popup-combination",
    "description": "点击/鼠标移入元素，弹出气泡式的卡片浮层。",
    "icon": "popup",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "title",
        "title": "标题",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "标题"
          },
          "playground": []
        },
        "description": "弹出框标题",
        "docDescription": "弹出框的标题，显示在弹出框内容上方"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "上",
              "value": "top"
            },
            {
              "title": "下",
              "value": "bottom"
            },
            {
              "title": "左",
              "value": "left"
            },
            {
              "title": "右",
              "value": "right"
            },
            {
              "title": "上左",
              "value": "top-start"
            },
            {
              "title": "上右",
              "value": "top-end"
            },
            {
              "title": "下左",
              "value": "bottom-start"
            },
            {
              "title": "下右",
              "value": "bottom-end"
            },
            {
              "title": "左上",
              "value": "left-start"
            },
            {
              "title": "左下",
              "value": "left-end"
            },
            {
              "title": "右上",
              "value": "right-start"
            },
            {
              "title": "右下",
              "value": "right-end"
            }
          ]
        },
        "name": "placement",
        "title": "弹出方向",
        "tsType": "'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "bottom-start"
          },
          "playground": []
        },
        "description": "弹出层的弹出方向",
        "docDescription": "设置弹出框的弹出方向"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "hideDelay",
        "title": "消失延迟时间",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "200",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "当触发方式为'悬浮'时，提示内容消失延迟时间，单位是毫秒(ms)",
        "docDescription": "当触发方式为悬浮时，弹出框内容消失的延迟时间，单位为ms"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "followCursor",
        "title": "跟随鼠标",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "docDescription": "控制弹出框弹出位置，开启后会以鼠标点击位置为基点弹出，关闭则为默认弹出位置"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "行内展示",
              "value": "inline"
            },
            {
              "title": "块级展示，宽度会充满父元素",
              "value": "block"
            }
          ]
        },
        "name": "display",
        "title": "展示方式",
        "tsType": "'inline' | 'block'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "inline"
          },
          "playground": []
        },
        "docDescription": "控制展示方式，支持行内展示、块级展示（占据整行）"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "ellipsis",
        "title": "文本过长省略",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "文字过长是否省略显示。",
        "docDescription": "开启时该项文本过长会省略显示，默认不开启为换行显示"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "点击",
              "value": "click"
            },
            {
              "title": "悬浮",
              "value": "hover"
            },
            {
              "title": "右击",
              "value": "right-click"
            },
            {
              "title": "双击",
              "value": "double-click"
            },
            {
              "title": "手动",
              "value": "manual"
            }
          ]
        },
        "name": "trigger",
        "title": "触发方式",
        "tsType": "'click' | 'hover' | 'right-click' | 'double-click' | 'manual'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "click"
          },
          "playground": []
        },
        "description": "弹出框的触发方式",
        "docDescription": "支持配置弹出框弹出的触发方式，支持点击、悬浮、右击、双击、手动共5种方式。\n- 点击：左键单击弹出框触发组件。\n- 悬浮：鼠标悬停在弹出框触发组件区域。\n- 右击：右键单击弹出框触发组件。\n- 双击：左键双击弹出框触发组件。\n- 手动：无法直接通过弹出框组件触发，需要手动配置弹出框调用逻辑。"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "opened",
        "title": "弹出状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "弹出状态分为“True(弹出)/False(关闭)”，默认为“弹出”",
        "docDescription": "控制弹出框的默认状态。开启时弹出框默认为弹出状态，关闭时弹出框默认为关闭状态"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）",
        "docDescription": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-open",
        "title": "弹出前",
        "tsType": "(event: any) => any",
        "description": "弹出前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "open",
        "title": "弹出时",
        "tsType": "(event: any) => any",
        "description": "弹出时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-close",
        "title": "隐藏前",
        "tsType": "(event: any) => any",
        "description": "隐藏前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "隐藏后",
        "tsType": "(event: any) => any",
        "description": "隐藏时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-toggle",
        "title": "展开折叠前",
        "tsType": "(event: {\n  opened: nasl.core.Boolean;\n}) => any",
        "description": "@deprecated"
      },
      {
        "concept": "EventDeclaration",
        "name": "toggle",
        "title": "展开折叠后",
        "tsType": "(event: {\n  opened: nasl.core.Boolean;\n}) => any",
        "description": "@deprecated"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "弹出实例。",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭实例。",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "切换弹出/关闭状态。",
        "params": [
          {
            "concept": "Param",
            "name": "opened",
            "description": "'可选。弹出/关闭状态'"
          }
        ],
        "returns": [],
        "name": "toggle",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "更新 popper 实例。参考 [Popper.update()](https://popper.js.org/popper-documentation.html#Popper.update)。",
        "params": [],
        "returns": [],
        "name": "update",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "在下次 UI 渲染时一块更新 popper 实例，比`update()`性能要好。参考 [Popper.scheduleUpdate()](https://popper.js.org/popper-documentation.html#Popper.scheduleUpdate)。",
        "params": [],
        "returns": [],
        "name": "scheduleUpdate",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "自定义弹出的内容。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "reference",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹出层触发节点。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-popup-combination>\n<template #reference>\n<u-button color=\"primary\" text=\"触发弹出框组件，可删除替换\"></u-button>\n</template>\n<u-text>内容</u-text>\n</u-popup-combination>\n</template>",
        "screenshot": "",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-popup-combination.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Feedback",
    "name": "UModal",
    "alias": "弹窗",
    "title": "弹窗",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-modal",
    "description": "弹窗",
    "icon": "modal",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示头部栏",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFoot",
        "title": "显示底部栏",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        }
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "暂无",
              "value": ""
            },
            {
              "title": "成功",
              "value": "success"
            },
            {
              "title": "警告",
              "value": "warning"
            },
            {
              "title": "错误",
              "value": "error"
            }
          ]
        },
        "name": "icon",
        "title": "提示图标",
        "tsType": "'' | 'success' | 'warning' | 'error'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": ""
          },
          "playground": []
        },
        "docDescription": "可设置成功、警告、错误，弹窗中会自动添加图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "maskClose",
        "title": "点击遮罩关闭",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "点击遮罩关闭弹窗",
        "docDescription": "开启时，点击遮罩则自动关闭弹窗，若关闭，需要手动设置关闭事件，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "visible",
        "title": "显示状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示状态分为“True(打开)/False(关闭)”，默认为“打开”",
        "docDescription": "开启时进入页面即显示弹窗，默认关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            },
            {
              "title": "巨大",
              "value": "huge"
            },
            {
              "title": "自适应",
              "value": "auto"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'small' | 'normal' | 'large' | 'huge' | 'auto'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "弹窗的尺寸"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "before-open",
        "title": "打开前",
        "tsType": "(event: any) => any",
        "description": "打开弹窗前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "open",
        "title": "打开后",
        "tsType": "(event: any) => any",
        "description": "打开弹窗后触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-close",
        "title": "关闭前",
        "tsType": "(event: any) => any",
        "description": "关闭弹窗前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "关闭后",
        "tsType": "(event: {\n  ok: nasl.core.Boolean;\n}) => any",
        "description": "关闭弹窗时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "打开弹窗",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭弹窗",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹窗标题自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "head",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹窗头部自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "body",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹窗中部自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "foot",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹窗尾部自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "heading",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹框小标题自定义"
      },
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "默认",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "弹窗内容自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-modal>\n<template #title>\n<u-text text=\"标题\"></u-text>\n</template>\n<template #body>\n<u-text>内容</u-text>\n</template>\n<template #foot>\n<u-linear-layout justify=\"center\">\n<u-button color=\"primary\">确 定</u-button>\n<u-button>取 消</u-button>\n</u-linear-layout>\n</template>\n</u-modal>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-modal.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-modal.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Feedback",
    "name": "UDrawer",
    "alias": "抽屉",
    "title": "抽屉",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-drawer",
    "description": "抽屉",
    "icon": "drawer",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "左",
              "value": "left"
            },
            {
              "title": "右",
              "value": "right"
            },
            {
              "title": "上",
              "value": "top"
            },
            {
              "title": "下",
              "value": "bottom"
            }
          ]
        },
        "name": "placement",
        "title": "抽屉位置",
        "tsType": "'left' | 'right' | 'top' | 'bottom'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "right"
          },
          "playground": []
        },
        "description": "抽屉弹出的位置",
        "docDescription": "支持选择抽屉的显示位置，支持左、右两个位置"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showHead",
        "title": "显示顶部栏",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "控制抽屉顶部栏的开启和关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "showFoot",
        "title": "显示底部栏",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "docDescription": "控制抽屉底部栏的开启和关闭"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "maskClosable",
        "title": "点击遮罩关闭",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "true"
          },
          "playground": []
        },
        "description": "点击遮罩关闭抽屉",
        "docDescription": "控制抽屉打开时，点击遮罩区域的作用，默认开启。\n- 开启：点击遮罩区域则自动关闭抽屉。\n- 关闭：点击遮罩区域无实际作用"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "sync": true,
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "visible",
        "title": "显示状态",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "显示状态分为“True(打开)/False(关闭)”，默认为“打开”",
        "docDescription": "控制抽屉是否进入页面时自动显示。开启表示自动显示，关闭表示不自动显示"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "小",
              "value": "small"
            },
            {
              "title": "正常",
              "value": "normal"
            },
            {
              "title": "大",
              "value": "large"
            }
          ]
        },
        "name": "size",
        "title": "尺寸",
        "tsType": "'small' | 'normal' | 'large'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "normal"
          },
          "playground": []
        },
        "description": "抽屉的尺寸",
        "docDescription": "支持配置抽屉的宽度或者高度，支持小、正常、大、三个尺寸"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "open",
        "title": "打开时",
        "tsType": "(event: any) => any",
        "description": "打开抽屉时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "opened",
        "title": "打开后",
        "tsType": "(event: any) => any",
        "description": "打开抽屉后触发，动画执行完成后"
      },
      {
        "concept": "EventDeclaration",
        "name": "before-close",
        "title": "关闭前",
        "tsType": "(event: {\n  ok: nasl.core.Boolean;\n}) => any",
        "description": "关闭抽屉前触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "关闭时",
        "tsType": "(event: {\n  ok: nasl.core.Boolean;\n}) => any",
        "description": "关闭抽屉时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "打开抽屉",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭抽屉",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "title",
        "title": "头部",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "body",
        "title": "内容区",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      },
      {
        "concept": "SlotDeclaration",
        "name": "foot",
        "title": "底部",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "插入文本或 HTML。"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-drawer>\n<template #title>\n<u-text text=\"标题\"></u-text>\n</template>\n<template #body>\n<u-text>内容</u-text>\n</template>\n<template #foot>\n<u-linear-layout justify=\"start\">\n<u-button color=\"primary\">确 定</u-button>\n<u-button>取 消</u-button>\n</u-linear-layout>\n</template>\n</u-drawer>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-drawer.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Feedback",
    "name": "UToastSingle",
    "alias": "弹出消息",
    "title": "弹出消息",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-toast-single",
    "description": "弹出消息",
    "icon": "toast",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "text",
        "title": "提示内容",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "弹出消息"
          },
          "playground": []
        },
        "description": "默认提示内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "成功",
              "value": "success"
            },
            {
              "title": "警告",
              "value": "warning"
            },
            {
              "title": "错误",
              "value": "error"
            },
            {
              "title": "加载中",
              "value": "loading"
            },
            {
              "title": "自定义",
              "value": "custom"
            }
          ]
        },
        "name": "color",
        "title": "消息类型",
        "tsType": "'success' | 'warning' | 'error' | 'loading' | 'custom'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "custom"
          },
          "playground": []
        },
        "description": "提示的类型"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "customIcon",
        "title": "自定义图标",
        "tsType": "nasl.core.String",
        "if": "_ => _.color === 'custom'"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "duration",
        "title": "停留时间",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "2000",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "自动关闭的延时，单位毫秒。设为 0 时不自动关闭"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "open",
        "title": "弹出后事件",
        "tsType": "(event: {\n  text: nasl.core.String;\n  color: nasl.core.String;\n  duration: nasl.core.Integer;\n  timestamp: nasl.core.Integer;\n}) => any",
        "description": "弹出提示时触发"
      },
      {
        "concept": "EventDeclaration",
        "name": "close",
        "title": "关闭后",
        "tsType": "(event: {\n  text: nasl.core.String;\n  color: nasl.core.String;\n  duration: nasl.core.Integer;\n  timestamp: nasl.core.Integer;\n}) => any",
        "description": "关闭提示时触发"
      }
    ],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "打开轻提示",
        "params": [],
        "returns": [],
        "name": "open",
        "title": "undefined"
      },
      {
        "concept": "LogicDeclaration",
        "description": "关闭轻提示",
        "params": [],
        "returns": [],
        "name": "close",
        "title": "undefined"
      }
    ],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "item",
        "title": "项",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "项自定义"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-toast-single text=\"弹出消息\" :duration=\"2000\" color=\"custom\"></u-toast-single>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-toast.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Effects",
    "name": "EWatermark",
    "alias": "水印",
    "title": "水印",
    "concept": "ViewComponentDeclaration",
    "kebabName": "e-watermark",
    "description": "在页面显示水印",
    "icon": "watermark",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "text",
        "title": "文本",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "水印"
          },
          "playground": []
        },
        "description": "水印文本显示内容",
        "docDescription": "设置水印文本内容"
      },
      {
        "concept": "PropDeclaration",
        "group": "样式属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "opacity",
        "title": "不透明度",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "0.1",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Decimal",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "0-1之间的小数，0代表完全透明，1代表完全不透明",
        "docDescription": "设置水印透明度，参数为0-1之间的小数，0代表完全透明，1代表完全不透明"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<e-watermark text=\"水印\"></e-watermark>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/e-watermark.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/e-watermark.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Effects",
    "name": "UCopy",
    "alias": "复制",
    "title": "复制",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-copy",
    "description": "复制文本到剪切板",
    "icon": "copy",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "数据属性",
        "tabKind": "property",
        "name": "value",
        "title": "复制的值",
        "tsType": "nasl.core.String",
        "description": "需要复制的值"
      },
      {
        "concept": "PropDeclaration",
        "group": "状态属性",
        "tabKind": "property",
        "setter": {
          "concept": "SwitchSetter"
        },
        "name": "disabled",
        "title": "禁用",
        "tsType": "nasl.core.Boolean",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "BooleanLiteral",
            "value": "false"
          },
          "playground": []
        },
        "description": "置灰显示，且禁止任何交互（焦点、点击、选择、输入等）"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "copy",
        "title": "复制成功后",
        "tsType": "(event: {\n  value: nasl.core.String;\n}) => any",
        "description": "内容复制成功后触发"
      }
    ],
    "methods": [],
    "slots": [
      {
        "concept": "SlotDeclaration",
        "name": "default",
        "title": "undefined",
        "tsType": "() => Array<ViewComponent>",
        "params": [],
        "description": "修改默认触发元素"
      }
    ],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "复制链接",
        "description": "",
        "code": "<template>\n<u-copy value=\"需要 copy 的内容\">\n<u-link text=\"复制\"></u-link>\n</u-copy>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-copy.vue/screenshots/0.png",
        "drawing": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-copy.vue/drawings/0.svg"
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UTaskbox",
    "alias": "任务箱",
    "title": "任务箱",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-taskbox",
    "description": "用于展示流程任务箱",
    "icon": "taskbox",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "icon",
        "title": "图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "通知"
          },
          "playground": []
        },
        "docDescription": "图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "size",
        "title": "每页条数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "每页展示的任务数量",
        "docDescription": " 每页展示的任务数量"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "interval",
        "title": "时间间隔（秒）",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "30",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "任务刷新时间间隔，单位：秒",
        "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/20.%E6%B5%81%E7%A8%8B/110.%E4%BB%BB%E5%8A%A1%E7%AE%B1.html",
        "docDescription": "任务刷新时间间隔"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "任务箱",
        "description": "",
        "code": "<template>\n<u-taskbox icon=\"notice\"></u-taskbox>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-taskbox.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UProcessTaskbox",
    "alias": "任务箱",
    "title": "任务箱",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-process-taskbox",
    "description": "用于展示流程任务箱",
    "icon": "taskbox",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "IconSetter"
        },
        "name": "icon",
        "title": "图标",
        "tsType": "nasl.core.String",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "通知"
          },
          "playground": []
        },
        "docDescription": "图标"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "size",
        "title": "每页条数",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "5",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "每页展示的任务数量",
        "docDescription": " 每页展示的任务数量"
      },
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "setter": {
          "concept": "NumberInputSetter"
        },
        "name": "interval",
        "title": "时间间隔（秒）",
        "tsType": "nasl.core.Decimal",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "NumericLiteral",
            "value": "30",
            "typeAnnotation": {
              "concept": "TypeAnnotation",
              "typeKind": "primitive",
              "typeName": "Integer",
              "typeNamespace": "nasl.core",
              "inferred": false,
              "ruleMap": {}
            }
          },
          "playground": []
        },
        "description": "任务刷新时间间隔，单位：秒",
        "tooltipLink": "https://help.lcap.163yun.com/99.%E5%8F%82%E8%80%83/40.%E9%A1%B5%E9%9D%A2IDE/30.%E9%A1%B5%E9%9D%A2%E7%BB%84%E4%BB%B6/05.PC%E9%A1%B5%E9%9D%A2%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/20.%E6%B5%81%E7%A8%8B/110.%E4%BB%BB%E5%8A%A1%E7%AE%B1.html",
        "docDescription": "任务刷新时间间隔"
      }
    ],
    "readableProps": [],
    "events": [
      {
        "concept": "EventDeclaration",
        "name": "click",
        "title": "点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下并释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "dblclick",
        "title": "双击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上双击鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "contextmenu",
        "title": "右键点击",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在右键菜单显示前触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mousedown",
        "title": "鼠标按下",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上按下任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseup",
        "title": "鼠标释放",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "在元素上释放任意鼠标按钮时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseenter",
        "title": "鼠标移入",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移入元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "mouseleave",
        "title": "鼠标移出",
        "tsType": "(event: {\n  altKey: nasl.core.Boolean;\n  button: nasl.core.Integer;\n  clientX: nasl.core.Integer;\n  clientY: nasl.core.Integer;\n  ctrlKey: nasl.core.Boolean;\n  metaKey: nasl.core.Boolean;\n  movementX: nasl.core.Integer;\n  movementY: nasl.core.Integer;\n  offsetX: nasl.core.Integer;\n  offsetY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  screenX: nasl.core.Integer;\n  screenY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "鼠标移出元素时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "focus",
        "title": "获得焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "获得焦点时触发。"
      },
      {
        "concept": "EventDeclaration",
        "name": "blur",
        "title": "失去焦点",
        "tsType": "(event: {\n  cancelBubble: nasl.core.Boolean;\n  detail: nasl.core.String;\n  layerX: nasl.core.Integer;\n  layerY: nasl.core.Integer;\n  pageX: nasl.core.Integer;\n  pageY: nasl.core.Integer;\n  which: nasl.core.Integer;\n}) => any",
        "description": "失去焦点时触发。"
      }
    ],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-process-taskbox icon=\"notice\"></u-process-taskbox>\n</template>",
        "screenshot": "https://static-vusion.163yun.com/packages/cloud-ui.vusion@0.22.0/src/components/u-process-taskbox.vue/screenshots/0.png",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UProcessMyprocess",
    "alias": "我的流程",
    "title": "我的流程",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-process-myprocess",
    "description": "",
    "icon": "processmyprocess",
    "tsTypeParams": "",
    "props": [],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-process-myprocess></u-process-myprocess>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UProcessButton",
    "alias": "流程按钮",
    "title": "流程按钮",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-process-button",
    "description": "",
    "icon": "processbutton",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "bindHide": true,
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "页面跳转",
              "value": "destination"
            }
          ]
        },
        "name": "linkType",
        "title": "操作成功响应方式",
        "tsType": "'destination'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "destination"
          },
          "playground": []
        },
        "docDescription": "支持页面跳转、刷新当前页"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "name": "hrefAndTo",
        "title": "链接地址",
        "tsType": "nasl.core.String",
        "docDescription": "链接的详细地址"
      },
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "新窗口",
              "value": "_blank"
            },
            {
              "title": "当前窗口",
              "value": "_self"
            },
            {
              "title": "父级窗口",
              "value": "_parent"
            },
            {
              "title": "顶级窗口",
              "value": "_top"
            }
          ]
        },
        "name": "target",
        "title": "链接打开方式",
        "tsType": "'_blank' | '_self' | '_parent' | '_top'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "_self"
          },
          "playground": []
        },
        "description": "链接跳转的打开方式，父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则其打开方式同当前窗口。",
        "docDescription": "可选新窗口、父级窗口、当前窗口和顶级窗口，其中父级窗口和顶级窗口仅适用于iframe组件嵌套的情况，若不存在嵌套，则打开方式同当前窗口"
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-process-button></u-process-button>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UProcessInfo",
    "alias": "流程信息",
    "title": "流程信息",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-process-info",
    "description": "",
    "icon": "processinfo",
    "tsTypeParams": "",
    "props": [],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-process-info></u-process-info>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UProcessRecord",
    "alias": "流程记录",
    "title": "流程记录",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-process-record",
    "description": "",
    "icon": "table-view",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "交互属性",
        "tabKind": "property",
        "setter": {
          "concept": "EnumSelectSetter",
          "options": [
            {
              "title": "表格",
              "value": "table"
            },
            {
              "title": "时间线",
              "value": "timeline"
            }
          ]
        },
        "name": "type",
        "title": "展示类型",
        "tsType": "'table' | 'timeline'",
        "defaultValue": {
          "concept": "DefaultValue",
          "expression": {
            "concept": "StringLiteral",
            "value": "table"
          },
          "playground": []
        },
        "docDescription": ""
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-process-record></u-process-record>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  },
  {
    "group": "Process",
    "name": "UProcessGraph",
    "alias": "流程图",
    "title": "流程图",
    "concept": "ViewComponentDeclaration",
    "kebabName": "u-process-graph",
    "description": "",
    "icon": "processinfo",
    "tsTypeParams": "",
    "props": [
      {
        "concept": "PropDeclaration",
        "group": "主要属性",
        "tabKind": "property",
        "name": "initialZoom",
        "title": "初始缩放比",
        "tsType": "nasl.core.String",
        "description": ""
      }
    ],
    "readableProps": [],
    "events": [],
    "methods": [
      {
        "concept": "LogicDeclaration",
        "description": "清除缓存，重新加载",
        "params": [],
        "returns": [],
        "name": "reload",
        "title": "undefined"
      }
    ],
    "slots": [],
    "children": [],
    "blocks": [
      {
        "concept": "ViewBlockWithImage",
        "title": "基本用法",
        "description": "",
        "code": "<template>\n<u-process-graph></u-process-graph>\n</template>",
        "screenshot": "",
        "drawing": ""
      }
    ],
    "themeVariables": []
  }
]
